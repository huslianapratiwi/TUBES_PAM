{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\nvar _get2 = _interopRequireDefault(require(\"@babel/runtime/helpers/get\"));\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\nvar _hammerjs = _interopRequireDefault(require(\"@egjs/hammerjs\"));\nvar _State = require(\"../State\");\nvar _PressGestureHandler2 = _interopRequireDefault(require(\"./PressGestureHandler\"));\nvar _utils = require(\"./utils\");\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\nvar LongPressGestureHandler = function (_PressGestureHandler) {\n  (0, _inherits2.default)(LongPressGestureHandler, _PressGestureHandler);\n  var _super = _createSuper(LongPressGestureHandler);\n  function LongPressGestureHandler() {\n    (0, _classCallCheck2.default)(this, LongPressGestureHandler);\n    return _super.apply(this, arguments);\n  }\n  (0, _createClass2.default)(LongPressGestureHandler, [{\n    key: \"updateHasCustomActivationCriteria\",\n    value: function updateHasCustomActivationCriteria(_ref) {\n      var maxDistSq = _ref.maxDistSq;\n      return !(0, _utils.isValidNumber)(maxDistSq);\n    }\n  }, {\n    key: \"getConfig\",\n    value: function getConfig() {\n      if (!this.hasCustomActivationCriteria) {\n        return {\n          shouldCancelWhenOutside: true,\n          maxDistSq: 10\n        };\n      }\n      return this.config;\n    }\n  }, {\n    key: \"getHammerConfig\",\n    value: function getHammerConfig() {\n      return (0, _extends2.default)({}, (0, _get2.default)((0, _getPrototypeOf2.default)(LongPressGestureHandler.prototype), \"getHammerConfig\", this).call(this), {\n        time: this.minDurationMs\n      });\n    }\n  }, {\n    key: \"getState\",\n    value: function getState(type) {\n      var _Hammer$INPUT_START$H;\n      return (_Hammer$INPUT_START$H = {}, (0, _defineProperty2.default)(_Hammer$INPUT_START$H, _hammerjs.default.INPUT_START, _State.State.ACTIVE), (0, _defineProperty2.default)(_Hammer$INPUT_START$H, _hammerjs.default.INPUT_MOVE, _State.State.ACTIVE), (0, _defineProperty2.default)(_Hammer$INPUT_START$H, _hammerjs.default.INPUT_END, _State.State.END), (0, _defineProperty2.default)(_Hammer$INPUT_START$H, _hammerjs.default.INPUT_CANCEL, _State.State.FAILED), _Hammer$INPUT_START$H)[type];\n    }\n  }, {\n    key: \"minDurationMs\",\n    get: function get() {\n      return (0, _utils.isnan)(this.config.minDurationMs) ? 251 : this.config.minDurationMs;\n    }\n  }, {\n    key: \"maxDist\",\n    get: function get() {\n      return (0, _utils.isnan)(this.config.maxDist) ? 9 : this.config.maxDist;\n    }\n  }]);\n  return LongPressGestureHandler;\n}(_PressGestureHandler2.default);\nvar _default = LongPressGestureHandler;\nexports.default = _default;","map":{"version":3,"sources":["LongPressGestureHandler.ts"],"names":["LongPressGestureHandler","PressGestureHandler","isnan","config","minDurationMs","maxDist","maxDistSq","isValidNumber","hasCustomActivationCriteria","shouldCancelWhenOutside","time","type","Hammer","INPUT_START","State","ACTIVE","INPUT_MOVE","INPUT_END","END","INPUT_CANCEL","FAILED"],"mappings":";;;;;;;;;;;;;AAEA;AAEA;AACA;AACA;AAAA;AAAA;AAAA,IAIMA,uBAAN;EAAA;EAAA;EAAA;IAAA;IAAA;EAAA;EAAA;IAAA;IAAA,wDAW2D;MAAA,IAArBM,SAAAA,QAAAA,SAAAA;MAClC,OAAO,CAACC,IAAAA,oBAAa,EAACD,SAAD,CAArB;IACD;EAAA;IAAA;IAAA,4BAEW;MACV,IAAI,CAAC,IAAA,CAAKE,2BAAV,EAAuC;QAGrC,OAAO;UACLC,uBAAuB,EAAE,IADpB;UAELH,SAAS,EAAE;QAFN,CAAP;MAID;MACD,OAAO,IAAA,CAAKH,MAAZ;IACD;EAAA;IAAA;IAAA,kCAEiB;MAChB;QAGEO,IAAI,EAAE,IAAA,CAAKN;MAAAA;IAEd;EAAA;IAAA;IAAA,yBAEQO,IAAD,EAAsC;MAAA;MAC5C,OAAO,kFACJC,iBAAM,CAACC,WAAR,EAAsBC,YAAK,CAACC,MADvB,wDAEJH,iBAAM,CAACI,UAAR,EAAqBF,YAAK,CAACC,MAFtB,wDAGJH,iBAAM,CAACK,SAAR,EAAoBH,YAAK,CAACI,GAHrB,wDAIJN,iBAAM,CAACO,YAAR,EAAuBL,YAAK,CAACM,MAAAA,0BAC7BT,IALK,CAAP;IAMD;EAAA;IAAA;IAAA,oBAzC2B;MAE1B,OAAOT,IAAAA,YAAK,EAAC,IAAA,CAAKC,MAAL,CAAYC,aAAb,CAALF,GAAmC,GAAnCA,GAAyC,IAAA,CAAKC,MAAL,CAAYC,aAA5D;IACD;EAAA;IAAA;IAAA,oBAEa;MAEZ,OAAOF,IAAAA,YAAK,EAAC,IAAA,CAAKC,MAAL,CAAYE,OAAb,CAALH,GAA6B,CAA7BA,GAAiC,IAAA,CAAKC,MAAL,CAAYE,OAApD;IACD;EAAA;EAAA;AAAA,EATmCJ,6BAAtC;AAAA,eA6CeD,uBAAf;AAAA","sourcesContent":["/* eslint-disable eslint-comments/no-unlimited-disable */\n/* eslint-disable */\nimport Hammer from '@egjs/hammerjs';\n\nimport { State } from '../State';\nimport PressGestureHandler from './PressGestureHandler';\nimport { isnan, isValidNumber } from './utils';\nimport { Config } from './GestureHandler';\nimport { HammerInputNames } from './constants';\n\nclass LongPressGestureHandler extends PressGestureHandler {\n  get minDurationMs(): number {\n    // @ts-ignore FIXNE(TS)\n    return isnan(this.config.minDurationMs) ? 251 : this.config.minDurationMs;\n  }\n\n  get maxDist() {\n    // @ts-ignore FIXNE(TS)\n    return isnan(this.config.maxDist) ? 9 : this.config.maxDist;\n  }\n\n  updateHasCustomActivationCriteria({ maxDistSq }: Config) {\n    return !isValidNumber(maxDistSq);\n  }\n\n  getConfig() {\n    if (!this.hasCustomActivationCriteria) {\n      // Default config\n      // If no params have been defined then this config should emulate the native gesture as closely as possible.\n      return {\n        shouldCancelWhenOutside: true,\n        maxDistSq: 10,\n      };\n    }\n    return this.config;\n  }\n\n  getHammerConfig() {\n    return {\n      ...super.getHammerConfig(),\n      // threshold: this.maxDist,\n      time: this.minDurationMs,\n    };\n  }\n\n  getState(type: keyof typeof HammerInputNames) {\n    return {\n      [Hammer.INPUT_START]: State.ACTIVE,\n      [Hammer.INPUT_MOVE]: State.ACTIVE,\n      [Hammer.INPUT_END]: State.END,\n      [Hammer.INPUT_CANCEL]: State.FAILED,\n    }[type];\n  }\n}\n\nexport default LongPressGestureHandler;\n"]},"metadata":{},"sourceType":"script"}