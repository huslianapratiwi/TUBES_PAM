{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\nvar _common = require(\"@react-native-firebase/app/lib/common\");\nvar _FirestoreDocumentReference = _interopRequireWildcard(require(\"./FirestoreDocumentReference\"));\nvar _FirestoreFieldPath = _interopRequireWildcard(require(\"./FirestoreFieldPath\"));\nvar _FirestorePath = _interopRequireDefault(require(\"./FirestorePath\"));\nvar _FirestoreSnapshotMetadata = _interopRequireDefault(require(\"./FirestoreSnapshotMetadata\"));\nvar _utils = require(\"./utils\");\nvar _serialize = require(\"./utils/serialize\");\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\nvar FirestoreDocumentSnapshot = function () {\n  function FirestoreDocumentSnapshot(firestore, nativeData) {\n    (0, _classCallCheck2.default)(this, FirestoreDocumentSnapshot);\n    this._data = (0, _serialize.parseNativeMap)(firestore, nativeData.data);\n    this._metadata = new _FirestoreSnapshotMetadata.default(nativeData.metadata);\n    this._ref = new _FirestoreDocumentReference.default(firestore, _FirestorePath.default.fromName(nativeData.path));\n    this._exists = nativeData.exists;\n  }\n  (0, _createClass2.default)(FirestoreDocumentSnapshot, [{\n    key: \"data\",\n    value: function data() {\n      return this._data;\n    }\n  }, {\n    key: \"get\",\n    value: function get(fieldPath) {\n      if (!(0, _common.isString)(fieldPath) && !(fieldPath instanceof _FirestoreFieldPath.default)) {\n        throw new Error(\"firebase.firestore() DocumentSnapshot.get(*) 'fieldPath' expected type string or FieldPath.\");\n      }\n      var path;\n      if ((0, _common.isString)(fieldPath)) {\n        try {\n          path = (0, _FirestoreFieldPath.fromDotSeparatedString)(fieldPath);\n        } catch (e) {\n          throw new Error(\"firebase.firestore() DocumentSnapshot.get(*) 'fieldPath' \" + e.message + \".\");\n        }\n      } else {\n        path = fieldPath;\n      }\n      return (0, _utils.extractFieldPathData)(this._data, path._segments);\n    }\n  }, {\n    key: \"isEqual\",\n    value: function isEqual(other) {\n      if (!(other instanceof FirestoreDocumentSnapshot)) {\n        throw new Error(\"firebase.firestore() DocumentSnapshot.isEqual(*) 'other' expected a DocumentSnapshot instance.\");\n      }\n      if (this.exists !== other.exists || !this.metadata.isEqual(other.metadata) || !this.ref.isEqual(other.ref)) {\n        return false;\n      }\n      var thisData = JSON.stringify(this.data());\n      var otherData = JSON.stringify(other.data());\n      return thisData === otherData;\n    }\n  }, {\n    key: \"exists\",\n    get: function get() {\n      return this._exists;\n    }\n  }, {\n    key: \"id\",\n    get: function get() {\n      return this._ref.id;\n    }\n  }, {\n    key: \"metadata\",\n    get: function get() {\n      return this._metadata;\n    }\n  }, {\n    key: \"ref\",\n    get: function get() {\n      return this._ref;\n    }\n  }]);\n  return FirestoreDocumentSnapshot;\n}();\nexports.default = FirestoreDocumentSnapshot;\n(0, _FirestoreDocumentReference.provideDocumentSnapshotClass)(FirestoreDocumentSnapshot);","map":{"version":3,"names":["FirestoreDocumentSnapshot","firestore","nativeData","_data","parseNativeMap","data","_metadata","FirestoreSnapshotMetadata","metadata","_ref","FirestoreDocumentReference","FirestorePath","fromName","path","_exists","exists","fieldPath","isString","FirestoreFieldPath","Error","fromDotSeparatedString","e","message","extractFieldPathData","_segments","other","isEqual","ref","thisData","JSON","stringify","otherData","id","provideDocumentSnapshotClass"],"sources":["C:/Users/HUSLIANA/react-native-ecommerce/node_modules/@react-native-firebase/firestore/lib/FirestoreDocumentSnapshot.js"],"sourcesContent":["/*\n * Copyright (c) 2016-present Invertase Limited & Contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this library except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\n\nimport { isString } from '@react-native-firebase/app/lib/common';\nimport FirestoreDocumentReference, {\n  provideDocumentSnapshotClass,\n} from './FirestoreDocumentReference';\nimport FirestoreFieldPath, { fromDotSeparatedString } from './FirestoreFieldPath';\nimport FirestorePath from './FirestorePath';\nimport FirestoreSnapshotMetadata from './FirestoreSnapshotMetadata';\nimport { extractFieldPathData } from './utils';\nimport { parseNativeMap } from './utils/serialize';\n\nexport default class FirestoreDocumentSnapshot {\n  constructor(firestore, nativeData) {\n    this._data = parseNativeMap(firestore, nativeData.data);\n    this._metadata = new FirestoreSnapshotMetadata(nativeData.metadata);\n    this._ref = new FirestoreDocumentReference(firestore, FirestorePath.fromName(nativeData.path));\n    this._exists = nativeData.exists;\n  }\n\n  get exists() {\n    return this._exists;\n  }\n\n  get id() {\n    return this._ref.id;\n  }\n\n  get metadata() {\n    return this._metadata;\n  }\n\n  get ref() {\n    return this._ref;\n  }\n\n  data() {\n    // TODO: ehesp: Figure out how to handle this.\n    // const snapshotOptions = {};\n    //\n    // if (!isUndefined(options)) {\n    //   if (!isObject(options)) {\n    //     throw new Error(\n    //       `firebase.firestore() DocumentSnapshot.data(*) 'options' expected an object if defined.`,\n    //     );\n    //   }\n    //\n    //   if (\n    //     options.serverTimestamps &&\n    //     options.serverTimestamps !== 'estimate' &&\n    //     options.serverTimestamps !== 'previous' &&\n    //     options.serverTimestamps !== 'none'\n    //   ) {\n    //     throw new Error(\n    //       `firebase.firestore() DocumentSnapshot.data(*) 'options.serverTimestamps' expected one of 'estimate', 'previous' or 'none'.`,\n    //     );\n    //   }\n    // }\n\n    return this._data;\n  }\n\n  get(fieldPath) {\n    // TODO: ehesp: How are SnapshotOptions handled?\n\n    if (!isString(fieldPath) && !(fieldPath instanceof FirestoreFieldPath)) {\n      throw new Error(\n        \"firebase.firestore() DocumentSnapshot.get(*) 'fieldPath' expected type string or FieldPath.\",\n      );\n    }\n\n    let path;\n\n    if (isString(fieldPath)) {\n      try {\n        path = fromDotSeparatedString(fieldPath);\n      } catch (e) {\n        throw new Error(`firebase.firestore() DocumentSnapshot.get(*) 'fieldPath' ${e.message}.`);\n      }\n    } else {\n      // Is already field path\n      path = fieldPath;\n    }\n\n    return extractFieldPathData(this._data, path._segments);\n  }\n\n  isEqual(other) {\n    if (!(other instanceof FirestoreDocumentSnapshot)) {\n      throw new Error(\n        \"firebase.firestore() DocumentSnapshot.isEqual(*) 'other' expected a DocumentSnapshot instance.\",\n      );\n    }\n\n    if (\n      this.exists !== other.exists ||\n      !this.metadata.isEqual(other.metadata) ||\n      !this.ref.isEqual(other.ref)\n    ) {\n      return false;\n    }\n\n    const thisData = JSON.stringify(this.data());\n    const otherData = JSON.stringify(other.data());\n\n    return thisData === otherData;\n  }\n}\n\n// To avoid React Native require cycle\nprovideDocumentSnapshotClass(FirestoreDocumentSnapshot);\n"],"mappings":";;;;;;;AAiBA;AACA;AAGA;AACA;AACA;AACA;AACA;AAAmD;AAAA;AAAA,IAE9BA,yBAAyB;EAC5C,mCAAYC,SAAS,EAAEC,UAAU,EAAE;IAAA;IACjC,IAAI,CAACC,KAAK,GAAG,IAAAC,yBAAc,EAACH,SAAS,EAAEC,UAAU,CAACG,IAAI,CAAC;IACvD,IAAI,CAACC,SAAS,GAAG,IAAIC,kCAAyB,CAACL,UAAU,CAACM,QAAQ,CAAC;IACnE,IAAI,CAACC,IAAI,GAAG,IAAIC,mCAA0B,CAACT,SAAS,EAAEU,sBAAa,CAACC,QAAQ,CAACV,UAAU,CAACW,IAAI,CAAC,CAAC;IAC9F,IAAI,CAACC,OAAO,GAAGZ,UAAU,CAACa,MAAM;EAClC;EAAC;IAAA;IAAA,uBAkBM;MAuBL,OAAO,IAAI,CAACZ,KAAK;IACnB;EAAC;IAAA;IAAA,oBAEGa,SAAS,EAAE;MAGb,IAAI,CAAC,IAAAC,gBAAQ,EAACD,SAAS,CAAC,IAAI,EAAEA,SAAS,YAAYE,2BAAkB,CAAC,EAAE;QACtE,MAAM,IAAIC,KAAK,CACb,6FAA6F,CAC9F;MACH;MAEA,IAAIN,IAAI;MAER,IAAI,IAAAI,gBAAQ,EAACD,SAAS,CAAC,EAAE;QACvB,IAAI;UACFH,IAAI,GAAG,IAAAO,0CAAsB,EAACJ,SAAS,CAAC;QAC1C,CAAC,CAAC,OAAOK,CAAC,EAAE;UACV,MAAM,IAAIF,KAAK,+DAA6DE,CAAC,CAACC,OAAO,OAAI;QAC3F;MACF,CAAC,MAAM;QAELT,IAAI,GAAGG,SAAS;MAClB;MAEA,OAAO,IAAAO,2BAAoB,EAAC,IAAI,CAACpB,KAAK,EAAEU,IAAI,CAACW,SAAS,CAAC;IACzD;EAAC;IAAA;IAAA,wBAEOC,KAAK,EAAE;MACb,IAAI,EAAEA,KAAK,YAAYzB,yBAAyB,CAAC,EAAE;QACjD,MAAM,IAAImB,KAAK,CACb,gGAAgG,CACjG;MACH;MAEA,IACE,IAAI,CAACJ,MAAM,KAAKU,KAAK,CAACV,MAAM,IAC5B,CAAC,IAAI,CAACP,QAAQ,CAACkB,OAAO,CAACD,KAAK,CAACjB,QAAQ,CAAC,IACtC,CAAC,IAAI,CAACmB,GAAG,CAACD,OAAO,CAACD,KAAK,CAACE,GAAG,CAAC,EAC5B;QACA,OAAO,KAAK;MACd;MAEA,IAAMC,QAAQ,GAAGC,IAAI,CAACC,SAAS,CAAC,IAAI,CAACzB,IAAI,EAAE,CAAC;MAC5C,IAAM0B,SAAS,GAAGF,IAAI,CAACC,SAAS,CAACL,KAAK,CAACpB,IAAI,EAAE,CAAC;MAE9C,OAAOuB,QAAQ,KAAKG,SAAS;IAC/B;EAAC;IAAA;IAAA,oBAtFY;MACX,OAAO,IAAI,CAACjB,OAAO;IACrB;EAAC;IAAA;IAAA,oBAEQ;MACP,OAAO,IAAI,CAACL,IAAI,CAACuB,EAAE;IACrB;EAAC;IAAA;IAAA,oBAEc;MACb,OAAO,IAAI,CAAC1B,SAAS;IACvB;EAAC;IAAA;IAAA,oBAES;MACR,OAAO,IAAI,CAACG,IAAI;IAClB;EAAC;EAAA;AAAA;AAAA;AA4EH,IAAAwB,wDAA4B,EAACjC,yBAAyB,CAAC"},"metadata":{},"sourceType":"script"}