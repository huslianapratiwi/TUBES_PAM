{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\nimport { createAnimatedSet as set } from \"../core/AnimatedSet\";\nimport _interpolate from \"../derived/interpolate\";\nimport InternalAnimatedValue from \"./InternalAnimatedValue\";\nimport { evaluateOnce } from \"../derived/evaluateOnce\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nvar AnimatedValue = function (_InternalAnimatedValu) {\n  _inherits(AnimatedValue, _InternalAnimatedValu);\n  var _super = _createSuper(AnimatedValue);\n  function AnimatedValue() {\n    _classCallCheck(this, AnimatedValue);\n    return _super.apply(this, arguments);\n  }\n  _createClass(AnimatedValue, [{\n    key: \"setValue\",\n    value: function setValue(value) {\n      this.__detachAnimation(this._animation);\n      if (Platform.OS === 'web') {\n        this._updateValue(value);\n      } else {\n        evaluateOnce(set(this, value), this);\n      }\n    }\n  }, {\n    key: \"interpolate\",\n    value: function interpolate(config) {\n      return _interpolate(this, config);\n    }\n  }]);\n  return AnimatedValue;\n}(InternalAnimatedValue);\nexport { AnimatedValue as default };","map":{"version":3,"names":["createAnimatedSet","set","interpolate","InternalAnimatedValue","evaluateOnce","AnimatedValue","value","__detachAnimation","_animation","Platform","OS","_updateValue","config"],"sources":["C:/Users/HUSLIANA/react_native_storeapp-master/node_modules/react-native-reanimated/src/core/AnimatedValue.js"],"sourcesContent":["import { createAnimatedSet as set } from '../core/AnimatedSet';\nimport interpolate from '../derived/interpolate';\nimport InternalAnimatedValue from './InternalAnimatedValue';\nimport { evaluateOnce } from '../derived/evaluateOnce';\nimport { Platform } from 'react-native';\n\n// Animated value wrapped with extra methods for omit cycle of dependencies\nexport default class AnimatedValue extends InternalAnimatedValue {\n  setValue(value) {\n    this.__detachAnimation(this._animation);\n    if (Platform.OS === 'web') {\n      this._updateValue(value);\n    } else {\n      evaluateOnce(set(this, value), this);\n    }\n  }\n\n  interpolate(config) {\n    return interpolate(this, config);\n  }\n}\n"],"mappings":";;;;;;;AAAA,SAASA,iBAAiB,IAAIC,GAAG;AACjC,OAAOC,YAAW;AAClB,OAAOC,qBAAqB;AAC5B,SAASC,YAAY;AAAkC;AAAA,IAIlCC,aAAa;EAAA;EAAA;EAAA;IAAA;IAAA;EAAA;EAAA;IAAA;IAAA,yBACvBC,KAAK,EAAE;MACd,IAAI,CAACC,iBAAiB,CAAC,IAAI,CAACC,UAAU,CAAC;MACvC,IAAIC,QAAQ,CAACC,EAAE,KAAK,KAAK,EAAE;QACzB,IAAI,CAACC,YAAY,CAACL,KAAK,CAAC;MAC1B,CAAC,MAAM;QACLF,YAAY,CAACH,GAAG,CAAC,IAAI,EAAEK,KAAK,CAAC,EAAE,IAAI,CAAC;MACtC;IACF;EAAC;IAAA;IAAA,4BAEWM,MAAM,EAAE;MAClB,OAAOV,YAAW,CAAC,IAAI,EAAEU,MAAM,CAAC;IAClC;EAAC;EAAA;AAAA,EAZwCT,qBAAqB;AAAA,SAA3CE,aAAa"},"metadata":{},"sourceType":"module"}