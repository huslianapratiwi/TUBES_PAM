{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n  return target;\n}\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n  return target;\n}\nimport * as React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nexport default React.forwardRef(function CardSheet(_ref, ref) {\n  var enabled = _ref.enabled,\n    layout = _ref.layout,\n    style = _ref.style,\n    rest = _objectWithoutProperties(_ref, [\"enabled\", \"layout\", \"style\"]);\n  var _React$useState = React.useState(false),\n    _React$useState2 = _slicedToArray(_React$useState, 2),\n    fill = _React$useState2[0],\n    setFill = _React$useState2[1];\n  React.useEffect(function () {\n    if (typeof document === 'undefined' || !document.body) {\n      return;\n    }\n    var width = document.body.clientWidth;\n    var height = document.body.clientHeight;\n    setFill(width === layout.width && height === layout.height);\n  }, [layout.height, layout.width]);\n  return React.createElement(View, _extends({}, rest, {\n    ref: ref,\n    style: [enabled && fill ? styles.page : styles.card, style]\n  }));\n});\nvar styles = StyleSheet.create({\n  page: {\n    minHeight: '100%'\n  },\n  card: {\n    flex: 1,\n    overflow: 'hidden'\n  }\n});","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AAAA;AAAA;AAaA,eAAeA,KAAK,CAACC,UAAN,CAA8B,SAASC,SAAT,OAE3CC,GAF2C,EAG3C;EAAA,IAFEC,OAAF,GAEAC,KAFED,OAAF;IAAWE,MAAX,GAEAD,KAFWC,MAAX;IAAmBC,QAEnBF,KAFmBE;IAAUC,IAE7B;EAAA,sBACwBR,KAAK,CAACS,QAAN,CAAe,KAAf,CAAxB;IAAA;IAAOC,IAAD;IAAOC,OAAP;EAENX,KAAK,CAACY,SAAN,CAAgB,YAAM;IACpB,IAAI,OAAOC,QAAP,KAAoB,WAApB,IAAmC,CAACA,QAAQ,CAACC,IAAjD,EAAuD;MAErD;IACD;IAED,IAAMC,KAAK,GAAGF,QAAQ,CAACC,IAAT,CAAcE,WAA5B;IACA,IAAMC,MAAM,GAAGJ,QAAQ,CAACC,IAAT,CAAcI,YAA7B;IAEAP,OAAO,CAACI,KAAK,KAAKT,MAAM,CAACS,KAAjB,IAA0BE,MAAM,KAAKX,MAAM,CAACW,MAA7C,CAAP;EACD,CAVD,EAUG,CAACX,MAAM,CAACW,MAAR,EAAgBX,MAAM,CAACS,KAAvB,CAVH;EAYA,OACEf,oBAACmB,IAAD,eACMX,IADN;IAEEL,GAAG,EAAEA,GAFP;IAGEI,KAAK,EAAE,CAACH,OAAO,IAAIM,IAAX,GAAkBU,MAAM,CAACC,IAAzB,GAAgCD,MAAM,CAACE,IAAxC,EAA8Cf,KAA9C;EAHT,GADF;AAOD,CAzBc,CAAf;AA2BA,IAAMa,MAAM,GAAGG,UAAU,CAACC,MAAX,CAAkB;EAC/BH,IAAI,EAAE;IACJI,SAAS,EAAE;EADP,CADyB;EAI/BH,IAAI,EAAE;IACJI,IAAI,EAAE,CADF;IAEJC,QAAQ,EAAE;EAFN;AAJyB,CAAlB,CAAf","names":["React","forwardRef","CardSheet","ref","enabled","_ref","layout","style","rest","useState","fill","setFill","useEffect","document","body","width","clientWidth","height","clientHeight","View","styles","page","card","StyleSheet","create","minHeight","flex","overflow"],"sources":["CardSheet.tsx"],"sourcesContent":["import * as React from 'react';\nimport { View, ViewProps, StyleSheet } from 'react-native';\n\ntype Props = ViewProps & {\n  enabled: boolean;\n  layout: { width: number; height: number };\n  children: React.ReactNode;\n};\n\n// This component will render a page which overflows the screen\n// if the container fills the body by comparing the size\n// This lets the document.body handle scrolling of the content\n// It's necessary for mobile browsers to be able to hide address bar on scroll\nexport default React.forwardRef<View, Props>(function CardSheet(\n  { enabled, layout, style, ...rest },\n  ref\n) {\n  const [fill, setFill] = React.useState(false);\n\n  React.useEffect(() => {\n    if (typeof document === 'undefined' || !document.body) {\n      // Only run when DOM is available\n      return;\n    }\n\n    const width = document.body.clientWidth;\n    const height = document.body.clientHeight;\n\n    setFill(width === layout.width && height === layout.height);\n  }, [layout.height, layout.width]);\n\n  return (\n    <View\n      {...rest}\n      ref={ref}\n      style={[enabled && fill ? styles.page : styles.card, style]}\n    />\n  );\n});\n\nconst styles = StyleSheet.create({\n  page: {\n    minHeight: '100%',\n  },\n  card: {\n    flex: 1,\n    overflow: 'hidden',\n  },\n});\n"]},"metadata":{},"sourceType":"module"}