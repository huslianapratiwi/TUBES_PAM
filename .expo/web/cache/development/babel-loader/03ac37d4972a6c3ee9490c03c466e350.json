{"ast":null,"code":"Object.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.GestureState = exports.GestureHandlerRootView = exports.PanGestureHandler = void 0;\nvar React = _interopRequireWildcard(require(\"react\"));\nvar _reactNative = require(\"react-native\");\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\nvar Dummy = function Dummy(_ref) {\n  var children = _ref.children;\n  return React.createElement(React.Fragment, null, children);\n};\nvar PanGestureHandler = Dummy;\nexports.PanGestureHandler = PanGestureHandler;\nvar GestureHandlerRootView = _reactNative.View;\nexports.GestureHandlerRootView = GestureHandlerRootView;\nvar GestureState = {\n  UNDETERMINED: 0,\n  FAILED: 1,\n  BEGAN: 2,\n  CANCELLED: 3,\n  ACTIVE: 4,\n  END: 5\n};\nexports.GestureState = GestureState;","map":{"version":3,"sources":["GestureHandler.tsx"],"names":["Dummy","children","PanGestureHandler","GestureHandlerRootView","View","GestureState","UNDETERMINED","FAILED","BEGAN","CANCELLED","ACTIVE","END"],"mappings":";;;;AAAA;AACA;AAAA;AAAA;AAGA,IAAMA,KAAU,GAAG,SAAbA,KAAU;EAAA,IAAMC,QAAAA,QAAAA,QAAAA;EAAAA,OACpB,KAAA,CAAA,aAAA,CAAA,KAAA,CAAA,QAAA,EAAA,IAAA,EAAGA,QAAH,CADF;AAAA;AAIO,IAAMC,iBAAiB,GAAGF,KAA1B;AAAA;AAIA,IAAMG,sBAAsB,GAAGC,iBAA/B;AAAA;AAEA,IAAMC,YAAY,GAAG;EAC1BC,YAAY,EAAE,CADY;EAE1BC,MAAM,EAAE,CAFkB;EAG1BC,KAAK,EAAE,CAHmB;EAI1BC,SAAS,EAAE,CAJe;EAK1BC,MAAM,EAAE,CALkB;EAM1BC,GAAG,EAAE;AANqB,CAArB;AAAA","sourcesContent":["import * as React from 'react';\nimport { View } from 'react-native';\nimport type { PanGestureHandlerProperties } from 'react-native-gesture-handler';\n\nconst Dummy: any = ({ children }: { children: React.ReactNode }) => (\n  <>{children}</>\n);\n\nexport const PanGestureHandler = Dummy as React.ComponentType<\n  PanGestureHandlerProperties\n>;\n\nexport const GestureHandlerRootView = View;\n\nexport const GestureState = {\n  UNDETERMINED: 0,\n  FAILED: 1,\n  BEGAN: 2,\n  CANCELLED: 3,\n  ACTIVE: 4,\n  END: 5,\n};\n\nexport type { PanGestureHandlerGestureEvent } from 'react-native-gesture-handler';\n"]},"metadata":{},"sourceType":"script"}