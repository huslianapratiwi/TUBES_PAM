{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\nvar _toConsumableArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/toConsumableArray\"));\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\nvar _assertThisInitialized2 = _interopRequireDefault(require(\"@babel/runtime/helpers/assertThisInitialized\"));\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\nvar React = _interopRequireWildcard(require(\"react\"));\nvar _reactNative = require(\"react-native\");\nvar _native = require(\"@react-navigation/native\");\nvar _reactNativeScreens = require(\"react-native-screens\");\nvar _SafeAreaProviderCompat = _interopRequireWildcard(require(\"./SafeAreaProviderCompat\"));\nvar _ResourceSavingScene = _interopRequireDefault(require(\"./ResourceSavingScene\"));\nvar _BottomTabBar = _interopRequireWildcard(require(\"./BottomTabBar\"));\nvar _BottomTabBarHeightCallbackContext = _interopRequireDefault(require(\"../utils/BottomTabBarHeightCallbackContext\"));\nvar _BottomTabBarHeightContext = _interopRequireDefault(require(\"../utils/BottomTabBarHeightContext\"));\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}\nfunction SceneContent(_ref) {\n  var isFocused = _ref.isFocused,\n    children = _ref.children,\n    style = _ref.style;\n  var _useTheme = (0, _native.useTheme)(),\n    colors = _useTheme.colors;\n  return React.createElement(_reactNative.View, {\n    accessibilityElementsHidden: !isFocused,\n    importantForAccessibility: isFocused ? 'auto' : 'no-hide-descendants',\n    style: [styles.content, {\n      backgroundColor: colors.background\n    }, style]\n  }, children);\n}\nvar BottomTabView = function (_React$Component) {\n  (0, _inherits2.default)(BottomTabView, _React$Component);\n  var _super = _createSuper(BottomTabView);\n  (0, _createClass2.default)(BottomTabView, null, [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(nextProps, prevState) {\n      var focusedRouteKey = nextProps.state.routes[nextProps.state.index].key;\n      return {\n        loaded: prevState.loaded.includes(focusedRouteKey) ? prevState.loaded : [].concat((0, _toConsumableArray2.default)(prevState.loaded), [focusedRouteKey])\n      };\n    }\n  }]);\n  function BottomTabView(_props) {\n    var _this;\n    (0, _classCallCheck2.default)(this, BottomTabView);\n    _this = _super.call(this, _props);\n    _defineProperty((0, _assertThisInitialized2.default)(_this), \"renderTabBar\", function () {\n      var _this$props = _this.props,\n        _this$props$tabBar = _this$props.tabBar,\n        tabBar = _this$props$tabBar === void 0 ? function (props) {\n          return React.createElement(_BottomTabBar.default, props);\n        } : _this$props$tabBar,\n        tabBarOptions = _this$props.tabBarOptions,\n        state = _this$props.state,\n        navigation = _this$props.navigation,\n        descriptors = _this$props.descriptors;\n      return tabBar((0, _extends2.default)({}, tabBarOptions, {\n        state: state,\n        descriptors: descriptors,\n        navigation: navigation\n      }));\n    });\n    _defineProperty((0, _assertThisInitialized2.default)(_this), \"handleTabBarHeightChange\", function (height) {\n      _this.setState(function (state) {\n        if (state.tabBarHeight !== height) {\n          return {\n            tabBarHeight: height\n          };\n        }\n        return null;\n      });\n    });\n    var _this$props2 = _this.props,\n      _state = _this$props2.state,\n      _tabBarOptions = _this$props2.tabBarOptions;\n    var dimensions = _reactNative.Dimensions.get('window');\n    var tabBarHeight = (0, _BottomTabBar.getTabBarHeight)({\n      state: _state,\n      dimensions: dimensions,\n      layout: {\n        width: dimensions.width,\n        height: 0\n      },\n      insets: _SafeAreaProviderCompat.initialSafeAreaInsets,\n      adaptive: _tabBarOptions === null || _tabBarOptions === void 0 ? void 0 : _tabBarOptions.adaptive,\n      labelPosition: _tabBarOptions === null || _tabBarOptions === void 0 ? void 0 : _tabBarOptions.labelPosition,\n      tabStyle: _tabBarOptions === null || _tabBarOptions === void 0 ? void 0 : _tabBarOptions.tabStyle,\n      style: _tabBarOptions === null || _tabBarOptions === void 0 ? void 0 : _tabBarOptions.style\n    });\n    _this.state = {\n      loaded: [_state.routes[_state.index].key],\n      tabBarHeight: tabBarHeight\n    };\n    return _this;\n  }\n  (0, _createClass2.default)(BottomTabView, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props3 = this.props,\n        state = _this$props3.state,\n        descriptors = _this$props3.descriptors,\n        navigation = _this$props3.navigation,\n        lazy = _this$props3.lazy,\n        _this$props3$detachIn = _this$props3.detachInactiveScreens,\n        detachInactiveScreens = _this$props3$detachIn === void 0 ? true : _this$props3$detachIn,\n        sceneContainerStyle = _this$props3.sceneContainerStyle;\n      var routes = state.routes;\n      var _this$state = this.state,\n        loaded = _this$state.loaded,\n        tabBarHeight = _this$state.tabBarHeight;\n      var isScreensEnabled = (_reactNativeScreens.screensEnabled === null || _reactNativeScreens.screensEnabled === void 0 ? void 0 : (0, _reactNativeScreens.screensEnabled)()) && detachInactiveScreens;\n      return React.createElement(_native.NavigationHelpersContext.Provider, {\n        value: navigation\n      }, React.createElement(_SafeAreaProviderCompat.default, null, React.createElement(_reactNativeScreens.ScreenContainer, {\n        enabled: isScreensEnabled,\n        style: styles.container\n      }, routes.map(function (route, index) {\n        var descriptor = descriptors[route.key];\n        var unmountOnBlur = descriptor.options.unmountOnBlur;\n        var isFocused = state.index === index;\n        if (unmountOnBlur && !isFocused) {\n          return null;\n        }\n        if (lazy && !loaded.includes(route.key) && !isFocused) {\n          return null;\n        }\n        return React.createElement(_ResourceSavingScene.default, {\n          key: route.key,\n          style: _reactNative.StyleSheet.absoluteFill,\n          isVisible: isFocused,\n          enabled: isScreensEnabled\n        }, React.createElement(SceneContent, {\n          isFocused: isFocused,\n          style: sceneContainerStyle\n        }, React.createElement(_BottomTabBarHeightContext.default.Provider, {\n          value: tabBarHeight\n        }, descriptor.render())));\n      })), React.createElement(_BottomTabBarHeightCallbackContext.default.Provider, {\n        value: this.handleTabBarHeightChange\n      }, this.renderTabBar())));\n    }\n  }]);\n  return BottomTabView;\n}(React.Component);\nexports.default = BottomTabView;\n_defineProperty(BottomTabView, \"defaultProps\", {\n  lazy: true\n});\nvar styles = _reactNative.StyleSheet.create({\n  container: {\n    flex: 1,\n    overflow: 'hidden'\n  },\n  content: {\n    flex: 1\n  }\n});","map":{"version":3,"sources":["BottomTabView.tsx"],"names":["SceneContent","isFocused","children","style","colors","useTheme","styles","content","backgroundColor","background","BottomTabView","React","Component","lazy","nextProps","prevState","focusedRouteKey","state","routes","index","key","loaded","includes","constructor","props","tabBarOptions","dimensions","Dimensions","get","tabBarHeight","getTabBarHeight","layout","width","height","insets","initialSafeAreaInsets","adaptive","labelPosition","tabStyle","tabBar","navigation","descriptors","setState","detachInactiveScreens","sceneContainerStyle","isScreensEnabled","container","map","route","descriptor","unmountOnBlur","options","StyleSheet","absoluteFill","render","handleTabBarHeightChange","renderTabBar","create","flex","overflow"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport {\n  View,\n  StyleSheet,\n  Dimensions,\n  StyleProp,\n  ViewStyle,\n} from 'react-native';\n\nimport {\n  NavigationHelpersContext,\n  ParamListBase,\n  TabNavigationState,\n  useTheme,\n} from '@react-navigation/native';\nimport { ScreenContainer, screensEnabled } from 'react-native-screens';\n\nimport SafeAreaProviderCompat, {\n  initialSafeAreaInsets,\n} from './SafeAreaProviderCompat';\nimport ResourceSavingScene from './ResourceSavingScene';\nimport BottomTabBar, { getTabBarHeight } from './BottomTabBar';\nimport BottomTabBarHeightCallbackContext from '../utils/BottomTabBarHeightCallbackContext';\nimport BottomTabBarHeightContext from '../utils/BottomTabBarHeightContext';\nimport type {\n  BottomTabNavigationConfig,\n  BottomTabDescriptorMap,\n  BottomTabNavigationHelpers,\n  BottomTabBarProps,\n} from '../types';\n\ntype Props = BottomTabNavigationConfig & {\n  state: TabNavigationState<ParamListBase>;\n  navigation: BottomTabNavigationHelpers;\n  descriptors: BottomTabDescriptorMap;\n};\n\ntype State = {\n  loaded: string[];\n  tabBarHeight: number;\n};\n\nfunction SceneContent({\n  isFocused,\n  children,\n  style,\n}: {\n  isFocused: boolean;\n  children: React.ReactNode;\n  style?: StyleProp<ViewStyle>;\n}) {\n  const { colors } = useTheme();\n\n  return (\n    <View\n      accessibilityElementsHidden={!isFocused}\n      importantForAccessibility={isFocused ? 'auto' : 'no-hide-descendants'}\n      style={[styles.content, { backgroundColor: colors.background }, style]}\n    >\n      {children}\n    </View>\n  );\n}\n\nexport default class BottomTabView extends React.Component<Props, State> {\n  static defaultProps = {\n    lazy: true,\n  };\n\n  static getDerivedStateFromProps(nextProps: Props, prevState: State) {\n    const focusedRouteKey = nextProps.state.routes[nextProps.state.index].key;\n\n    return {\n      // Set the current tab to be loaded if it was not loaded before\n      loaded: prevState.loaded.includes(focusedRouteKey)\n        ? prevState.loaded\n        : [...prevState.loaded, focusedRouteKey],\n    };\n  }\n\n  constructor(props: Props) {\n    super(props);\n\n    const { state, tabBarOptions } = this.props;\n\n    const dimensions = Dimensions.get('window');\n    const tabBarHeight = getTabBarHeight({\n      state,\n      dimensions,\n      layout: { width: dimensions.width, height: 0 },\n      insets: initialSafeAreaInsets,\n      adaptive: tabBarOptions?.adaptive,\n      labelPosition: tabBarOptions?.labelPosition,\n      tabStyle: tabBarOptions?.tabStyle,\n      style: tabBarOptions?.style,\n    });\n\n    this.state = {\n      loaded: [state.routes[state.index].key],\n      tabBarHeight: tabBarHeight,\n    };\n  }\n\n  private renderTabBar = () => {\n    const {\n      tabBar = (props: BottomTabBarProps) => <BottomTabBar {...props} />,\n      tabBarOptions,\n      state,\n      navigation,\n      descriptors,\n    } = this.props;\n    return tabBar({\n      ...tabBarOptions,\n      state: state,\n      descriptors: descriptors,\n      navigation: navigation,\n    });\n  };\n\n  private handleTabBarHeightChange = (height: number) => {\n    this.setState((state) => {\n      if (state.tabBarHeight !== height) {\n        return { tabBarHeight: height };\n      }\n\n      return null;\n    });\n  };\n\n  render() {\n    const {\n      state,\n      descriptors,\n      navigation,\n      lazy,\n      detachInactiveScreens = true,\n      sceneContainerStyle,\n    } = this.props;\n    const { routes } = state;\n    const { loaded, tabBarHeight } = this.state;\n    const isScreensEnabled = screensEnabled?.() && detachInactiveScreens;\n\n    return (\n      <NavigationHelpersContext.Provider value={navigation}>\n        <SafeAreaProviderCompat>\n          <ScreenContainer\n            // @ts-ignore\n            enabled={isScreensEnabled}\n            style={styles.container}\n          >\n            {routes.map((route, index) => {\n              const descriptor = descriptors[route.key];\n              const { unmountOnBlur } = descriptor.options;\n              const isFocused = state.index === index;\n\n              if (unmountOnBlur && !isFocused) {\n                return null;\n              }\n\n              if (lazy && !loaded.includes(route.key) && !isFocused) {\n                // Don't render a screen if we've never navigated to it\n                return null;\n              }\n\n              return (\n                <ResourceSavingScene\n                  key={route.key}\n                  style={StyleSheet.absoluteFill}\n                  isVisible={isFocused}\n                  enabled={isScreensEnabled}\n                >\n                  <SceneContent\n                    isFocused={isFocused}\n                    style={sceneContainerStyle}\n                  >\n                    <BottomTabBarHeightContext.Provider value={tabBarHeight}>\n                      {descriptor.render()}\n                    </BottomTabBarHeightContext.Provider>\n                  </SceneContent>\n                </ResourceSavingScene>\n              );\n            })}\n          </ScreenContainer>\n          <BottomTabBarHeightCallbackContext.Provider\n            value={this.handleTabBarHeightChange}\n          >\n            {this.renderTabBar()}\n          </BottomTabBarHeightCallbackContext.Provider>\n        </SafeAreaProviderCompat>\n      </NavigationHelpersContext.Provider>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    overflow: 'hidden',\n  },\n  content: {\n    flex: 1,\n  },\n});\n"]},"metadata":{},"sourceType":"script"}