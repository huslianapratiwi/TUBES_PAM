{"ast":null,"code":"import { lessThan, multiply, sub, add, divide, greaterThan } from \"../operators\";\nimport { createAnimatedCond as cond } from \"../core/AnimatedCond\";\nimport invariant from 'fbjs/lib/invariant';\nimport AnimatedNode from \"../core/AnimatedNode\";\nfunction interpolateInternalSingle(value, inputRange, outputRange, offset) {\n  var inS = inputRange[offset];\n  var inE = inputRange[offset + 1];\n  var outS = outputRange[offset];\n  var outE = outputRange[offset + 1];\n  var progress = divide(sub(value, inS), sub(inE, inS));\n  return add(outS, multiply(progress, sub(outE, outS)));\n}\nfunction interpolateInternal(value, inputRange, outputRange) {\n  var offset = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 0;\n  if (inputRange.length - offset === 2) {\n    return interpolateInternalSingle(value, inputRange, outputRange, offset);\n  }\n  return cond(lessThan(value, inputRange[offset + 1]), interpolateInternalSingle(value, inputRange, outputRange, offset), interpolateInternal(value, inputRange, outputRange, offset + 1));\n}\nexport var Extrapolate = {\n  EXTEND: 'extend',\n  CLAMP: 'clamp',\n  IDENTITY: 'identity'\n};\nfunction checkNonDecreasing(name, arr) {\n  for (var i = 1; i < arr.length; ++i) {\n    if (arr[i] instanceof AnimatedNode || arr[i - 1] instanceof AnimatedNode) continue;\n    invariant(arr[i] >= arr[i - 1], '%s must be monotonically non-decreasing. (%s)', name, arr);\n  }\n}\nfunction checkMinElements(name, arr) {\n  invariant(arr.length >= 2, '%s must have at least 2 elements. (%s)', name, arr);\n}\nfunction checkValidNumbers(name, arr) {\n  for (var i = 0; i < arr.length; i++) {\n    if (arr[i] instanceof AnimatedNode) continue;\n    invariant(Number.isFinite(arr[i]), '%s cannot include %s. (%s)', name, arr[i], arr);\n  }\n}\nexport default function interpolate(value, config) {\n  var inputRange = config.inputRange,\n    outputRange = config.outputRange,\n    _config$extrapolate = config.extrapolate,\n    extrapolate = _config$extrapolate === void 0 ? Extrapolate.EXTEND : _config$extrapolate,\n    extrapolateLeft = config.extrapolateLeft,\n    extrapolateRight = config.extrapolateRight;\n  checkMinElements('inputRange', inputRange);\n  checkValidNumbers('inputRange', inputRange);\n  checkMinElements('outputRange', outputRange);\n  checkValidNumbers('outputRange', outputRange);\n  checkNonDecreasing('inputRange', inputRange);\n  invariant(inputRange.length === outputRange.length, 'inputRange and outputRange must be the same length.');\n  var left = extrapolateLeft || extrapolate;\n  var right = extrapolateRight || extrapolate;\n  var output = interpolateInternal(value, inputRange, outputRange);\n  if (left === Extrapolate.EXTEND) {} else if (left === Extrapolate.CLAMP) {\n    output = cond(lessThan(value, inputRange[0]), outputRange[0], output);\n  } else if (left === Extrapolate.IDENTITY) {\n    output = cond(lessThan(value, inputRange[0]), value, output);\n  }\n  if (right === Extrapolate.EXTEND) {} else if (right === Extrapolate.CLAMP) {\n    output = cond(greaterThan(value, inputRange[inputRange.length - 1]), outputRange[outputRange.length - 1], output);\n  } else if (right === Extrapolate.IDENTITY) {\n    output = cond(greaterThan(value, inputRange[inputRange.length - 1]), value, output);\n  }\n  return output;\n}","map":{"version":3,"names":["lessThan","multiply","sub","add","divide","greaterThan","createAnimatedCond","cond","invariant","AnimatedNode","interpolateInternalSingle","value","inputRange","outputRange","offset","inS","inE","outS","outE","progress","interpolateInternal","length","Extrapolate","EXTEND","CLAMP","IDENTITY","checkNonDecreasing","name","arr","i","checkMinElements","checkValidNumbers","Number","isFinite","interpolate","config","extrapolate","extrapolateLeft","extrapolateRight","left","right","output"],"sources":["C:/Users/HUSLIANA/react_native_storeapp-master/node_modules/react-native-reanimated/src/derived/interpolate.js"],"sourcesContent":["import {\n  lessThan,\n  multiply,\n  sub,\n  add,\n  divide,\n  greaterThan,\n} from '../operators';\n\nimport { createAnimatedCond as cond } from '../core/AnimatedCond';\nimport invariant from 'fbjs/lib/invariant';\nimport AnimatedNode from '../core/AnimatedNode';\n\nfunction interpolateInternalSingle(value, inputRange, outputRange, offset) {\n  const inS = inputRange[offset];\n  const inE = inputRange[offset + 1];\n  const outS = outputRange[offset];\n  const outE = outputRange[offset + 1];\n  const progress = divide(sub(value, inS), sub(inE, inS));\n  return add(outS, multiply(progress, sub(outE, outS)));\n}\n\nfunction interpolateInternal(value, inputRange, outputRange, offset = 0) {\n  if (inputRange.length - offset === 2) {\n    return interpolateInternalSingle(value, inputRange, outputRange, offset);\n  }\n  return cond(\n    lessThan(value, inputRange[offset + 1]),\n    interpolateInternalSingle(value, inputRange, outputRange, offset),\n    interpolateInternal(value, inputRange, outputRange, offset + 1)\n  );\n}\n\nexport const Extrapolate = {\n  EXTEND: 'extend',\n  CLAMP: 'clamp',\n  IDENTITY: 'identity',\n};\n\nfunction checkNonDecreasing(name, arr) {\n  for (let i = 1; i < arr.length; ++i) {\n    // We can't validate animated nodes in JS.\n    if (arr[i] instanceof AnimatedNode || arr[i - 1] instanceof AnimatedNode)\n      continue;\n    invariant(\n      arr[i] >= arr[i - 1],\n      '%s must be monotonically non-decreasing. (%s)',\n      name,\n      arr\n    );\n  }\n}\n\nfunction checkMinElements(name, arr) {\n  invariant(\n    arr.length >= 2,\n    '%s must have at least 2 elements. (%s)',\n    name,\n    arr\n  );\n}\n\nfunction checkValidNumbers(name, arr) {\n  for (let i = 0; i < arr.length; i++) {\n    // We can't validate animated nodes in JS.\n    if (arr[i] instanceof AnimatedNode) continue;\n    invariant(\n      Number.isFinite(arr[i]),\n      '%s cannot include %s. (%s)',\n      name,\n      arr[i],\n      arr\n    );\n  }\n}\n\nexport default function interpolate(value, config) {\n  const {\n    inputRange,\n    outputRange,\n    extrapolate = Extrapolate.EXTEND,\n    extrapolateLeft,\n    extrapolateRight,\n  } = config;\n  checkMinElements('inputRange', inputRange);\n  checkValidNumbers('inputRange', inputRange);\n  checkMinElements('outputRange', outputRange);\n  checkValidNumbers('outputRange', outputRange);\n  checkNonDecreasing('inputRange', inputRange);\n  invariant(\n    inputRange.length === outputRange.length,\n    'inputRange and outputRange must be the same length.'\n  );\n\n  const left = extrapolateLeft || extrapolate;\n  const right = extrapolateRight || extrapolate;\n  let output = interpolateInternal(value, inputRange, outputRange);\n\n  if (left === Extrapolate.EXTEND) {\n  } else if (left === Extrapolate.CLAMP) {\n    output = cond(lessThan(value, inputRange[0]), outputRange[0], output);\n  } else if (left === Extrapolate.IDENTITY) {\n    output = cond(lessThan(value, inputRange[0]), value, output);\n  }\n\n  if (right === Extrapolate.EXTEND) {\n  } else if (right === Extrapolate.CLAMP) {\n    output = cond(\n      greaterThan(value, inputRange[inputRange.length - 1]),\n      outputRange[outputRange.length - 1],\n      output\n    );\n  } else if (right === Extrapolate.IDENTITY) {\n    output = cond(\n      greaterThan(value, inputRange[inputRange.length - 1]),\n      value,\n      output\n    );\n  }\n\n  return output;\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}