{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = HeaderBackButton;\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\nvar React = _interopRequireWildcard(require(\"react\"));\nvar _reactNative = require(\"react-native\");\nvar _native = require(\"@react-navigation/native\");\nvar _MaskedView = _interopRequireDefault(require(\"../MaskedView\"));\nvar _TouchableItem = _interopRequireDefault(require(\"../TouchableItem\"));\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\nfunction HeaderBackButton(_ref) {\n  var disabled = _ref.disabled,\n    allowFontScaling = _ref.allowFontScaling,\n    backImage = _ref.backImage,\n    label = _ref.label,\n    labelStyle = _ref.labelStyle,\n    _ref$labelVisible = _ref.labelVisible,\n    labelVisible = _ref$labelVisible === void 0 ? _reactNative.Platform.OS === 'ios' : _ref$labelVisible,\n    onLabelLayout = _ref.onLabelLayout,\n    onPress = _ref.onPress,\n    customPressColorAndroid = _ref.pressColorAndroid,\n    screenLayout = _ref.screenLayout,\n    customTintColor = _ref.tintColor,\n    titleLayout = _ref.titleLayout,\n    _ref$truncatedLabel = _ref.truncatedLabel,\n    truncatedLabel = _ref$truncatedLabel === void 0 ? 'Back' : _ref$truncatedLabel,\n    _ref$accessibilityLab = _ref.accessibilityLabel,\n    accessibilityLabel = _ref$accessibilityLab === void 0 ? label && label !== 'Back' ? \"\".concat(label, \", back\") : 'Go back' : _ref$accessibilityLab,\n    style = _ref.style;\n  var _useTheme = (0, _native.useTheme)(),\n    dark = _useTheme.dark,\n    colors = _useTheme.colors;\n  var _React$useState = React.useState(undefined),\n    _React$useState2 = (0, _slicedToArray2.default)(_React$useState, 2),\n    initialLabelWidth = _React$useState2[0],\n    setInitialLabelWidth = _React$useState2[1];\n  var tintColor = customTintColor !== undefined ? customTintColor : _reactNative.Platform.select({\n    ios: colors.primary,\n    default: colors.text\n  });\n  var pressColorAndroid = customPressColorAndroid !== undefined ? customPressColorAndroid : dark ? 'rgba(255, 255, 255, .32)' : 'rgba(0, 0, 0, .32)';\n  var handleLabelLayout = function handleLabelLayout(e) {\n    onLabelLayout === null || onLabelLayout === void 0 ? void 0 : onLabelLayout(e);\n    setInitialLabelWidth(e.nativeEvent.layout.x + e.nativeEvent.layout.width);\n  };\n  var shouldTruncateLabel = function shouldTruncateLabel() {\n    return !label || initialLabelWidth && titleLayout && screenLayout && (screenLayout.width - titleLayout.width) / 2 < initialLabelWidth + 26;\n  };\n  var renderBackImage = function renderBackImage() {\n    if (backImage) {\n      return backImage({\n        tintColor: tintColor\n      });\n    } else {\n      return React.createElement(_reactNative.Image, {\n        style: [styles.icon, Boolean(labelVisible) && styles.iconWithLabel, Boolean(tintColor) && {\n          tintColor: tintColor\n        }],\n        source: require('../assets/back-icon.png'),\n        fadeDuration: 0\n      });\n    }\n  };\n  var renderLabel = function renderLabel() {\n    var leftLabelText = shouldTruncateLabel() ? truncatedLabel : label;\n    if (!labelVisible || leftLabelText === undefined) {\n      return null;\n    }\n    var labelElement = React.createElement(_reactNative.View, {\n      style: screenLayout ? [styles.labelWrapper, {\n        minWidth: screenLayout.width / 2 - 27\n      }] : null\n    }, React.createElement(_reactNative.Animated.Text, {\n      accessible: false,\n      onLayout: leftLabelText === label ? handleLabelLayout : undefined,\n      style: [styles.label, tintColor ? {\n        color: tintColor\n      } : null, labelStyle],\n      numberOfLines: 1,\n      allowFontScaling: !!allowFontScaling\n    }, leftLabelText));\n    if (backImage || _reactNative.Platform.OS !== 'ios') {\n      return labelElement;\n    }\n    return React.createElement(_MaskedView.default, {\n      maskElement: React.createElement(_reactNative.View, {\n        style: styles.iconMaskContainer\n      }, React.createElement(_reactNative.Image, {\n        source: require('../assets/back-icon-mask.png'),\n        style: styles.iconMask\n      }), React.createElement(_reactNative.View, {\n        style: styles.iconMaskFillerRect\n      }))\n    }, labelElement);\n  };\n  var handlePress = function handlePress() {\n    return onPress && requestAnimationFrame(onPress);\n  };\n  return React.createElement(_TouchableItem.default, {\n    disabled: disabled,\n    accessible: true,\n    accessibilityRole: \"button\",\n    accessibilityComponentType: \"button\",\n    accessibilityLabel: accessibilityLabel,\n    accessibilityTraits: \"button\",\n    testID: \"header-back\",\n    delayPressIn: 0,\n    onPress: disabled ? undefined : handlePress,\n    pressColor: pressColorAndroid,\n    style: [styles.container, disabled && styles.disabled, style],\n    hitSlop: _reactNative.Platform.select({\n      ios: undefined,\n      default: {\n        top: 16,\n        right: 16,\n        bottom: 16,\n        left: 16\n      }\n    }),\n    borderless: true\n  }, React.createElement(React.Fragment, null, renderBackImage(), renderLabel()));\n}\nvar styles = _reactNative.StyleSheet.create({\n  container: (0, _extends2.default)({\n    alignItems: 'center',\n    flexDirection: 'row'\n  }, _reactNative.Platform.select({\n    ios: null,\n    default: {\n      marginVertical: 3,\n      marginHorizontal: 11\n    }\n  })),\n  disabled: {\n    opacity: 0.5\n  },\n  label: {\n    fontSize: 17,\n    letterSpacing: 0.35\n  },\n  labelWrapper: {\n    flexDirection: 'row',\n    alignItems: 'flex-start'\n  },\n  icon: _reactNative.Platform.select({\n    ios: {\n      height: 21,\n      width: 13,\n      marginLeft: 8,\n      marginRight: 22,\n      marginVertical: 12,\n      resizeMode: 'contain',\n      transform: [{\n        scaleX: _reactNative.I18nManager.isRTL ? -1 : 1\n      }]\n    },\n    default: {\n      height: 24,\n      width: 24,\n      margin: 3,\n      resizeMode: 'contain',\n      transform: [{\n        scaleX: _reactNative.I18nManager.isRTL ? -1 : 1\n      }]\n    }\n  }),\n  iconWithLabel: _reactNative.Platform.OS === 'ios' ? {\n    marginRight: 6\n  } : {},\n  iconMaskContainer: {\n    flex: 1,\n    flexDirection: 'row',\n    justifyContent: 'center'\n  },\n  iconMaskFillerRect: {\n    flex: 1,\n    backgroundColor: '#000'\n  },\n  iconMask: {\n    height: 21,\n    width: 13,\n    marginLeft: -14.5,\n    marginVertical: 12,\n    alignSelf: 'center',\n    resizeMode: 'contain',\n    transform: [{\n      scaleX: _reactNative.I18nManager.isRTL ? -1 : 1\n    }]\n  }\n});","map":{"version":3,"sources":["HeaderBackButton.tsx"],"names":["HeaderBackButton","disabled","allowFontScaling","backImage","label","labelStyle","labelVisible","Platform","OS","onLabelLayout","onPress","pressColorAndroid","customPressColorAndroid","screenLayout","tintColor","customTintColor","titleLayout","truncatedLabel","accessibilityLabel","style","dark","colors","useTheme","initialLabelWidth","setInitialLabelWidth","React","useState","undefined","select","ios","primary","default","text","handleLabelLayout","e","nativeEvent","layout","x","width","shouldTruncateLabel","renderBackImage","styles","icon","Boolean","iconWithLabel","require","renderLabel","leftLabelText","labelElement","labelWrapper","minWidth","color","iconMaskContainer","iconMask","iconMaskFillerRect","handlePress","requestAnimationFrame","container","top","right","bottom","left","create","alignItems","flexDirection","marginVertical","marginHorizontal","opacity","fontSize","letterSpacing","height","marginLeft","marginRight","resizeMode","transform","scaleX","I18nManager","isRTL","margin","flex","justifyContent","backgroundColor","alignSelf"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport {\n  Animated,\n  I18nManager,\n  Image,\n  View,\n  Platform,\n  StyleSheet,\n  LayoutChangeEvent,\n} from 'react-native';\nimport { useTheme } from '@react-navigation/native';\nimport MaskedView from '../MaskedView';\nimport TouchableItem from '../TouchableItem';\nimport type { StackHeaderLeftButtonProps } from '../../types';\n\ntype Props = StackHeaderLeftButtonProps;\n\nexport default function HeaderBackButton({\n  disabled,\n  allowFontScaling,\n  backImage,\n  label,\n  labelStyle,\n  labelVisible = Platform.OS === 'ios',\n  onLabelLayout,\n  onPress,\n  pressColorAndroid: customPressColorAndroid,\n  screenLayout,\n  tintColor: customTintColor,\n  titleLayout,\n  truncatedLabel = 'Back',\n  accessibilityLabel = label && label !== 'Back' ? `${label}, back` : 'Go back',\n  style,\n}: Props) {\n  const { dark, colors } = useTheme();\n\n  const [initialLabelWidth, setInitialLabelWidth] = React.useState<\n    undefined | number\n  >(undefined);\n\n  const tintColor =\n    customTintColor !== undefined\n      ? customTintColor\n      : Platform.select({\n          ios: colors.primary,\n          default: colors.text,\n        });\n\n  const pressColorAndroid =\n    customPressColorAndroid !== undefined\n      ? customPressColorAndroid\n      : dark\n      ? 'rgba(255, 255, 255, .32)'\n      : 'rgba(0, 0, 0, .32)';\n\n  const handleLabelLayout = (e: LayoutChangeEvent) => {\n    onLabelLayout?.(e);\n\n    setInitialLabelWidth(e.nativeEvent.layout.x + e.nativeEvent.layout.width);\n  };\n\n  const shouldTruncateLabel = () => {\n    return (\n      !label ||\n      (initialLabelWidth &&\n        titleLayout &&\n        screenLayout &&\n        (screenLayout.width - titleLayout.width) / 2 < initialLabelWidth + 26)\n    );\n  };\n\n  const renderBackImage = () => {\n    if (backImage) {\n      return backImage({ tintColor });\n    } else {\n      return (\n        <Image\n          style={[\n            styles.icon,\n            Boolean(labelVisible) && styles.iconWithLabel,\n            Boolean(tintColor) && { tintColor },\n          ]}\n          source={require('../assets/back-icon.png')}\n          fadeDuration={0}\n        />\n      );\n    }\n  };\n\n  const renderLabel = () => {\n    const leftLabelText = shouldTruncateLabel() ? truncatedLabel : label;\n\n    if (!labelVisible || leftLabelText === undefined) {\n      return null;\n    }\n\n    const labelElement = (\n      <View\n        style={\n          screenLayout\n            ? // We make the button extend till the middle of the screen\n              // Otherwise it appears to cut off when translating\n              [styles.labelWrapper, { minWidth: screenLayout.width / 2 - 27 }]\n            : null\n        }\n      >\n        <Animated.Text\n          accessible={false}\n          onLayout={\n            // This measurement is used to determine if we should truncate the label when it doesn't fit\n            // Only measure it when label is not truncated because we want the measurement of full label\n            leftLabelText === label ? handleLabelLayout : undefined\n          }\n          style={[\n            styles.label,\n            tintColor ? { color: tintColor } : null,\n            labelStyle,\n          ]}\n          numberOfLines={1}\n          allowFontScaling={!!allowFontScaling}\n        >\n          {leftLabelText}\n        </Animated.Text>\n      </View>\n    );\n\n    if (backImage || Platform.OS !== 'ios') {\n      // When a custom backimage is specified, we can't mask the label\n      // Otherwise there might be weird effect due to our mask not being the same as the image\n      return labelElement;\n    }\n\n    return (\n      <MaskedView\n        maskElement={\n          <View style={styles.iconMaskContainer}>\n            <Image\n              source={require('../assets/back-icon-mask.png')}\n              style={styles.iconMask}\n            />\n            <View style={styles.iconMaskFillerRect} />\n          </View>\n        }\n      >\n        {labelElement}\n      </MaskedView>\n    );\n  };\n\n  const handlePress = () => onPress && requestAnimationFrame(onPress);\n\n  return (\n    <TouchableItem\n      disabled={disabled}\n      accessible\n      accessibilityRole=\"button\"\n      accessibilityComponentType=\"button\"\n      accessibilityLabel={accessibilityLabel}\n      accessibilityTraits=\"button\"\n      testID=\"header-back\"\n      delayPressIn={0}\n      onPress={disabled ? undefined : handlePress}\n      pressColor={pressColorAndroid}\n      style={[styles.container, disabled && styles.disabled, style]}\n      hitSlop={Platform.select({\n        ios: undefined,\n        default: { top: 16, right: 16, bottom: 16, left: 16 },\n      })}\n      borderless\n    >\n      <React.Fragment>\n        {renderBackImage()}\n        {renderLabel()}\n      </React.Fragment>\n    </TouchableItem>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    alignItems: 'center',\n    flexDirection: 'row',\n    ...Platform.select({\n      ios: null,\n      default: {\n        marginVertical: 3,\n        marginHorizontal: 11,\n      },\n    }),\n  },\n  disabled: {\n    opacity: 0.5,\n  },\n  label: {\n    fontSize: 17,\n    // Title and back label are a bit different width due to title being bold\n    // Adjusting the letterSpacing makes them coincide better\n    letterSpacing: 0.35,\n  },\n  labelWrapper: {\n    // These styles will make sure that the label doesn't fill the available space\n    // Otherwise it messes with the measurement of the label\n    flexDirection: 'row',\n    alignItems: 'flex-start',\n  },\n  icon: Platform.select({\n    ios: {\n      height: 21,\n      width: 13,\n      marginLeft: 8,\n      marginRight: 22,\n      marginVertical: 12,\n      resizeMode: 'contain',\n      transform: [{ scaleX: I18nManager.isRTL ? -1 : 1 }],\n    },\n    default: {\n      height: 24,\n      width: 24,\n      margin: 3,\n      resizeMode: 'contain',\n      transform: [{ scaleX: I18nManager.isRTL ? -1 : 1 }],\n    },\n  }),\n  iconWithLabel:\n    Platform.OS === 'ios'\n      ? {\n          marginRight: 6,\n        }\n      : {},\n  iconMaskContainer: {\n    flex: 1,\n    flexDirection: 'row',\n    justifyContent: 'center',\n  },\n  iconMaskFillerRect: {\n    flex: 1,\n    backgroundColor: '#000',\n  },\n  iconMask: {\n    height: 21,\n    width: 13,\n    marginLeft: -14.5,\n    marginVertical: 12,\n    alignSelf: 'center',\n    resizeMode: 'contain',\n    transform: [{ scaleX: I18nManager.isRTL ? -1 : 1 }],\n  },\n});\n"]},"metadata":{},"sourceType":"script"}