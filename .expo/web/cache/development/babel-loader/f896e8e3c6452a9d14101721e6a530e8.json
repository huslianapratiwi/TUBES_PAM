{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = StackRouter;\nexports.StackActions = void 0;\nvar _toConsumableArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/toConsumableArray\"));\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\nvar _nonSecure = require(\"nanoid/non-secure\");\nvar _BaseRouter = _interopRequireDefault(require(\"./BaseRouter\"));\nvar StackActions = {\n  replace: function replace(name, params) {\n    return {\n      type: 'REPLACE',\n      payload: {\n        name: name,\n        params: params\n      }\n    };\n  },\n  push: function push(name, params) {\n    return {\n      type: 'PUSH',\n      payload: {\n        name: name,\n        params: params\n      }\n    };\n  },\n  pop: function pop() {\n    var count = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;\n    return {\n      type: 'POP',\n      payload: {\n        count: count\n      }\n    };\n  },\n  popToTop: function popToTop() {\n    return {\n      type: 'POP_TO_TOP'\n    };\n  }\n};\nexports.StackActions = StackActions;\nfunction StackRouter(options) {\n  var router = (0, _extends2.default)({}, _BaseRouter.default, {\n    type: 'stack',\n    getInitialState: function getInitialState(_ref) {\n      var routeNames = _ref.routeNames,\n        routeParamList = _ref.routeParamList;\n      var initialRouteName = options.initialRouteName !== undefined && routeNames.includes(options.initialRouteName) ? options.initialRouteName : routeNames[0];\n      return {\n        stale: false,\n        type: 'stack',\n        key: \"stack-\".concat((0, _nonSecure.nanoid)()),\n        index: 0,\n        routeNames: routeNames,\n        routes: [{\n          key: \"\".concat(initialRouteName, \"-\").concat((0, _nonSecure.nanoid)()),\n          name: initialRouteName,\n          params: routeParamList[initialRouteName]\n        }]\n      };\n    },\n    getRehydratedState: function getRehydratedState(partialState, _ref2) {\n      var routeNames = _ref2.routeNames,\n        routeParamList = _ref2.routeParamList;\n      var state = partialState;\n      if (state.stale === false) {\n        return state;\n      }\n      var routes = state.routes.filter(function (route) {\n        return routeNames.includes(route.name);\n      }).map(function (route) {\n        return (0, _extends2.default)({}, route, {\n          key: route.key || \"\".concat(route.name, \"-\").concat((0, _nonSecure.nanoid)()),\n          params: routeParamList[route.name] !== undefined ? (0, _extends2.default)({}, routeParamList[route.name], route.params) : route.params\n        });\n      });\n      if (routes.length === 0) {\n        var initialRouteName = options.initialRouteName !== undefined ? options.initialRouteName : routeNames[0];\n        routes.push({\n          key: \"\".concat(initialRouteName, \"-\").concat((0, _nonSecure.nanoid)()),\n          name: initialRouteName,\n          params: routeParamList[initialRouteName]\n        });\n      }\n      return {\n        stale: false,\n        type: 'stack',\n        key: \"stack-\".concat((0, _nonSecure.nanoid)()),\n        index: routes.length - 1,\n        routeNames: routeNames,\n        routes: routes\n      };\n    },\n    getStateForRouteNamesChange: function getStateForRouteNamesChange(state, _ref3) {\n      var routeNames = _ref3.routeNames,\n        routeParamList = _ref3.routeParamList;\n      var routes = state.routes.filter(function (route) {\n        return routeNames.includes(route.name);\n      });\n      if (routes.length === 0) {\n        var initialRouteName = options.initialRouteName !== undefined && routeNames.includes(options.initialRouteName) ? options.initialRouteName : routeNames[0];\n        routes.push({\n          key: \"\".concat(initialRouteName, \"-\").concat((0, _nonSecure.nanoid)()),\n          name: initialRouteName,\n          params: routeParamList[initialRouteName]\n        });\n      }\n      return (0, _extends2.default)({}, state, {\n        routeNames: routeNames,\n        routes: routes,\n        index: Math.min(state.index, routes.length - 1)\n      });\n    },\n    getStateForRouteFocus: function getStateForRouteFocus(state, key) {\n      var index = state.routes.findIndex(function (r) {\n        return r.key === key;\n      });\n      if (index === -1 || index === state.index) {\n        return state;\n      }\n      return (0, _extends2.default)({}, state, {\n        index: index,\n        routes: state.routes.slice(0, index + 1)\n      });\n    },\n    getStateForAction: function getStateForAction(state, action, options) {\n      var routeParamList = options.routeParamList;\n      switch (action.type) {\n        case 'REPLACE':\n          {\n            var index = action.target === state.key && action.source ? state.routes.findIndex(function (r) {\n              return r.key === action.source;\n            }) : state.index;\n            if (index === -1) {\n              return null;\n            }\n            var _action$payload = action.payload,\n              name = _action$payload.name,\n              key = _action$payload.key,\n              params = _action$payload.params;\n            if (!state.routeNames.includes(name)) {\n              return null;\n            }\n            return (0, _extends2.default)({}, state, {\n              routes: state.routes.map(function (route, i) {\n                return i === index ? {\n                  key: key !== undefined ? key : \"\".concat(name, \"-\").concat((0, _nonSecure.nanoid)()),\n                  name: name,\n                  params: routeParamList[name] !== undefined ? (0, _extends2.default)({}, routeParamList[name], params) : params\n                } : route;\n              })\n            });\n          }\n        case 'PUSH':\n          if (state.routeNames.includes(action.payload.name)) {\n            var getId = options.routeGetIdList[action.payload.name];\n            var id = getId === null || getId === void 0 ? void 0 : getId({\n              params: action.payload.params\n            });\n            var route = action.payload.name && action.payload.key ? state.routes.find(function (route) {\n              return route.name === action.payload.name && route.key === action.payload.key;\n            }) : id ? state.routes.find(function (route) {\n              return route.name === action.payload.name && id === (getId === null || getId === void 0 ? void 0 : getId({\n                params: route.params\n              }));\n            }) : undefined;\n            var routes;\n            if (route) {\n              routes = state.routes.filter(function (r) {\n                return r.key !== route.key;\n              });\n              routes.push((0, _extends2.default)({}, route, {\n                params: action.payload.params !== undefined ? (0, _extends2.default)({}, route.params, action.payload.params) : route.params\n              }));\n            } else {\n              var _action$payload$key;\n              routes = [].concat((0, _toConsumableArray2.default)(state.routes), [{\n                key: (_action$payload$key = action.payload.key) !== null && _action$payload$key !== void 0 ? _action$payload$key : \"\".concat(action.payload.name, \"-\").concat((0, _nonSecure.nanoid)()),\n                name: action.payload.name,\n                params: routeParamList[action.payload.name] !== undefined ? (0, _extends2.default)({}, routeParamList[action.payload.name], action.payload.params) : action.payload.params\n              }]);\n            }\n            return (0, _extends2.default)({}, state, {\n              index: routes.length - 1,\n              routes: routes\n            });\n          }\n          return null;\n        case 'POP':\n          {\n            var _index = action.target === state.key && action.source ? state.routes.findIndex(function (r) {\n              return r.key === action.source;\n            }) : state.index;\n            if (_index > 0) {\n              var count = Math.max(_index - action.payload.count + 1, 1);\n              var _routes = state.routes.slice(0, count).concat(state.routes.slice(_index + 1));\n              return (0, _extends2.default)({}, state, {\n                index: _routes.length - 1,\n                routes: _routes\n              });\n            }\n            return null;\n          }\n        case 'POP_TO_TOP':\n          return router.getStateForAction(state, {\n            type: 'POP',\n            payload: {\n              count: state.routes.length - 1\n            }\n          }, options);\n        case 'NAVIGATE':\n          if (action.payload.name !== undefined && !state.routeNames.includes(action.payload.name)) {\n            return null;\n          }\n          if (action.payload.key || action.payload.name) {\n            var _index2 = -1;\n            var _getId = action.payload.key === undefined && action.payload.name !== undefined ? options.routeGetIdList[action.payload.name] : undefined;\n            var _id = _getId === null || _getId === void 0 ? void 0 : _getId({\n              params: action.payload.params\n            });\n            if (_id) {\n              _index2 = state.routes.findIndex(function (route) {\n                return route.name === action.payload.name && _id === (_getId === null || _getId === void 0 ? void 0 : _getId({\n                  params: route.params\n                }));\n              });\n            } else if (state.routes[state.index].name === action.payload.name && action.payload.key === undefined || state.routes[state.index].key === action.payload.key) {\n              _index2 = state.index;\n            } else {\n              for (var i = state.routes.length - 1; i >= 0; i--) {\n                if (state.routes[i].name === action.payload.name && action.payload.key === undefined || state.routes[i].key === action.payload.key) {\n                  _index2 = i;\n                  break;\n                }\n              }\n            }\n            if (_index2 === -1 && action.payload.key && action.payload.name === undefined) {\n              return null;\n            }\n            if (_index2 === -1 && action.payload.name !== undefined) {\n              var _action$payload$key2;\n              var _routes2 = [].concat((0, _toConsumableArray2.default)(state.routes), [{\n                key: (_action$payload$key2 = action.payload.key) !== null && _action$payload$key2 !== void 0 ? _action$payload$key2 : \"\".concat(action.payload.name, \"-\").concat((0, _nonSecure.nanoid)()),\n                name: action.payload.name,\n                params: routeParamList[action.payload.name] !== undefined ? (0, _extends2.default)({}, routeParamList[action.payload.name], action.payload.params) : action.payload.params\n              }]);\n              return (0, _extends2.default)({}, state, {\n                routes: _routes2,\n                index: _routes2.length - 1\n              });\n            }\n            var _route = state.routes[_index2];\n            var _params;\n            if (action.payload.merge === false) {\n              _params = routeParamList[_route.name] !== undefined ? (0, _extends2.default)({}, routeParamList[_route.name], action.payload.params) : action.payload.params;\n            } else {\n              _params = action.payload.params ? (0, _extends2.default)({}, _route.params, action.payload.params) : _route.params;\n            }\n            return (0, _extends2.default)({}, state, {\n              index: _index2,\n              routes: [].concat((0, _toConsumableArray2.default)(state.routes.slice(0, _index2)), [_params !== _route.params ? (0, _extends2.default)({}, _route, {\n                params: _params\n              }) : state.routes[_index2]])\n            });\n          }\n          return null;\n        case 'GO_BACK':\n          if (state.index > 0) {\n            return router.getStateForAction(state, {\n              type: 'POP',\n              payload: {\n                count: 1\n              },\n              target: action.target,\n              source: action.source\n            }, options);\n          }\n          return null;\n        default:\n          return _BaseRouter.default.getStateForAction(state, action);\n      }\n    },\n    actionCreators: StackActions\n  });\n  return router;\n}","map":{"version":3,"sources":["StackRouter.tsx"],"names":["StackActions","replace","name","params","type","payload","push","pop","count","popToTop","StackRouter","options","router","BaseRouter","getInitialState","routeNames","routeParamList","initialRouteName","undefined","includes","stale","key","nanoid","index","routes","getRehydratedState","partialState","state","filter","route","map","length","getStateForRouteNamesChange","Math","min","getStateForRouteFocus","findIndex","r","slice","getStateForAction","action","target","source","i","getId","routeGetIdList","id","find","max","concat","merge","actionCreators"],"mappings":"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","sourcesContent":["import { nanoid } from 'nanoid/non-secure';\nimport BaseRouter from './BaseRouter';\nimport type {\n  NavigationState,\n  CommonNavigationAction,\n  Router,\n  DefaultRouterOptions,\n  Route,\n  ParamListBase,\n} from './types';\n\nexport type StackActionType =\n  | {\n      type: 'REPLACE';\n      payload: { name: string; key?: string | undefined; params?: object };\n      source?: string;\n      target?: string;\n    }\n  | {\n      type: 'PUSH';\n      payload: { name: string; key?: string | undefined; params?: object };\n      source?: string;\n      target?: string;\n    }\n  | {\n      type: 'POP';\n      payload: { count: number };\n      source?: string;\n      target?: string;\n    }\n  | {\n      type: 'POP_TO_TOP';\n      source?: string;\n      target?: string;\n    };\n\nexport type StackRouterOptions = DefaultRouterOptions;\n\nexport type StackNavigationState<\n  ParamList extends ParamListBase\n> = NavigationState<ParamList> & {\n  /**\n   * Type of the router, in this case, it's stack.\n   */\n  type: 'stack';\n};\n\nexport type StackActionHelpers<ParamList extends ParamListBase> = {\n  /**\n   * Replace the current route with a new one.\n   *\n   * @param name Route name of the new route.\n   * @param [params] Params object for the new route.\n   */\n  replace<RouteName extends keyof ParamList>(\n    ...args: undefined extends ParamList[RouteName]\n      ? [RouteName] | [RouteName, ParamList[RouteName]]\n      : [RouteName, ParamList[RouteName]]\n  ): void;\n\n  /**\n   * Push a new screen onto the stack.\n   *\n   * @param name Name of the route for the tab.\n   * @param [params] Params object for the route.\n   */\n  push<RouteName extends keyof ParamList>(\n    ...args: undefined extends ParamList[RouteName]\n      ? [RouteName] | [RouteName, ParamList[RouteName]]\n      : [RouteName, ParamList[RouteName]]\n  ): void;\n\n  /**\n   * Pop a screen from the stack.\n   */\n  pop(count?: number): void;\n\n  /**\n   * Pop to the first route in the stack, dismissing all other screens.\n   */\n  popToTop(): void;\n};\n\nexport const StackActions = {\n  replace(name: string, params?: object): StackActionType {\n    return { type: 'REPLACE', payload: { name, params } };\n  },\n  push(name: string, params?: object): StackActionType {\n    return { type: 'PUSH', payload: { name, params } };\n  },\n  pop(count: number = 1): StackActionType {\n    return { type: 'POP', payload: { count } };\n  },\n  popToTop(): StackActionType {\n    return { type: 'POP_TO_TOP' };\n  },\n};\n\nexport default function StackRouter(options: StackRouterOptions) {\n  const router: Router<\n    StackNavigationState<ParamListBase>,\n    CommonNavigationAction | StackActionType\n  > = {\n    ...BaseRouter,\n\n    type: 'stack',\n\n    getInitialState({ routeNames, routeParamList }) {\n      const initialRouteName =\n        options.initialRouteName !== undefined &&\n        routeNames.includes(options.initialRouteName)\n          ? options.initialRouteName\n          : routeNames[0];\n\n      return {\n        stale: false,\n        type: 'stack',\n        key: `stack-${nanoid()}`,\n        index: 0,\n        routeNames,\n        routes: [\n          {\n            key: `${initialRouteName}-${nanoid()}`,\n            name: initialRouteName,\n            params: routeParamList[initialRouteName],\n          },\n        ],\n      };\n    },\n\n    getRehydratedState(partialState, { routeNames, routeParamList }) {\n      let state = partialState;\n\n      if (state.stale === false) {\n        return state;\n      }\n\n      const routes = state.routes\n        .filter((route) => routeNames.includes(route.name))\n        .map(\n          (route) =>\n            ({\n              ...route,\n              key: route.key || `${route.name}-${nanoid()}`,\n              params:\n                routeParamList[route.name] !== undefined\n                  ? {\n                      ...routeParamList[route.name],\n                      ...route.params,\n                    }\n                  : route.params,\n            } as Route<string>)\n        );\n\n      if (routes.length === 0) {\n        const initialRouteName =\n          options.initialRouteName !== undefined\n            ? options.initialRouteName\n            : routeNames[0];\n\n        routes.push({\n          key: `${initialRouteName}-${nanoid()}`,\n          name: initialRouteName,\n          params: routeParamList[initialRouteName],\n        });\n      }\n\n      return {\n        stale: false,\n        type: 'stack',\n        key: `stack-${nanoid()}`,\n        index: routes.length - 1,\n        routeNames,\n        routes,\n      };\n    },\n\n    getStateForRouteNamesChange(state, { routeNames, routeParamList }) {\n      const routes = state.routes.filter((route) =>\n        routeNames.includes(route.name)\n      );\n\n      if (routes.length === 0) {\n        const initialRouteName =\n          options.initialRouteName !== undefined &&\n          routeNames.includes(options.initialRouteName)\n            ? options.initialRouteName\n            : routeNames[0];\n\n        routes.push({\n          key: `${initialRouteName}-${nanoid()}`,\n          name: initialRouteName,\n          params: routeParamList[initialRouteName],\n        });\n      }\n\n      return {\n        ...state,\n        routeNames,\n        routes,\n        index: Math.min(state.index, routes.length - 1),\n      };\n    },\n\n    getStateForRouteFocus(state, key) {\n      const index = state.routes.findIndex((r) => r.key === key);\n\n      if (index === -1 || index === state.index) {\n        return state;\n      }\n\n      return {\n        ...state,\n        index,\n        routes: state.routes.slice(0, index + 1),\n      };\n    },\n\n    getStateForAction(state, action, options) {\n      const { routeParamList } = options;\n\n      switch (action.type) {\n        case 'REPLACE': {\n          const index =\n            action.target === state.key && action.source\n              ? state.routes.findIndex((r) => r.key === action.source)\n              : state.index;\n\n          if (index === -1) {\n            return null;\n          }\n\n          const { name, key, params } = action.payload;\n\n          if (!state.routeNames.includes(name)) {\n            return null;\n          }\n\n          return {\n            ...state,\n            routes: state.routes.map((route, i) =>\n              i === index\n                ? {\n                    key: key !== undefined ? key : `${name}-${nanoid()}`,\n                    name,\n                    params:\n                      routeParamList[name] !== undefined\n                        ? {\n                            ...routeParamList[name],\n                            ...params,\n                          }\n                        : params,\n                  }\n                : route\n            ),\n          };\n        }\n\n        case 'PUSH':\n          if (state.routeNames.includes(action.payload.name)) {\n            const getId = options.routeGetIdList[action.payload.name];\n            const id = getId?.({ params: action.payload.params });\n\n            const route =\n              action.payload.name && action.payload.key\n                ? state.routes.find(\n                    (route) =>\n                      route.name === action.payload.name &&\n                      route.key === action.payload.key\n                  )\n                : id\n                ? state.routes.find(\n                    (route) =>\n                      route.name === action.payload.name &&\n                      id === getId?.({ params: route.params })\n                  )\n                : undefined;\n\n            let routes: Route<string>[];\n\n            if (route) {\n              routes = state.routes.filter((r) => r.key !== route.key);\n              routes.push({\n                ...route,\n                params:\n                  action.payload.params !== undefined\n                    ? {\n                        ...route.params,\n                        ...action.payload.params,\n                      }\n                    : route.params,\n              });\n            } else {\n              routes = [\n                ...state.routes,\n                {\n                  key:\n                    action.payload.key ?? `${action.payload.name}-${nanoid()}`,\n                  name: action.payload.name,\n                  params:\n                    routeParamList[action.payload.name] !== undefined\n                      ? {\n                          ...routeParamList[action.payload.name],\n                          ...action.payload.params,\n                        }\n                      : action.payload.params,\n                },\n              ];\n            }\n\n            return {\n              ...state,\n              index: routes.length - 1,\n              routes,\n            };\n          }\n\n          return null;\n\n        case 'POP': {\n          const index =\n            action.target === state.key && action.source\n              ? state.routes.findIndex((r) => r.key === action.source)\n              : state.index;\n\n          if (index > 0) {\n            const count = Math.max(index - action.payload.count + 1, 1);\n            const routes = state.routes\n              .slice(0, count)\n              .concat(state.routes.slice(index + 1));\n\n            return {\n              ...state,\n              index: routes.length - 1,\n              routes,\n            };\n          }\n\n          return null;\n        }\n\n        case 'POP_TO_TOP':\n          return router.getStateForAction(\n            state,\n            {\n              type: 'POP',\n              payload: { count: state.routes.length - 1 },\n            },\n            options\n          );\n\n        case 'NAVIGATE':\n          if (\n            action.payload.name !== undefined &&\n            !state.routeNames.includes(action.payload.name)\n          ) {\n            return null;\n          }\n\n          if (action.payload.key || action.payload.name) {\n            // If the route already exists, navigate to that\n            let index = -1;\n\n            const getId =\n              // `getId` and `key` can't be used together\n              action.payload.key === undefined &&\n              action.payload.name !== undefined\n                ? options.routeGetIdList[action.payload.name]\n                : undefined;\n            const id = getId?.({ params: action.payload.params });\n\n            if (id) {\n              index = state.routes.findIndex(\n                (route) =>\n                  route.name === action.payload.name &&\n                  id === getId?.({ params: route.params })\n              );\n            } else if (\n              (state.routes[state.index].name === action.payload.name &&\n                action.payload.key === undefined) ||\n              state.routes[state.index].key === action.payload.key\n            ) {\n              index = state.index;\n            } else {\n              for (let i = state.routes.length - 1; i >= 0; i--) {\n                if (\n                  (state.routes[i].name === action.payload.name &&\n                    action.payload.key === undefined) ||\n                  state.routes[i].key === action.payload.key\n                ) {\n                  index = i;\n                  break;\n                }\n              }\n            }\n\n            if (\n              index === -1 &&\n              action.payload.key &&\n              action.payload.name === undefined\n            ) {\n              return null;\n            }\n\n            if (index === -1 && action.payload.name !== undefined) {\n              const routes = [\n                ...state.routes,\n                {\n                  key:\n                    action.payload.key ?? `${action.payload.name}-${nanoid()}`,\n                  name: action.payload.name,\n                  params:\n                    routeParamList[action.payload.name] !== undefined\n                      ? {\n                          ...routeParamList[action.payload.name],\n                          ...action.payload.params,\n                        }\n                      : action.payload.params,\n                },\n              ];\n\n              return {\n                ...state,\n                routes,\n                index: routes.length - 1,\n              };\n            }\n\n            const route = state.routes[index];\n\n            let params;\n\n            if (action.payload.merge === false) {\n              params =\n                routeParamList[route.name] !== undefined\n                  ? {\n                      ...routeParamList[route.name],\n                      ...action.payload.params,\n                    }\n                  : action.payload.params;\n            } else {\n              params = action.payload.params\n                ? {\n                    ...route.params,\n                    ...action.payload.params,\n                  }\n                : route.params;\n            }\n\n            return {\n              ...state,\n              index,\n              routes: [\n                ...state.routes.slice(0, index),\n                params !== route.params\n                  ? { ...route, params }\n                  : state.routes[index],\n              ],\n            };\n          }\n\n          return null;\n\n        case 'GO_BACK':\n          if (state.index > 0) {\n            return router.getStateForAction(\n              state,\n              {\n                type: 'POP',\n                payload: { count: 1 },\n                target: action.target,\n                source: action.source,\n              },\n              options\n            );\n          }\n\n          return null;\n\n        default:\n          return BaseRouter.getStateForAction(state, action);\n      }\n    },\n\n    actionCreators: StackActions,\n  };\n\n  return router;\n}\n"]},"metadata":{},"sourceType":"script"}