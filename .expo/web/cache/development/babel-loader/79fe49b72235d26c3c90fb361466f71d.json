{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n  return keys;\n}\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n  return target;\n}\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n  return target;\n}\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n  return target;\n}\nimport * as React from 'react';\nimport { CommonActions } from '@react-navigation/routers';\nimport EnsureSingleNavigator from \"./EnsureSingleNavigator\";\nimport NavigationBuilderContext from \"./NavigationBuilderContext\";\nimport NavigationStateContext from \"./NavigationStateContext\";\nimport UnhandledActionContext from \"./UnhandledActionContext\";\nimport { ScheduleUpdateContext } from \"./useScheduleUpdate\";\nimport useChildListeners from \"./useChildListeners\";\nimport useKeyedChildListeners from \"./useKeyedChildListeners\";\nimport useOptionsGetters from \"./useOptionsGetters\";\nimport useEventEmitter from \"./useEventEmitter\";\nimport useSyncState from \"./useSyncState\";\nimport checkSerializable from \"./checkSerializable\";\nvar NOT_INITIALIZED_ERROR = \"The 'navigation' object hasn't been initialized yet. This might happen if you don't have a navigator mounted, or if the navigator hasn't finished mounting. See https://reactnavigation.org/docs/navigating-without-navigation-prop#handling-initialization for more details.\";\nvar serializableWarnings = [];\ntry {\n  Object.defineProperty(global, 'REACT_NAVIGATION_REDUX_DEVTOOLS_EXTENSION_INTEGRATION_ENABLED', {\n    set: function set(_) {\n      console.warn(\"Redux devtools extension integration can be enabled with the '@react-navigation/devtools' package. For more details, see https://reactnavigation.org/docs/devtools\");\n    }\n  });\n} catch (e) {}\n\nvar getPartialState = function getPartialState(state) {\n  if (state === undefined) {\n    return;\n  }\n  var key = state.key,\n    routeNames = state.routeNames,\n    partialState = _objectWithoutProperties(state, [\"key\", \"routeNames\"]);\n  return _objectSpread(_objectSpread({}, partialState), {}, {\n    stale: true,\n    routes: state.routes.map(function (route) {\n      if (route.state === undefined) {\n        return route;\n      }\n      return _objectSpread(_objectSpread({}, route), {}, {\n        state: getPartialState(route.state)\n      });\n    })\n  });\n};\n\nvar BaseNavigationContainer = React.forwardRef(function BaseNavigationContainer(_ref, ref) {\n  var initialState = _ref.initialState,\n    onStateChange = _ref.onStateChange,\n    independent = _ref.independent,\n    children = _ref.children;\n  var parent = React.useContext(NavigationStateContext);\n  if (!parent.isDefault && !independent) {\n    throw new Error(\"Looks like you have nested a 'NavigationContainer' inside another. Normally you need only one container at the root of the app, so this was probably an error. If this was intentional, pass 'independent={true}' explicitely. Note that this will make the child navigators disconnected from the parent and you won't be able to navigate between them.\");\n  }\n  var _useSyncState = useSyncState(function () {\n      return getPartialState(initialState == null ? undefined : initialState);\n    }),\n    _useSyncState2 = _slicedToArray(_useSyncState, 5),\n    state = _useSyncState2[0],\n    getState = _useSyncState2[1],\n    setState = _useSyncState2[2],\n    scheduleUpdate = _useSyncState2[3],\n    flushUpdates = _useSyncState2[4];\n  var isFirstMountRef = React.useRef(true);\n  var navigatorKeyRef = React.useRef();\n  var getKey = React.useCallback(function () {\n    return navigatorKeyRef.current;\n  }, []);\n  var setKey = React.useCallback(function (key) {\n    navigatorKeyRef.current = key;\n  }, []);\n  var _useChildListeners = useChildListeners(),\n    listeners = _useChildListeners.listeners,\n    addListener = _useChildListeners.addListener;\n  var _useKeyedChildListene = useKeyedChildListeners(),\n    keyedListeners = _useKeyedChildListene.keyedListeners,\n    addKeyedListener = _useKeyedChildListene.addKeyedListener;\n  var dispatch = function dispatch(action) {\n    if (listeners.focus[0] == null) {\n      throw new Error(NOT_INITIALIZED_ERROR);\n    }\n    listeners.focus[0](function (navigation) {\n      return navigation.dispatch(action);\n    });\n  };\n  var canGoBack = function canGoBack() {\n    if (listeners.focus[0] == null) {\n      return false;\n    }\n    var _listeners$focus$ = listeners.focus[0](function (navigation) {\n        return navigation.canGoBack();\n      }),\n      result = _listeners$focus$.result,\n      handled = _listeners$focus$.handled;\n    if (handled) {\n      return result;\n    } else {\n      return false;\n    }\n  };\n  var resetRoot = React.useCallback(function (state) {\n    setState(state);\n  }, [setState]);\n  var getRootState = React.useCallback(function () {\n    var _keyedListeners$getSt, _keyedListeners$getSt2;\n    return (_keyedListeners$getSt = (_keyedListeners$getSt2 = keyedListeners.getState).root) === null || _keyedListeners$getSt === void 0 ? void 0 : _keyedListeners$getSt.call(_keyedListeners$getSt2);\n  }, [keyedListeners.getState]);\n  var getCurrentRoute = React.useCallback(function () {\n    var state = getRootState();\n    if (state === undefined) {\n      return undefined;\n    }\n    while (state.routes[state.index].state !== undefined) {\n      state = state.routes[state.index].state;\n    }\n    return state.routes[state.index];\n  }, [getRootState]);\n  var emitter = useEventEmitter();\n  var _useOptionsGetters = useOptionsGetters({}),\n    addOptionsGetter = _useOptionsGetters.addOptionsGetter,\n    getCurrentOptions = _useOptionsGetters.getCurrentOptions;\n  React.useImperativeHandle(ref, function () {\n    return _objectSpread(_objectSpread(_objectSpread({}, Object.keys(CommonActions).reduce(function (acc, name) {\n      acc[name] = function () {\n        return dispatch(CommonActions[name].apply(CommonActions, arguments));\n      };\n      return acc;\n    }, {})), emitter.create('root')), {}, {\n      resetRoot: resetRoot,\n      dispatch: dispatch,\n      canGoBack: canGoBack,\n      getRootState: getRootState,\n      dangerouslyGetState: function dangerouslyGetState() {\n        return state;\n      },\n      dangerouslyGetParent: function dangerouslyGetParent() {\n        return undefined;\n      },\n      getCurrentRoute: getCurrentRoute,\n      getCurrentOptions: getCurrentOptions\n    });\n  });\n  var onDispatchAction = React.useCallback(function (action, noop) {\n    emitter.emit({\n      type: '__unsafe_action__',\n      data: {\n        action: action,\n        noop: noop\n      }\n    });\n  }, [emitter]);\n  var lastEmittedOptionsRef = React.useRef();\n  var onOptionsChange = React.useCallback(function (options) {\n    if (lastEmittedOptionsRef.current === options) {\n      return;\n    }\n    lastEmittedOptionsRef.current = options;\n    emitter.emit({\n      type: 'options',\n      data: {\n        options: options\n      }\n    });\n  }, [emitter]);\n  var builderContext = React.useMemo(function () {\n    return {\n      addListener: addListener,\n      addKeyedListener: addKeyedListener,\n      onDispatchAction: onDispatchAction,\n      onOptionsChange: onOptionsChange\n    };\n  }, [addListener, addKeyedListener, onDispatchAction, onOptionsChange]);\n  var scheduleContext = React.useMemo(function () {\n    return {\n      scheduleUpdate: scheduleUpdate,\n      flushUpdates: flushUpdates\n    };\n  }, [scheduleUpdate, flushUpdates]);\n  var isInitialRef = React.useRef(true);\n  var getIsInitial = React.useCallback(function () {\n    return isInitialRef.current;\n  }, []);\n  var context = React.useMemo(function () {\n    return {\n      state: state,\n      getState: getState,\n      setState: setState,\n      getKey: getKey,\n      setKey: setKey,\n      getIsInitial: getIsInitial,\n      addOptionsGetter: addOptionsGetter\n    };\n  }, [state, getState, setState, getKey, setKey, getIsInitial, addOptionsGetter]);\n  var onStateChangeRef = React.useRef(onStateChange);\n  React.useEffect(function () {\n    isInitialRef.current = false;\n    onStateChangeRef.current = onStateChange;\n  });\n  React.useEffect(function () {\n    if ((process && process.env && process.env.NODE_ENV || \"development\") !== 'production') {\n      if (state !== undefined) {\n        var result = checkSerializable(state);\n        if (!result.serializable) {\n          var location = result.location,\n            reason = result.reason;\n          var path = '';\n          var pointer = state;\n          var params = false;\n          for (var i = 0; i < location.length; i++) {\n            var curr = location[i];\n            var prev = location[i - 1];\n            pointer = pointer[curr];\n            if (!params && curr === 'state') {\n              continue;\n            } else if (!params && curr === 'routes') {\n              if (path) {\n                path += ' > ';\n              }\n            } else if (!params && typeof curr === 'number' && prev === 'routes') {\n              var _pointer;\n              path += (_pointer = pointer) === null || _pointer === void 0 ? void 0 : _pointer.name;\n            } else if (!params) {\n              path += \" > \".concat(curr);\n              params = true;\n            } else {\n              if (typeof curr === 'number' || /^[0-9]+$/.test(curr)) {\n                path += \"[\".concat(curr, \"]\");\n              } else if (/^[a-z$_]+$/i.test(curr)) {\n                path += \".\".concat(curr);\n              } else {\n                path += \"[\".concat(JSON.stringify(curr), \"]\");\n              }\n            }\n          }\n          var message = \"Non-serializable values were found in the navigation state. Check:\\n\\n\".concat(path, \" (\").concat(reason, \")\\n\\nThis can break usage such as persisting and restoring state. This might happen if you passed non-serializable values such as function, class instances etc. in params. If you need to use components with callbacks in your options, you can use 'navigation.setOptions' instead. See https://reactnavigation.org/docs/troubleshooting#i-get-the-warning-non-serializable-values-were-found-in-the-navigation-state for more details.\");\n          if (!serializableWarnings.includes(message)) {\n            serializableWarnings.push(message);\n            console.warn(message);\n          }\n        }\n      }\n    }\n    emitter.emit({\n      type: 'state',\n      data: {\n        state: state\n      }\n    });\n    if (!isFirstMountRef.current && onStateChangeRef.current) {\n      onStateChangeRef.current(getRootState());\n    }\n    isFirstMountRef.current = false;\n  }, [getRootState, emitter, state]);\n  var onUnhandledAction = React.useCallback(function (action) {\n    if ((process && process.env && process.env.NODE_ENV || \"development\") === 'production') {\n      return;\n    }\n    var payload = action.payload;\n    var message = \"The action '\".concat(action.type, \"'\").concat(payload ? \" with payload \".concat(JSON.stringify(action.payload)) : '', \" was not handled by any navigator.\");\n    switch (action.type) {\n      case 'NAVIGATE':\n      case 'PUSH':\n      case 'REPLACE':\n      case 'JUMP_TO':\n        if (payload === null || payload === void 0 ? void 0 : payload.name) {\n          message += \"\\n\\nDo you have a screen named '\".concat(payload.name, \"'?\\n\\nIf you're trying to navigate to a screen in a nested navigator, see https://reactnavigation.org/docs/nesting-navigators#navigating-to-a-screen-in-a-nested-navigator.\");\n        } else {\n          message += \"\\n\\nYou need to pass the name of the screen to navigate to.\\n\\nSee https://reactnavigation.org/docs/navigation-actions for usage.\";\n        }\n        break;\n      case 'GO_BACK':\n      case 'POP':\n      case 'POP_TO_TOP':\n        message += \"\\n\\nIs there any screen to go back to?\";\n        break;\n      case 'OPEN_DRAWER':\n      case 'CLOSE_DRAWER':\n      case 'TOGGLE_DRAWER':\n        message += \"\\n\\nIs your screen inside a Drawer navigator?\";\n        break;\n    }\n    message += \"\\n\\nThis is a development-only warning and won't be shown in production.\";\n    console.error(message);\n  }, []);\n  return React.createElement(ScheduleUpdateContext.Provider, {\n    value: scheduleContext\n  }, React.createElement(NavigationBuilderContext.Provider, {\n    value: builderContext\n  }, React.createElement(NavigationStateContext.Provider, {\n    value: context\n  }, React.createElement(UnhandledActionContext.Provider, {\n    value: onUnhandledAction\n  }, React.createElement(EnsureSingleNavigator, null, children)))));\n});\nexport default BaseNavigationContainer;","map":{"version":3,"mappings":"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","names":["React","CommonActions","EnsureSingleNavigator","NavigationBuilderContext","NavigationStateContext","UnhandledActionContext","ScheduleUpdateContext","useChildListeners","useKeyedChildListeners","useOptionsGetters","useEventEmitter","useSyncState","checkSerializable","NOT_INITIALIZED_ERROR","serializableWarnings","Object","defineProperty","global","set","_","console","warn","e","getPartialState","state","undefined","key","routeNames","partialState","stale","routes","map","route","BaseNavigationContainer","forwardRef","ref","initialState","onStateChange","independent","children","parent","useContext","isDefault","Error","getState","setState","scheduleUpdate","flushUpdates","isFirstMountRef","useRef","navigatorKeyRef","getKey","useCallback","current","setKey","listeners","addListener","keyedListeners","addKeyedListener","dispatch","action","focus","navigation","canGoBack","result","handled","resetRoot","getRootState","root","_keyedListeners$getSt","getCurrentRoute","index","emitter","addOptionsGetter","getCurrentOptions","useImperativeHandle","keys","reduce","acc","name","create","dangerouslyGetState","dangerouslyGetParent","onDispatchAction","noop","emit","type","data","lastEmittedOptionsRef","onOptionsChange","options","builderContext","useMemo","scheduleContext","isInitialRef","getIsInitial","context","onStateChangeRef","useEffect","process","serializable","location","reason","path","pointer","params","i","length","curr","prev","_pointer","test","JSON","stringify","message","includes","push","onUnhandledAction","payload","error","Provider","value"],"sources":["BaseNavigationContainer.tsx"],"sourcesContent":["import * as React from 'react';\nimport {\n  CommonActions,\n  Route,\n  NavigationState,\n  InitialState,\n  PartialState,\n  NavigationAction,\n} from '@react-navigation/routers';\nimport EnsureSingleNavigator from './EnsureSingleNavigator';\nimport NavigationBuilderContext from './NavigationBuilderContext';\nimport NavigationStateContext from './NavigationStateContext';\nimport UnhandledActionContext from './UnhandledActionContext';\nimport { ScheduleUpdateContext } from './useScheduleUpdate';\nimport useChildListeners from './useChildListeners';\nimport useKeyedChildListeners from './useKeyedChildListeners';\nimport useOptionsGetters from './useOptionsGetters';\nimport useEventEmitter from './useEventEmitter';\nimport useSyncState from './useSyncState';\nimport checkSerializable from './checkSerializable';\nimport type {\n  NavigationContainerEventMap,\n  NavigationContainerRef,\n  NavigationContainerProps,\n} from './types';\n\ntype State = NavigationState | PartialState<NavigationState> | undefined;\n\nconst NOT_INITIALIZED_ERROR =\n  \"The 'navigation' object hasn't been initialized yet. This might happen if you don't have a navigator mounted, or if the navigator hasn't finished mounting. See https://reactnavigation.org/docs/navigating-without-navigation-prop#handling-initialization for more details.\";\n\nconst serializableWarnings: string[] = [];\n\ntry {\n  /**\n   * Migration instructions for removal of devtools from core\n   */\n  Object.defineProperty(\n    global,\n    'REACT_NAVIGATION_REDUX_DEVTOOLS_EXTENSION_INTEGRATION_ENABLED',\n    {\n      set(_) {\n        console.warn(\n          \"Redux devtools extension integration can be enabled with the '@react-navigation/devtools' package. For more details, see https://reactnavigation.org/docs/devtools\"\n        );\n      },\n    }\n  );\n} catch (e) {\n  // Ignore\n}\n\n/**\n * Remove `key` and `routeNames` from the state objects recursively to get partial state.\n *\n * @param state Initial state object.\n */\nconst getPartialState = (\n  state: InitialState | undefined\n): PartialState<NavigationState> | undefined => {\n  if (state === undefined) {\n    return;\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  const { key, routeNames, ...partialState } = state;\n\n  return {\n    ...partialState,\n    stale: true,\n    routes: state.routes.map((route) => {\n      if (route.state === undefined) {\n        return route as Route<string> & {\n          state?: PartialState<NavigationState>;\n        };\n      }\n\n      return { ...route, state: getPartialState(route.state) };\n    }),\n  };\n};\n\n/**\n * Container component which holds the navigation state.\n * This should be rendered at the root wrapping the whole app.\n *\n * @param props.initialState Initial state object for the navigation tree.\n * @param props.onStateChange Callback which is called with the latest navigation state when it changes.\n * @param props.children Child elements to render the content.\n * @param props.ref Ref object which refers to the navigation object containing helper methods.\n */\nconst BaseNavigationContainer = React.forwardRef(\n  function BaseNavigationContainer(\n    {\n      initialState,\n      onStateChange,\n      independent,\n      children,\n    }: NavigationContainerProps,\n    ref?: React.Ref<NavigationContainerRef>\n  ) {\n    const parent = React.useContext(NavigationStateContext);\n\n    if (!parent.isDefault && !independent) {\n      throw new Error(\n        \"Looks like you have nested a 'NavigationContainer' inside another. Normally you need only one container at the root of the app, so this was probably an error. If this was intentional, pass 'independent={true}' explicitely. Note that this will make the child navigators disconnected from the parent and you won't be able to navigate between them.\"\n      );\n    }\n\n    const [\n      state,\n      getState,\n      setState,\n      scheduleUpdate,\n      flushUpdates,\n    ] = useSyncState<State>(() =>\n      getPartialState(initialState == null ? undefined : initialState)\n    );\n\n    const isFirstMountRef = React.useRef<boolean>(true);\n\n    const navigatorKeyRef = React.useRef<string | undefined>();\n\n    const getKey = React.useCallback(() => navigatorKeyRef.current, []);\n\n    const setKey = React.useCallback((key: string) => {\n      navigatorKeyRef.current = key;\n    }, []);\n\n    const { listeners, addListener } = useChildListeners();\n\n    const { keyedListeners, addKeyedListener } = useKeyedChildListeners();\n\n    const dispatch = (\n      action: NavigationAction | ((state: NavigationState) => NavigationAction)\n    ) => {\n      if (listeners.focus[0] == null) {\n        throw new Error(NOT_INITIALIZED_ERROR);\n      }\n\n      listeners.focus[0]((navigation) => navigation.dispatch(action));\n    };\n\n    const canGoBack = () => {\n      if (listeners.focus[0] == null) {\n        return false;\n      }\n\n      const { result, handled } = listeners.focus[0]((navigation) =>\n        navigation.canGoBack()\n      );\n\n      if (handled) {\n        return result;\n      } else {\n        return false;\n      }\n    };\n\n    const resetRoot = React.useCallback(\n      (state?: PartialState<NavigationState> | NavigationState) => {\n        setState(state);\n      },\n      [setState]\n    );\n\n    const getRootState = React.useCallback(() => {\n      return keyedListeners.getState.root?.();\n    }, [keyedListeners.getState]);\n\n    const getCurrentRoute = React.useCallback(() => {\n      let state = getRootState();\n      if (state === undefined) {\n        return undefined;\n      }\n      while (state.routes[state.index].state !== undefined) {\n        state = state.routes[state.index].state as NavigationState;\n      }\n      return state.routes[state.index];\n    }, [getRootState]);\n\n    const emitter = useEventEmitter<NavigationContainerEventMap>();\n\n    const { addOptionsGetter, getCurrentOptions } = useOptionsGetters({});\n\n    React.useImperativeHandle(ref, () => ({\n      ...(Object.keys(CommonActions) as (keyof typeof CommonActions)[]).reduce<\n        any\n      >((acc, name) => {\n        acc[name] = (...args: any[]) =>\n          dispatch(\n            CommonActions[name](\n              // @ts-expect-error: we can't know the type statically\n              ...args\n            )\n          );\n        return acc;\n      }, {}),\n      ...emitter.create('root'),\n      resetRoot,\n      dispatch,\n      canGoBack,\n      getRootState,\n      dangerouslyGetState: () => state,\n      dangerouslyGetParent: () => undefined,\n      getCurrentRoute,\n      getCurrentOptions,\n    }));\n\n    const onDispatchAction = React.useCallback(\n      (action: NavigationAction, noop: boolean) => {\n        emitter.emit({ type: '__unsafe_action__', data: { action, noop } });\n      },\n      [emitter]\n    );\n\n    const lastEmittedOptionsRef = React.useRef<object | undefined>();\n\n    const onOptionsChange = React.useCallback(\n      (options) => {\n        if (lastEmittedOptionsRef.current === options) {\n          return;\n        }\n\n        lastEmittedOptionsRef.current = options;\n\n        emitter.emit({\n          type: 'options',\n          data: { options },\n        });\n      },\n      [emitter]\n    );\n\n    const builderContext = React.useMemo(\n      () => ({\n        addListener,\n        addKeyedListener,\n        onDispatchAction,\n        onOptionsChange,\n      }),\n      [addListener, addKeyedListener, onDispatchAction, onOptionsChange]\n    );\n\n    const scheduleContext = React.useMemo(\n      () => ({ scheduleUpdate, flushUpdates }),\n      [scheduleUpdate, flushUpdates]\n    );\n\n    const isInitialRef = React.useRef(true);\n\n    const getIsInitial = React.useCallback(() => isInitialRef.current, []);\n\n    const context = React.useMemo(\n      () => ({\n        state,\n        getState,\n        setState,\n        getKey,\n        setKey,\n        getIsInitial,\n        addOptionsGetter,\n      }),\n      [\n        state,\n        getState,\n        setState,\n        getKey,\n        setKey,\n        getIsInitial,\n        addOptionsGetter,\n      ]\n    );\n\n    const onStateChangeRef = React.useRef(onStateChange);\n\n    React.useEffect(() => {\n      isInitialRef.current = false;\n      onStateChangeRef.current = onStateChange;\n    });\n\n    React.useEffect(() => {\n      if (process.env.NODE_ENV !== 'production') {\n        if (state !== undefined) {\n          const result = checkSerializable(state);\n\n          if (!result.serializable) {\n            const { location, reason } = result;\n\n            let path = '';\n            let pointer: Record<any, any> = state;\n            let params = false;\n\n            for (let i = 0; i < location.length; i++) {\n              const curr = location[i];\n              const prev = location[i - 1];\n\n              pointer = pointer[curr];\n\n              if (!params && curr === 'state') {\n                continue;\n              } else if (!params && curr === 'routes') {\n                if (path) {\n                  path += ' > ';\n                }\n              } else if (\n                !params &&\n                typeof curr === 'number' &&\n                prev === 'routes'\n              ) {\n                path += pointer?.name;\n              } else if (!params) {\n                path += ` > ${curr}`;\n                params = true;\n              } else {\n                if (typeof curr === 'number' || /^[0-9]+$/.test(curr)) {\n                  path += `[${curr}]`;\n                } else if (/^[a-z$_]+$/i.test(curr)) {\n                  path += `.${curr}`;\n                } else {\n                  path += `[${JSON.stringify(curr)}]`;\n                }\n              }\n            }\n\n            const message = `Non-serializable values were found in the navigation state. Check:\\n\\n${path} (${reason})\\n\\nThis can break usage such as persisting and restoring state. This might happen if you passed non-serializable values such as function, class instances etc. in params. If you need to use components with callbacks in your options, you can use 'navigation.setOptions' instead. See https://reactnavigation.org/docs/troubleshooting#i-get-the-warning-non-serializable-values-were-found-in-the-navigation-state for more details.`;\n\n            if (!serializableWarnings.includes(message)) {\n              serializableWarnings.push(message);\n              console.warn(message);\n            }\n          }\n        }\n      }\n\n      emitter.emit({ type: 'state', data: { state } });\n\n      if (!isFirstMountRef.current && onStateChangeRef.current) {\n        onStateChangeRef.current(getRootState());\n      }\n\n      isFirstMountRef.current = false;\n    }, [getRootState, emitter, state]);\n\n    const onUnhandledAction = React.useCallback((action: NavigationAction) => {\n      if (process.env.NODE_ENV === 'production') {\n        return;\n      }\n\n      const payload: Record<string, any> | undefined = action.payload;\n\n      let message = `The action '${action.type}'${\n        payload ? ` with payload ${JSON.stringify(action.payload)}` : ''\n      } was not handled by any navigator.`;\n\n      switch (action.type) {\n        case 'NAVIGATE':\n        case 'PUSH':\n        case 'REPLACE':\n        case 'JUMP_TO':\n          if (payload?.name) {\n            message += `\\n\\nDo you have a screen named '${payload.name}'?\\n\\nIf you're trying to navigate to a screen in a nested navigator, see https://reactnavigation.org/docs/nesting-navigators#navigating-to-a-screen-in-a-nested-navigator.`;\n          } else {\n            message += `\\n\\nYou need to pass the name of the screen to navigate to.\\n\\nSee https://reactnavigation.org/docs/navigation-actions for usage.`;\n          }\n\n          break;\n        case 'GO_BACK':\n        case 'POP':\n        case 'POP_TO_TOP':\n          message += `\\n\\nIs there any screen to go back to?`;\n          break;\n        case 'OPEN_DRAWER':\n        case 'CLOSE_DRAWER':\n        case 'TOGGLE_DRAWER':\n          message += `\\n\\nIs your screen inside a Drawer navigator?`;\n          break;\n      }\n\n      message += `\\n\\nThis is a development-only warning and won't be shown in production.`;\n\n      console.error(message);\n    }, []);\n\n    return (\n      <ScheduleUpdateContext.Provider value={scheduleContext}>\n        <NavigationBuilderContext.Provider value={builderContext}>\n          <NavigationStateContext.Provider value={context}>\n            <UnhandledActionContext.Provider value={onUnhandledAction}>\n              <EnsureSingleNavigator>{children}</EnsureSingleNavigator>\n            </UnhandledActionContext.Provider>\n          </NavigationStateContext.Provider>\n        </NavigationBuilderContext.Provider>\n      </ScheduleUpdateContext.Provider>\n    );\n  }\n);\n\nexport default BaseNavigationContainer;\n"]},"metadata":{},"sourceType":"module"}