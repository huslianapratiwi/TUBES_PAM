{"ast":null,"code":"function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n  return target;\n}\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n  return target;\n}\nimport * as React from 'react';\nimport { createNavigatorFactory, useNavigationBuilder, DrawerRouter } from '@react-navigation/native';\nimport DrawerView from \"../views/DrawerView\";\nfunction DrawerNavigator(_ref) {\n  var initialRouteName = _ref.initialRouteName,\n    openByDefault = _ref.openByDefault,\n    backBehavior = _ref.backBehavior,\n    children = _ref.children,\n    screenOptions = _ref.screenOptions,\n    rest = _objectWithoutProperties(_ref, [\"initialRouteName\", \"openByDefault\", \"backBehavior\", \"children\", \"screenOptions\"]);\n  var _useNavigationBuilder = useNavigationBuilder(DrawerRouter, {\n      initialRouteName: initialRouteName,\n      openByDefault: openByDefault,\n      backBehavior: backBehavior,\n      children: children,\n      screenOptions: screenOptions\n    }),\n    state = _useNavigationBuilder.state,\n    descriptors = _useNavigationBuilder.descriptors,\n    navigation = _useNavigationBuilder.navigation;\n  return React.createElement(DrawerView, _extends({}, rest, {\n    state: state,\n    descriptors: descriptors,\n    navigation: navigation\n  }));\n}\nexport default createNavigatorFactory(DrawerNavigator);","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SACEC,sBADF,EAEEC,oBAFF,EAMEC,YANF,QAOO,0BAPP;AASA,OAAOC,UAAP;AAWA,SAASC,eAAT,OAOU;EAAA,IANRC,gBADuB,GAOfC,KANRD,gBADuB;IAEvBE,aAFuB,GAOfD,KALRC,aAFuB;IAGvBC,YAHuB,GAOfF,KAJRE,YAHuB;IAIvBC,QAJuB,GAOfH,KAHRG,QAJuB;IAKvBC,gBAEQJ,KAFRI;IACGC,IACK;EAAA,4BACmCV,oBAAoB,CAK7DC,YAL6D,EAK/C;MACdG,gBADc,EACdA,gBADc;MAEdE,aAFc,EAEdA,aAFc;MAGdC,YAHc,EAGdA,YAHc;MAIdC,QAJc,EAIdA,QAJc;MAKdC;IALc,CAL+C,CAA/D;IAAQE,KAAF,yBAAEA,KAAF;IAASC,WAAT,yBAASA,WAAT;IAAsBC;EAa5B,OACEf,oBAACI,UAAD,eACMQ,IADN;IAEEC,KAAK,EAAEA,KAFT;IAGEC,WAAW,EAAEA,WAHf;IAIEC,UAAU,EAAEA;EAJd,GADF;AAQD;AAED,eAAed,sBAAsB,CAKnCI,eALmC,CAArC","names":["React","createNavigatorFactory","useNavigationBuilder","DrawerRouter","DrawerView","DrawerNavigator","initialRouteName","_ref","openByDefault","backBehavior","children","screenOptions","rest","state","descriptors","navigation"],"sources":["createDrawerNavigator.tsx"],"sourcesContent":["import * as React from 'react';\nimport {\n  createNavigatorFactory,\n  useNavigationBuilder,\n  DefaultNavigatorOptions,\n  DrawerNavigationState,\n  DrawerRouterOptions,\n  DrawerRouter,\n} from '@react-navigation/native';\n\nimport DrawerView from '../views/DrawerView';\nimport type {\n  DrawerNavigationOptions,\n  DrawerNavigationConfig,\n  DrawerNavigationEventMap,\n} from '../types';\n\ntype Props = DefaultNavigatorOptions<DrawerNavigationOptions> &\n  DrawerRouterOptions &\n  DrawerNavigationConfig;\n\nfunction DrawerNavigator({\n  initialRouteName,\n  openByDefault,\n  backBehavior,\n  children,\n  screenOptions,\n  ...rest\n}: Props) {\n  const { state, descriptors, navigation } = useNavigationBuilder<\n    DrawerNavigationState,\n    DrawerRouterOptions,\n    DrawerNavigationOptions,\n    DrawerNavigationEventMap\n  >(DrawerRouter, {\n    initialRouteName,\n    openByDefault,\n    backBehavior,\n    children,\n    screenOptions,\n  });\n\n  return (\n    <DrawerView\n      {...rest}\n      state={state}\n      descriptors={descriptors}\n      navigation={navigation}\n    />\n  );\n}\n\nexport default createNavigatorFactory<\n  DrawerNavigationState,\n  DrawerNavigationOptions,\n  DrawerNavigationEventMap,\n  typeof DrawerNavigator\n>(DrawerNavigator);\n"]},"metadata":{},"sourceType":"module"}