{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = ResourceSavingScene;\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\nvar React = _interopRequireWildcard(require(\"react\"));\nvar _reactNative = require(\"react-native\");\nvar _reactNativeScreens = require(\"react-native-screens\");\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nvar FAR_FAR_AWAY = 30000;\nfunction ResourceSavingScene(_ref) {\n  var isVisible = _ref.isVisible,\n    children = _ref.children,\n    style = _ref.style,\n    rest = (0, _objectWithoutProperties2.default)(_ref, [\"isVisible\", \"children\", \"style\"]);\n  if (_reactNativeScreens.screensEnabled !== null && _reactNativeScreens.screensEnabled !== void 0 && (0, _reactNativeScreens.screensEnabled)() && _reactNative.Platform.OS !== 'web') {\n    if (_reactNativeScreens.shouldUseActivityState) {\n      return React.createElement(_reactNativeScreens.Screen, _extends({\n        activityState: isVisible ? 2 : 0,\n        style: style\n      }, rest), children);\n    } else {\n      return React.createElement(_reactNativeScreens.Screen, _extends({\n        active: isVisible ? 1 : 0,\n        style: style\n      }, rest), children);\n    }\n  }\n  if (_reactNative.Platform.OS === 'web') {\n    return React.createElement(_reactNative.View, _extends({\n      hidden: !isVisible,\n      style: [{\n        display: isVisible ? 'flex' : 'none'\n      }, styles.container, style],\n      pointerEvents: isVisible ? 'auto' : 'none'\n    }, rest), children);\n  }\n  return React.createElement(_reactNative.View, {\n    style: [styles.container, style],\n    pointerEvents: isVisible ? 'auto' : 'none'\n  }, React.createElement(_reactNative.View, {\n    collapsable: false,\n    removeClippedSubviews: _reactNative.Platform.OS === 'ios' ? !isVisible : true,\n    pointerEvents: isVisible ? 'auto' : 'none',\n    style: isVisible ? styles.attached : styles.detached\n  }, children));\n}\nvar styles = _reactNative.StyleSheet.create({\n  container: {\n    flex: 1,\n    overflow: 'hidden'\n  },\n  attached: {\n    flex: 1\n  },\n  detached: {\n    flex: 1,\n    top: FAR_FAR_AWAY\n  }\n});","map":{"version":3,"sources":["ResourceSavingScene.tsx"],"names":["FAR_FAR_AWAY","ResourceSavingScene","isVisible","children","style","rest","screensEnabled","Platform","OS","shouldUseActivityState","display","styles","container","attached","detached","create","flex","overflow","top"],"mappings":";;;;;;AAAA;AACA;AACA;AAAA;AAAA;;;;;;;;;;;;;;;AAcA,IAAMA,YAAY,GAAG,KAArB;AAEe,SAASC,mBAAT,OAKL;EAAA,IAJRC,SAD0C,QAC1CA,SAD0C;IAE1CC,QAF0C,QAE1CA,QAF0C;IAG1CC,KAH0C,QAG1CA,KAH0C;IAIvCC,IAAAA;EAGH,IAAIC,kCAAc,KAAA,IAAdA,IAAAA,kCAAc,KAAA,KAAA,CAAdA,IAAAA,IAAAA,kCAAc,GAAA,IAAQC,qBAAQ,CAACC,EAATD,KAAgB,KAA1C,EAAiD;IAC/C,IAAIE,0CAAJ,EAA4B;MAC1B,OAEE,KAAA,CAAA,aAAA,CAAC,0BAAD,EAAA,QAAA,CAAA;QAAQ,aAAa,EAAEP,SAAS,GAAG,CAAH,GAAO,CAAvC;QAA0C,KAAK,EAAEE;MAAjD,CAAA,EAA4DC,IAA5D,CAAA,EACGF,QADH,CAAA;IAIH,CAPD,MAOO;MACL,OAEE,KAAA,CAAA,aAAA,CAAC,0BAAD,EAAA,QAAA,CAAA;QAAQ,MAAM,EAAED,SAAS,GAAG,CAAH,GAAO,CAAhC;QAAmC,KAAK,EAAEE;MAA1C,CAAA,EAAqDC,IAArD,CAAA,EACGF,QADH,CAAA;IAIH;EACF;EAED,IAAII,qBAAQ,CAACC,EAATD,KAAgB,KAApB,EAA2B;IACzB,OACE,KAAA,CAAA,aAAA,CAAC,iBAAD,EAAA,QAAA,CAAA;MAEE,MAAM,EAAE,CAACL,SAFX;MAGE,KAAK,EAAE,CACL;QAAEQ,OAAO,EAAER,SAAS,GAAG,MAAH,GAAY;MAAhC,CADK,EAELS,MAAM,CAACC,SAFF,EAGLR,KAHK,CAHT;MAQE,aAAa,EAAEF,SAAS,GAAG,MAAH,GAAY;IARtC,CAAA,EASMG,IATN,CAAA,EAWGF,QAXH,CADF;EAeD;EAED,OACE,KAAA,CAAA,aAAA,CAAC,iBAAD,EAAA;IACE,KAAK,EAAE,CAACQ,MAAM,CAACC,SAAR,EAAmBR,KAAnB,CADT;IAGE,aAAa,EAAEF,SAAS,GAAG,MAAH,GAAY;EAHtC,CAAA,EAKE,KAAA,CAAA,aAAA,CAAC,iBAAD,EAAA;IACE,WAAW,EAAE,KADf;IAEE,qBAAqB,EAGnBK,qBAAQ,CAACC,EAATD,KAAgB,KAAhBA,GAAwB,CAACL,SAAzBK,GAAqC,IALzC;IAOE,aAAa,EAAEL,SAAS,GAAG,MAAH,GAAY,MAPtC;IAQE,KAAK,EAAEA,SAAS,GAAGS,MAAM,CAACE,QAAV,GAAqBF,MAAM,CAACG;EAR9C,CAAA,EAUGX,QAVH,CALF,CADF;AAoBD;AAED,IAAMQ,MAAM,GAAG,uBAAU,CAACI,MAAX,CAAkB;EAC/BH,SAAS,EAAE;IACTI,IAAI,EAAE,CADG;IAETC,QAAQ,EAAE;EAFD,CADoB;EAK/BJ,QAAQ,EAAE;IACRG,IAAI,EAAE;EADE,CALqB;EAQ/BF,QAAQ,EAAE;IACRE,IAAI,EAAE,CADE;IAERE,GAAG,EAAElB;EAFG;AARqB,CAAlB,CAAf","sourcesContent":["import * as React from 'react';\nimport { Platform, StyleSheet, View } from 'react-native';\nimport {\n  Screen,\n  screensEnabled,\n  // @ts-ignore\n  shouldUseActivityState,\n} from 'react-native-screens';\n\ntype Props = {\n  isVisible: boolean;\n  children: React.ReactNode;\n  enabled: boolean;\n  style?: any;\n};\n\nconst FAR_FAR_AWAY = 30000; // this should be big enough to move the whole view out of its container\n\nexport default function ResourceSavingScene({\n  isVisible,\n  children,\n  style,\n  ...rest\n}: Props) {\n  // react-native-screens is buggy on web\n  if (screensEnabled?.() && Platform.OS !== 'web') {\n    if (shouldUseActivityState) {\n      return (\n        // @ts-expect-error: there was an `active` prop and no `activityState` in older version and stackPresentation was required\n        <Screen activityState={isVisible ? 2 : 0} style={style} {...rest}>\n          {children}\n        </Screen>\n      );\n    } else {\n      return (\n        // @ts-expect-error: there was an `active` prop and no `activityState` in older version and stackPresentation was required\n        <Screen active={isVisible ? 1 : 0} style={style} {...rest}>\n          {children}\n        </Screen>\n      );\n    }\n  }\n\n  if (Platform.OS === 'web') {\n    return (\n      <View\n        // @ts-expect-error: hidden exists on web, but not in React Native\n        hidden={!isVisible}\n        style={[\n          { display: isVisible ? 'flex' : 'none' },\n          styles.container,\n          style,\n        ]}\n        pointerEvents={isVisible ? 'auto' : 'none'}\n        {...rest}\n      >\n        {children}\n      </View>\n    );\n  }\n\n  return (\n    <View\n      style={[styles.container, style]}\n      // box-none doesn't seem to work properly on Android\n      pointerEvents={isVisible ? 'auto' : 'none'}\n    >\n      <View\n        collapsable={false}\n        removeClippedSubviews={\n          // On iOS, set removeClippedSubviews to true only when not focused\n          // This is an workaround for a bug where the clipped view never re-appears\n          Platform.OS === 'ios' ? !isVisible : true\n        }\n        pointerEvents={isVisible ? 'auto' : 'none'}\n        style={isVisible ? styles.attached : styles.detached}\n      >\n        {children}\n      </View>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    overflow: 'hidden',\n  },\n  attached: {\n    flex: 1,\n  },\n  detached: {\n    flex: 1,\n    top: FAR_FAR_AWAY,\n  },\n});\n"]},"metadata":{},"sourceType":"script"}