{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport Order from \"../../models/order\";\nexport var ADD_ORDER = 'ADD_ORDER';\nexport var SET_ORDERS = 'SET_ORDERS';\nexport var fetchOrders = function fetchOrders() {\n  return function _callee(dispatch, getState) {\n    var userId, response, resData, loadedOrders, key;\n    return _regeneratorRuntime.async(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            userId = getState().auth.userId;\n            _context.prev = 1;\n            _context.next = 4;\n            return _regeneratorRuntime.awrap(fetch(\"https://store-app-3f42e.firebaseio.com/orders/\" + userId + \".json\"));\n          case 4:\n            response = _context.sent;\n            if (response.ok) {\n              _context.next = 7;\n              break;\n            }\n            throw new Error('Something went wrong!');\n          case 7:\n            _context.next = 9;\n            return _regeneratorRuntime.awrap(response.json());\n          case 9:\n            resData = _context.sent;\n            loadedOrders = [];\n            for (key in resData) {\n              loadedOrders.push(new Order(key, resData[key].cartItems, resData[key].totalAmount, new Date(resData[key].date)));\n            }\n            dispatch({\n              type: SET_ORDERS,\n              orders: loadedOrders\n            });\n            _context.next = 18;\n            break;\n          case 15:\n            _context.prev = 15;\n            _context.t0 = _context[\"catch\"](1);\n            throw _context.t0;\n          case 18:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[1, 15]], Promise);\n  };\n};\nexport var addOrder = function addOrder(cartItems, totalAmount) {\n  return function _callee2(dispatch, getState) {\n    var token, userId, date, response, resData;\n    return _regeneratorRuntime.async(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            token = getState().auth.token;\n            userId = getState().auth.userId;\n            date = new Date();\n            _context2.next = 5;\n            return _regeneratorRuntime.awrap(fetch(\"https://store-app-3f42e.firebaseio.com/orders/\" + userId + \".json?auth=\" + token, {\n              method: 'POST',\n              headers: {\n                'Content-Type': 'application/json'\n              },\n              body: JSON.stringify({\n                cartItems: cartItems,\n                totalAmount: totalAmount,\n                date: date.toISOString()\n              })\n            }));\n          case 5:\n            response = _context2.sent;\n            if (response.ok) {\n              _context2.next = 8;\n              break;\n            }\n            throw new Error('Something went wrong!');\n          case 8:\n            _context2.next = 10;\n            return _regeneratorRuntime.awrap(response.json());\n          case 10:\n            resData = _context2.sent;\n            dispatch({\n              type: ADD_ORDER,\n              orderData: {\n                id: resData.name,\n                items: cartItems,\n                amount: totalAmount,\n                date: date\n              }\n            });\n          case 12:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n};","map":{"version":3,"names":["Order","ADD_ORDER","SET_ORDERS","fetchOrders","dispatch","getState","userId","auth","fetch","response","ok","Error","json","resData","loadedOrders","key","push","cartItems","totalAmount","Date","date","type","orders","addOrder","token","method","headers","body","JSON","stringify","toISOString","orderData","id","name","items","amount"],"sources":["C:/Users/HUSLIANA/react_native_storeapp-master/store/actions/orders.js"],"sourcesContent":["import Order from '../../models/order';\n\nexport const ADD_ORDER = 'ADD_ORDER';\nexport const SET_ORDERS = 'SET_ORDERS';\n\nexport const fetchOrders = () => {\n  return async (dispatch, getState) => {\n    const userId = getState().auth.userId;\n    try {\n      const response = await fetch(\n        `https://store-app-3f42e.firebaseio.com/orders/${userId}.json`\n      );\n\n      if (!response.ok) {\n        throw new Error('Something went wrong!');\n      }\n\n      const resData = await response.json();\n      const loadedOrders = [];\n\n      for (const key in resData) {\n        loadedOrders.push(\n          new Order(\n            key,\n            resData[key].cartItems,\n            resData[key].totalAmount,\n            new Date(resData[key].date)\n          )\n        );\n      }\n      dispatch({ type: SET_ORDERS, orders: loadedOrders });\n    } catch (err) {\n      throw err;\n    }\n  };\n};\n\nexport const addOrder = (cartItems, totalAmount) => {\n  return async (dispatch, getState) => {\n    const token = getState().auth.token;\n    const userId = getState().auth.userId;\n    const date = new Date();\n    const response = await fetch(\n      `https://store-app-3f42e.firebaseio.com/orders/${userId}.json?auth=${token}`,\n      {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          cartItems,\n          totalAmount,\n          date: date.toISOString()\n        })\n      }\n    );\n\n    if (!response.ok) {\n      throw new Error('Something went wrong!');\n    }\n\n    const resData = await response.json();\n\n    dispatch({\n      type: ADD_ORDER,\n      orderData: {\n        id: resData.name,\n        items: cartItems,\n        amount: totalAmount,\n        date: date\n      }\n    });\n  };\n};\n"],"mappings":";AAAA,OAAOA,KAAK;AAEZ,OAAO,IAAMC,SAAS,GAAG,WAAW;AACpC,OAAO,IAAMC,UAAU,GAAG,YAAY;AAEtC,OAAO,IAAMC,WAAW,GAAG,SAAdA,WAAW,GAAS;EAC/B,OAAO,iBAAOC,QAAQ,EAAEC,QAAQ;IAAA;IAAA;MAAA;QAAA;UAAA;YACxBC,MAAM,GAAGD,QAAQ,EAAE,CAACE,IAAI,CAACD,MAAM;YAAA;YAAA;YAAA,iCAEZE,KAAK,oDACuBF,MAAM,WACxD;UAAA;YAFKG,QAAQ;YAAA,IAITA,QAAQ,CAACC,EAAE;cAAA;cAAA;YAAA;YAAA,MACR,IAAIC,KAAK,CAAC,uBAAuB,CAAC;UAAA;YAAA;YAAA,iCAGpBF,QAAQ,CAACG,IAAI,EAAE;UAAA;YAA/BC,OAAO;YACPC,YAAY,GAAG,EAAE;YAEvB,KAAWC,GAAG,IAAIF,OAAO,EAAE;cACzBC,YAAY,CAACE,IAAI,CACf,IAAIhB,KAAK,CACPe,GAAG,EACHF,OAAO,CAACE,GAAG,CAAC,CAACE,SAAS,EACtBJ,OAAO,CAACE,GAAG,CAAC,CAACG,WAAW,EACxB,IAAIC,IAAI,CAACN,OAAO,CAACE,GAAG,CAAC,CAACK,IAAI,CAAC,CAC5B,CACF;YACH;YACAhB,QAAQ,CAAC;cAAEiB,IAAI,EAAEnB,UAAU;cAAEoB,MAAM,EAAER;YAAa,CAAC,CAAC;YAAC;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA;UAAA;YAAA;QAAA;MAAA;IAAA;EAAA,CAIxD;AACH,CAAC;AAED,OAAO,IAAMS,QAAQ,GAAG,SAAXA,QAAQ,CAAIN,SAAS,EAAEC,WAAW,EAAK;EAClD,OAAO,kBAAOd,QAAQ,EAAEC,QAAQ;IAAA;IAAA;MAAA;QAAA;UAAA;YACxBmB,KAAK,GAAGnB,QAAQ,EAAE,CAACE,IAAI,CAACiB,KAAK;YAC7BlB,MAAM,GAAGD,QAAQ,EAAE,CAACE,IAAI,CAACD,MAAM;YAC/Bc,IAAI,GAAG,IAAID,IAAI,EAAE;YAAA;YAAA,iCACAX,KAAK,oDACuBF,MAAM,mBAAckB,KAAK,EAC1E;cACEC,MAAM,EAAE,MAAM;cACdC,OAAO,EAAE;gBACP,cAAc,EAAE;cAClB,CAAC;cACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;gBACnBZ,SAAS,EAATA,SAAS;gBACTC,WAAW,EAAXA,WAAW;gBACXE,IAAI,EAAEA,IAAI,CAACU,WAAW;cACxB,CAAC;YACH,CAAC,CACF;UAAA;YAbKrB,QAAQ;YAAA,IAeTA,QAAQ,CAACC,EAAE;cAAA;cAAA;YAAA;YAAA,MACR,IAAIC,KAAK,CAAC,uBAAuB,CAAC;UAAA;YAAA;YAAA,iCAGpBF,QAAQ,CAACG,IAAI,EAAE;UAAA;YAA/BC,OAAO;YAEbT,QAAQ,CAAC;cACPiB,IAAI,EAAEpB,SAAS;cACf8B,SAAS,EAAE;gBACTC,EAAE,EAAEnB,OAAO,CAACoB,IAAI;gBAChBC,KAAK,EAAEjB,SAAS;gBAChBkB,MAAM,EAAEjB,WAAW;gBACnBE,IAAI,EAAEA;cACR;YACF,CAAC,CAAC;UAAC;UAAA;YAAA;QAAA;MAAA;IAAA;EAAA,CACJ;AACH,CAAC"},"metadata":{},"sourceType":"module"}