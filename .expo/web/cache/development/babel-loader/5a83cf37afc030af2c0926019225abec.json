{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\nvar _common = require(\"@react-native-firebase/app/lib/common\");\nvar FirestoreSnapshotMetadata = function () {\n  function FirestoreSnapshotMetadata(metadata) {\n    (0, _classCallCheck2.default)(this, FirestoreSnapshotMetadata);\n    this._metadata = metadata;\n  }\n  (0, _createClass2.default)(FirestoreSnapshotMetadata, [{\n    key: \"isEqual\",\n    value: function isEqual(other) {\n      if ((0, _common.isUndefined)(other) || !(other instanceof FirestoreSnapshotMetadata)) {\n        throw new Error(\"firebase.firestore() SnapshotMetadata.isEqual(*) 'other' expected instance of SnapshotMetadata\");\n      }\n      return this.fromCache === other.fromCache && this.hasPendingWrites === other.hasPendingWrites;\n    }\n  }, {\n    key: \"fromCache\",\n    get: function get() {\n      return this._metadata[0];\n    }\n  }, {\n    key: \"hasPendingWrites\",\n    get: function get() {\n      return this._metadata[1];\n    }\n  }]);\n  return FirestoreSnapshotMetadata;\n}();\nexports.default = FirestoreSnapshotMetadata;","map":{"version":3,"names":["FirestoreSnapshotMetadata","metadata","_metadata","other","isUndefined","Error","fromCache","hasPendingWrites"],"sources":["C:/Users/HUSLIANA/react-native-ecommerce/node_modules/@react-native-firebase/firestore/lib/FirestoreSnapshotMetadata.js"],"sourcesContent":["/*\n * Copyright (c) 2016-present Invertase Limited & Contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this library except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\n\nimport { isUndefined } from '@react-native-firebase/app/lib/common';\n\nexport default class FirestoreSnapshotMetadata {\n  constructor(metadata) {\n    this._metadata = metadata;\n  }\n\n  get fromCache() {\n    return this._metadata[0];\n  }\n\n  get hasPendingWrites() {\n    return this._metadata[1];\n  }\n\n  isEqual(other) {\n    if (isUndefined(other) || !(other instanceof FirestoreSnapshotMetadata)) {\n      throw new Error(\n        \"firebase.firestore() SnapshotMetadata.isEqual(*) 'other' expected instance of SnapshotMetadata\",\n      );\n    }\n\n    return this.fromCache === other.fromCache && this.hasPendingWrites === other.hasPendingWrites;\n  }\n}\n"],"mappings":";;;;;;;AAiBA;AAAoE,IAE/CA,yBAAyB;EAC5C,mCAAYC,QAAQ,EAAE;IAAA;IACpB,IAAI,CAACC,SAAS,GAAGD,QAAQ;EAC3B;EAAC;IAAA;IAAA,wBAUOE,KAAK,EAAE;MACb,IAAI,IAAAC,mBAAW,EAACD,KAAK,CAAC,IAAI,EAAEA,KAAK,YAAYH,yBAAyB,CAAC,EAAE;QACvE,MAAM,IAAIK,KAAK,CACb,gGAAgG,CACjG;MACH;MAEA,OAAO,IAAI,CAACC,SAAS,KAAKH,KAAK,CAACG,SAAS,IAAI,IAAI,CAACC,gBAAgB,KAAKJ,KAAK,CAACI,gBAAgB;IAC/F;EAAC;IAAA;IAAA,oBAhBe;MACd,OAAO,IAAI,CAACL,SAAS,CAAC,CAAC,CAAC;IAC1B;EAAC;IAAA;IAAA,oBAEsB;MACrB,OAAO,IAAI,CAACA,SAAS,CAAC,CAAC,CAAC;IAC1B;EAAC;EAAA;AAAA;AAAA"},"metadata":{},"sourceType":"script"}