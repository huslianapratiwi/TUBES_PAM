{"ast":null,"code":"import { cond, sub, divide, multiply, add, block, set, greaterOrEq } from \"../base\";\nexport default function timing(clock, state, config) {\n  var lastTime = cond(state.time, state.time, clock);\n  var frameTime = add(state.frameTime, sub(clock, lastTime));\n  var progress = config.easing(divide(state.frameTime, config.duration));\n  var distanceLeft = sub(config.toValue, state.position);\n  var fullDistance = divide(distanceLeft, sub(1, progress));\n  var startPosition = sub(config.toValue, fullDistance);\n  var nextProgress = config.easing(divide(frameTime, config.duration));\n  var nextPosition = add(startPosition, multiply(fullDistance, nextProgress));\n  return block([cond(greaterOrEq(frameTime, config.duration), [set(state.position, config.toValue), set(state.finished, 1)], set(state.position, nextPosition)), set(state.frameTime, frameTime), set(state.time, clock)]);\n}","map":{"version":3,"names":["cond","sub","divide","multiply","add","block","set","greaterOrEq","timing","clock","state","config","lastTime","time","frameTime","progress","easing","duration","distanceLeft","toValue","position","fullDistance","startPosition","nextProgress","nextPosition","finished"],"sources":["C:/Users/HUSLIANA/react_native_storeapp-master/node_modules/react-native-reanimated/src/animations/timing.js"],"sourcesContent":["import {\n  cond,\n  sub,\n  divide,\n  multiply,\n  add,\n  block,\n  set,\n  greaterOrEq,\n} from '../base';\n\nexport default function timing(clock, state, config) {\n  const lastTime = cond(state.time, state.time, clock);\n  const frameTime = add(state.frameTime, sub(clock, lastTime));\n\n  const progress = config.easing(divide(state.frameTime, config.duration));\n  const distanceLeft = sub(config.toValue, state.position);\n  const fullDistance = divide(distanceLeft, sub(1, progress));\n  const startPosition = sub(config.toValue, fullDistance);\n  const nextProgress = config.easing(divide(frameTime, config.duration));\n  const nextPosition = add(startPosition, multiply(fullDistance, nextProgress));\n\n  return block([\n    cond(\n      greaterOrEq(frameTime, config.duration),\n      [set(state.position, config.toValue), set(state.finished, 1)],\n      set(state.position, nextPosition)\n    ),\n    set(state.frameTime, frameTime),\n    set(state.time, clock),\n  ]);\n}\n"],"mappings":"AAAA,SACEA,IAAI,EACJC,GAAG,EACHC,MAAM,EACNC,QAAQ,EACRC,GAAG,EACHC,KAAK,EACLC,GAAG,EACHC,WAAW;AAGb,eAAe,SAASC,MAAM,CAACC,KAAK,EAAEC,KAAK,EAAEC,MAAM,EAAE;EACnD,IAAMC,QAAQ,GAAGZ,IAAI,CAACU,KAAK,CAACG,IAAI,EAAEH,KAAK,CAACG,IAAI,EAAEJ,KAAK,CAAC;EACpD,IAAMK,SAAS,GAAGV,GAAG,CAACM,KAAK,CAACI,SAAS,EAAEb,GAAG,CAACQ,KAAK,EAAEG,QAAQ,CAAC,CAAC;EAE5D,IAAMG,QAAQ,GAAGJ,MAAM,CAACK,MAAM,CAACd,MAAM,CAACQ,KAAK,CAACI,SAAS,EAAEH,MAAM,CAACM,QAAQ,CAAC,CAAC;EACxE,IAAMC,YAAY,GAAGjB,GAAG,CAACU,MAAM,CAACQ,OAAO,EAAET,KAAK,CAACU,QAAQ,CAAC;EACxD,IAAMC,YAAY,GAAGnB,MAAM,CAACgB,YAAY,EAAEjB,GAAG,CAAC,CAAC,EAAEc,QAAQ,CAAC,CAAC;EAC3D,IAAMO,aAAa,GAAGrB,GAAG,CAACU,MAAM,CAACQ,OAAO,EAAEE,YAAY,CAAC;EACvD,IAAME,YAAY,GAAGZ,MAAM,CAACK,MAAM,CAACd,MAAM,CAACY,SAAS,EAAEH,MAAM,CAACM,QAAQ,CAAC,CAAC;EACtE,IAAMO,YAAY,GAAGpB,GAAG,CAACkB,aAAa,EAAEnB,QAAQ,CAACkB,YAAY,EAAEE,YAAY,CAAC,CAAC;EAE7E,OAAOlB,KAAK,CAAC,CACXL,IAAI,CACFO,WAAW,CAACO,SAAS,EAAEH,MAAM,CAACM,QAAQ,CAAC,EACvC,CAACX,GAAG,CAACI,KAAK,CAACU,QAAQ,EAAET,MAAM,CAACQ,OAAO,CAAC,EAAEb,GAAG,CAACI,KAAK,CAACe,QAAQ,EAAE,CAAC,CAAC,CAAC,EAC7DnB,GAAG,CAACI,KAAK,CAACU,QAAQ,EAAEI,YAAY,CAAC,CAClC,EACDlB,GAAG,CAACI,KAAK,CAACI,SAAS,EAAEA,SAAS,CAAC,EAC/BR,GAAG,CAACI,KAAK,CAACG,IAAI,EAAEJ,KAAK,CAAC,CACvB,CAAC;AACJ"},"metadata":{},"sourceType":"module"}