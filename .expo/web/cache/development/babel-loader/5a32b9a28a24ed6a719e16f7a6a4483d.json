{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\nvar _common = require(\"@react-native-firebase/app/lib/common\");\nvar _NativeFirebaseError = _interopRequireDefault(require(\"@react-native-firebase/app/lib/internal/NativeFirebaseError\"));\nvar REQUEST_ID = 0;\nvar PhoneAuthListener = function () {\n  function PhoneAuthListener(auth, phoneNumber, timeout, forceResend) {\n    (0, _classCallCheck2.default)(this, PhoneAuthListener);\n    this._auth = auth;\n    this._reject = null;\n    this._resolve = null;\n    this._promise = null;\n    this._jsStack = new Error().stack;\n    this._timeout = timeout || 20;\n    this._phoneAuthRequestId = REQUEST_ID++;\n    this._forceResending = forceResend || false;\n    this._internalEvents = {\n      codeSent: \"phone:auth:\" + this._phoneAuthRequestId + \":onCodeSent\",\n      verificationFailed: \"phone:auth:\" + this._phoneAuthRequestId + \":onVerificationFailed\",\n      verificationComplete: \"phone:auth:\" + this._phoneAuthRequestId + \":onVerificationComplete\",\n      codeAutoRetrievalTimeout: \"phone:auth:\" + this._phoneAuthRequestId + \":onCodeAutoRetrievalTimeout\"\n    };\n    this._publicEvents = {\n      error: \"phone:auth:\" + this._phoneAuthRequestId + \":error\",\n      event: \"phone:auth:\" + this._phoneAuthRequestId + \":event\",\n      success: \"phone:auth:\" + this._phoneAuthRequestId + \":success\"\n    };\n    this._subscribeToEvents();\n    if (_common.isAndroid) {\n      this._auth.native.verifyPhoneNumber(phoneNumber, this._phoneAuthRequestId + '', this._timeout, this._forceResending);\n    }\n    if (_common.isIOS) {\n      this._auth.native.verifyPhoneNumber(phoneNumber, this._phoneAuthRequestId + '');\n    }\n  }\n  (0, _createClass2.default)(PhoneAuthListener, [{\n    key: \"_subscribeToEvents\",\n    value: function _subscribeToEvents() {\n      var _this = this;\n      var events = Object.keys(this._internalEvents);\n      var _loop = function _loop(i, len) {\n        var type = events[i];\n        var subscription = _this._auth.emitter.addListener(_this._internalEvents[type], function (event) {\n          _this[\"_\" + type + \"Handler\"](event);\n          subscription.remove();\n        });\n      };\n      for (var i = 0, len = events.length; i < len; i++) {\n        _loop(i, len);\n      }\n    }\n  }, {\n    key: \"_addUserObserver\",\n    value: function _addUserObserver(observer) {\n      this._auth.emitter.addListener(this._publicEvents.event, observer);\n    }\n  }, {\n    key: \"_emitToObservers\",\n    value: function _emitToObservers(snapshot) {\n      this._auth.emitter.emit(this._publicEvents.event, snapshot);\n    }\n  }, {\n    key: \"_emitToErrorCb\",\n    value: function _emitToErrorCb(snapshot) {\n      var error = snapshot.error;\n      if (this._reject) {\n        this._reject(error);\n      }\n      this._auth.emitter.emit(this._publicEvents.error, error);\n    }\n  }, {\n    key: \"_emitToSuccessCb\",\n    value: function _emitToSuccessCb(snapshot) {\n      if (this._resolve) {\n        this._resolve(snapshot);\n      }\n      this._auth.emitter.emit(this._publicEvents.success, snapshot);\n    }\n  }, {\n    key: \"_removeAllListeners\",\n    value: function _removeAllListeners() {\n      var _this2 = this;\n      setTimeout(function () {\n        Object.values(_this2._internalEvents).forEach(function (event) {\n          _this2._auth.emitter.removeAllListeners(event);\n        });\n        Object.values(_this2._publicEvents).forEach(function (publicEvent) {\n          _this2._auth.emitter.removeAllListeners(publicEvent);\n        });\n      }, 0);\n    }\n  }, {\n    key: \"_promiseDeferred\",\n    value: function _promiseDeferred() {\n      if (!this._promise) {\n        var _promiseDefer = (0, _common.promiseDefer)(),\n          promise = _promiseDefer.promise,\n          resolve = _promiseDefer.resolve,\n          reject = _promiseDefer.reject;\n        this._promise = promise;\n        this._resolve = resolve;\n        this._reject = reject;\n      }\n    }\n  }, {\n    key: \"_codeSentHandler\",\n    value: function _codeSentHandler(credential) {\n      var snapshot = {\n        verificationId: credential.verificationId,\n        code: null,\n        error: null,\n        state: 'sent'\n      };\n      this._emitToObservers(snapshot);\n      if (_common.isIOS) {\n        this._emitToSuccessCb(snapshot);\n      }\n      if (_common.isAndroid) {}\n    }\n  }, {\n    key: \"_codeAutoRetrievalTimeoutHandler\",\n    value: function _codeAutoRetrievalTimeoutHandler(credential) {\n      var snapshot = {\n        verificationId: credential.verificationId,\n        code: null,\n        error: null,\n        state: 'timeout'\n      };\n      this._emitToObservers(snapshot);\n      this._emitToSuccessCb(snapshot);\n    }\n  }, {\n    key: \"_verificationCompleteHandler\",\n    value: function _verificationCompleteHandler(credential) {\n      var snapshot = {\n        verificationId: credential.verificationId,\n        code: credential.code || null,\n        error: null,\n        state: 'verified'\n      };\n      this._emitToObservers(snapshot);\n      this._emitToSuccessCb(snapshot);\n      this._removeAllListeners();\n    }\n  }, {\n    key: \"_verificationFailedHandler\",\n    value: function _verificationFailedHandler(state) {\n      var snapshot = {\n        verificationId: state.verificationId,\n        code: null,\n        error: null,\n        state: 'error'\n      };\n      snapshot.error = new _NativeFirebaseError.default({\n        userInfo: state.error\n      }, this._jsStack, 'auth');\n      this._emitToObservers(snapshot);\n      this._emitToErrorCb(snapshot);\n      this._removeAllListeners();\n    }\n  }, {\n    key: \"on\",\n    value: function on(event, observer, errorCb, successCb) {\n      if (event !== 'state_changed') {\n        throw new Error(\"firebase.auth.PhoneAuthListener.on(*, _, _, _) 'event' must equal 'state_changed'.\");\n      }\n      if (!(0, _common.isFunction)(observer)) {\n        throw new Error(\"firebase.auth.PhoneAuthListener.on(_, *, _, _) 'observer' must be a function.\");\n      }\n      this._addUserObserver(observer);\n      if ((0, _common.isFunction)(errorCb)) {\n        var subscription = this._auth.emitter.addListener(this._publicEvents.error, function () {\n          errorCb;\n          subscription.remove();\n        });\n      }\n      if ((0, _common.isFunction)(successCb)) {\n        var _subscription = this._auth.emitter.addListener(this._publicEvents.success, function () {\n          successCb;\n          _subscription.remove();\n        });\n      }\n      return this;\n    }\n  }, {\n    key: \"then\",\n    value: function then(fn) {\n      this._promiseDeferred();\n      if (this._promise) {\n        return this._promise.then.bind(this._promise)(fn);\n      }\n      return undefined;\n    }\n  }, {\n    key: \"catch\",\n    value: function _catch(fn) {\n      this._promiseDeferred();\n      if (this._promise) {\n        return this._promise.catch.bind(this._promise)(fn);\n      }\n      return undefined;\n    }\n  }]);\n  return PhoneAuthListener;\n}();\nexports.default = PhoneAuthListener;","map":{"version":3,"names":["REQUEST_ID","PhoneAuthListener","auth","phoneNumber","timeout","forceResend","_auth","_reject","_resolve","_promise","_jsStack","Error","stack","_timeout","_phoneAuthRequestId","_forceResending","_internalEvents","codeSent","verificationFailed","verificationComplete","codeAutoRetrievalTimeout","_publicEvents","error","event","success","_subscribeToEvents","isAndroid","native","verifyPhoneNumber","isIOS","events","Object","keys","i","len","type","subscription","emitter","addListener","remove","length","observer","snapshot","emit","setTimeout","values","forEach","removeAllListeners","publicEvent","promiseDefer","promise","resolve","reject","credential","verificationId","code","state","_emitToObservers","_emitToSuccessCb","_removeAllListeners","NativeFirebaseError","userInfo","_emitToErrorCb","errorCb","successCb","isFunction","_addUserObserver","fn","_promiseDeferred","then","bind","undefined","catch"],"sources":["C:/Users/HUSLIANA/react-native-ecommerce/node_modules/@react-native-firebase/auth/lib/PhoneAuthListener.js"],"sourcesContent":["/*\n * Copyright (c) 2016-present Invertase Limited & Contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this library except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\n\nimport { isAndroid, isFunction, isIOS, promiseDefer } from '@react-native-firebase/app/lib/common';\nimport NativeFirebaseError from '@react-native-firebase/app/lib/internal/NativeFirebaseError';\n\nlet REQUEST_ID = 0;\n\nexport default class PhoneAuthListener {\n  constructor(auth, phoneNumber, timeout, forceResend) {\n    this._auth = auth;\n    this._reject = null;\n    this._resolve = null;\n    this._promise = null;\n    this._jsStack = new Error().stack;\n\n    this._timeout = timeout || 20;\n    this._phoneAuthRequestId = REQUEST_ID++;\n    this._forceResending = forceResend || false;\n\n    // internal events\n    this._internalEvents = {\n      codeSent: `phone:auth:${this._phoneAuthRequestId}:onCodeSent`,\n      verificationFailed: `phone:auth:${this._phoneAuthRequestId}:onVerificationFailed`,\n      verificationComplete: `phone:auth:${this._phoneAuthRequestId}:onVerificationComplete`,\n      codeAutoRetrievalTimeout: `phone:auth:${this._phoneAuthRequestId}:onCodeAutoRetrievalTimeout`,\n    };\n\n    // user observer events\n    this._publicEvents = {\n      error: `phone:auth:${this._phoneAuthRequestId}:error`,\n      event: `phone:auth:${this._phoneAuthRequestId}:event`,\n      success: `phone:auth:${this._phoneAuthRequestId}:success`,\n    };\n\n    this._subscribeToEvents();\n\n    if (isAndroid) {\n      this._auth.native.verifyPhoneNumber(\n        phoneNumber,\n        this._phoneAuthRequestId + '',\n        this._timeout,\n        this._forceResending,\n      );\n    }\n\n    if (isIOS) {\n      this._auth.native.verifyPhoneNumber(phoneNumber, this._phoneAuthRequestId + '');\n    }\n  }\n\n  _subscribeToEvents() {\n    const events = Object.keys(this._internalEvents);\n\n    for (let i = 0, len = events.length; i < len; i++) {\n      const type = events[i];\n      const subscription = this._auth.emitter.addListener(this._internalEvents[type], event => {\n        this[`_${type}Handler`](event);\n        subscription.remove();\n      });\n    }\n  }\n\n  _addUserObserver(observer) {\n    this._auth.emitter.addListener(this._publicEvents.event, observer);\n  }\n\n  _emitToObservers(snapshot) {\n    this._auth.emitter.emit(this._publicEvents.event, snapshot);\n  }\n\n  _emitToErrorCb(snapshot) {\n    const { error } = snapshot;\n    if (this._reject) {\n      this._reject(error);\n    }\n    this._auth.emitter.emit(this._publicEvents.error, error);\n  }\n\n  _emitToSuccessCb(snapshot) {\n    if (this._resolve) {\n      this._resolve(snapshot);\n    }\n    this._auth.emitter.emit(this._publicEvents.success, snapshot);\n  }\n\n  _removeAllListeners() {\n    setTimeout(() => {\n      // move to next event loop - not sure if needed\n      // internal listeners\n      Object.values(this._internalEvents).forEach(event => {\n        this._auth.emitter.removeAllListeners(event);\n      });\n\n      // user observer listeners\n      Object.values(this._publicEvents).forEach(publicEvent => {\n        this._auth.emitter.removeAllListeners(publicEvent);\n      });\n    }, 0);\n  }\n\n  _promiseDeferred() {\n    if (!this._promise) {\n      const { promise, resolve, reject } = promiseDefer();\n      this._promise = promise;\n      this._resolve = resolve;\n      this._reject = reject;\n    }\n  }\n\n  /* --------------------------\n   --- INTERNAL EVENT HANDLERS\n   ---------------------------- */\n\n  _codeSentHandler(credential) {\n    const snapshot = {\n      verificationId: credential.verificationId,\n      code: null,\n      error: null,\n      state: 'sent',\n    };\n\n    this._emitToObservers(snapshot);\n\n    if (isIOS) {\n      this._emitToSuccessCb(snapshot);\n    }\n\n    if (isAndroid) {\n      // android can auto retrieve so we don't emit to successCb immediately,\n      // if auto retrieve times out then that will emit to successCb\n    }\n  }\n\n  _codeAutoRetrievalTimeoutHandler(credential) {\n    const snapshot = {\n      verificationId: credential.verificationId,\n      code: null,\n      error: null,\n      state: 'timeout',\n    };\n\n    this._emitToObservers(snapshot);\n    this._emitToSuccessCb(snapshot);\n  }\n\n  _verificationCompleteHandler(credential) {\n    const snapshot = {\n      verificationId: credential.verificationId,\n      code: credential.code || null,\n      error: null,\n      state: 'verified',\n    };\n\n    this._emitToObservers(snapshot);\n    this._emitToSuccessCb(snapshot);\n    this._removeAllListeners();\n  }\n\n  _verificationFailedHandler(state) {\n    const snapshot = {\n      verificationId: state.verificationId,\n      code: null,\n      error: null,\n      state: 'error',\n    };\n\n    snapshot.error = new NativeFirebaseError({ userInfo: state.error }, this._jsStack, 'auth');\n\n    this._emitToObservers(snapshot);\n    this._emitToErrorCb(snapshot);\n    this._removeAllListeners();\n  }\n\n  /* -------------\n   -- PUBLIC API\n   --------------*/\n\n  on(event, observer, errorCb, successCb) {\n    if (event !== 'state_changed') {\n      throw new Error(\n        \"firebase.auth.PhoneAuthListener.on(*, _, _, _) 'event' must equal 'state_changed'.\",\n      );\n    }\n\n    if (!isFunction(observer)) {\n      throw new Error(\n        \"firebase.auth.PhoneAuthListener.on(_, *, _, _) 'observer' must be a function.\",\n      );\n    }\n\n    this._addUserObserver(observer);\n\n    if (isFunction(errorCb)) {\n      const subscription = this._auth.emitter.addListener(this._publicEvents.error, () => {\n        errorCb;\n        subscription.remove();\n      });\n    }\n\n    if (isFunction(successCb)) {\n      const subscription = this._auth.emitter.addListener(this._publicEvents.success, () => {\n        successCb;\n        subscription.remove();\n      });\n    }\n\n    return this;\n  }\n\n  then(fn) {\n    this._promiseDeferred();\n    if (this._promise) {\n      return this._promise.then.bind(this._promise)(fn);\n    }\n    return undefined;\n  }\n\n  catch(fn) {\n    this._promiseDeferred();\n    if (this._promise) {\n      return this._promise.catch.bind(this._promise)(fn);\n    }\n    return undefined;\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}