{"ast":null,"code":"function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n  return target;\n}\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n  return target;\n}\nimport * as React from 'react';\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { useSafeArea } from 'react-native-safe-area-context';\nimport DrawerPositionContext from \"../utils/DrawerPositionContext\";\nexport default function DrawerContentScrollView(_ref) {\n  var contentContainerStyle = _ref.contentContainerStyle,\n    style = _ref.style,\n    children = _ref.children,\n    rest = _objectWithoutProperties(_ref, [\"contentContainerStyle\", \"style\", \"children\"]);\n  var drawerPosition = React.useContext(DrawerPositionContext);\n  var insets = useSafeArea();\n  return React.createElement(ScrollView, _extends({}, rest, {\n    contentContainerStyle: [{\n      paddingTop: insets.top + 4,\n      paddingLeft: drawerPosition === 'left' ? insets.left : 0,\n      paddingRight: drawerPosition === 'right' ? insets.right : 0\n    }, contentContainerStyle],\n    style: [styles.container, style]\n  }), children);\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1\n  }\n});","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AAAA;AAAA;AAEA,SAASC,WAAT,QAA4B,gCAA5B;AACA,OAAOC,qBAAP;AAMA,eAAe,SAASC,uBAAT,OAKL;EAAA,IAJRC,qBAD8C,GAKtCC,KAJRD,qBAD8C;IAE9CE,KAF8C,GAKtCD,KAHRC,KAF8C;IAG9CC,WAEQF,KAFRE;IACGC,IACK;EACR,IAAMC,cAAc,GAAGT,KAAK,CAACU,UAAN,CAAiBR,qBAAjB,CAAvB;EACA,IAAMS,MAAM,GAAGV,WAAW,EAA1B;EAEA,OACED,oBAACY,UAAD,eACMJ,IADN;IAEEJ,qBAAqB,EAAE,CACrB;MACES,UAAU,EAAEF,MAAM,CAACG,GAAP,GAAa,CAD3B;MAEEC,WAAW,EAAEN,cAAc,KAAK,MAAnB,GAA4BE,MAAM,CAACK,IAAnC,GAA0C,CAFzD;MAGEC,YAAY,EAAER,cAAc,KAAK,OAAnB,GAA6BE,MAAM,CAACO,KAApC,GAA4C;IAH5D,CADqB,EAMrBd,qBANqB,CAFzB;IAUEE,KAAK,EAAE,CAACa,MAAM,CAACC,SAAR,EAAmBd,KAAnB;EAVT,IAYGC,QAZH,CADF;AAgBD;AAED,IAAMY,MAAM,GAAGE,UAAU,CAACC,MAAX,CAAkB;EAC/BF,SAAS,EAAE;IACTG,IAAI,EAAE;EADG;AADoB,CAAlB,CAAf","names":["React","useSafeArea","DrawerPositionContext","DrawerContentScrollView","contentContainerStyle","_ref","style","children","rest","drawerPosition","useContext","insets","ScrollView","paddingTop","top","paddingLeft","left","paddingRight","right","styles","container","StyleSheet","create","flex"],"sources":["DrawerContentScrollView.tsx"],"sourcesContent":["import * as React from 'react';\nimport { ScrollView, StyleSheet, ScrollViewProps } from 'react-native';\nimport { useSafeArea } from 'react-native-safe-area-context';\nimport DrawerPositionContext from '../utils/DrawerPositionContext';\n\ntype Props = ScrollViewProps & {\n  children: React.ReactNode;\n};\n\nexport default function DrawerContentScrollView({\n  contentContainerStyle,\n  style,\n  children,\n  ...rest\n}: Props) {\n  const drawerPosition = React.useContext(DrawerPositionContext);\n  const insets = useSafeArea();\n\n  return (\n    <ScrollView\n      {...rest}\n      contentContainerStyle={[\n        {\n          paddingTop: insets.top + 4,\n          paddingLeft: drawerPosition === 'left' ? insets.left : 0,\n          paddingRight: drawerPosition === 'right' ? insets.right : 0,\n        },\n        contentContainerStyle,\n      ]}\n      style={[styles.container, style]}\n    >\n      {children}\n    </ScrollView>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n  },\n});\n"]},"metadata":{},"sourceType":"module"}