{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getTypeMapInt = getTypeMapInt;\nexports.getTypeMapName = getTypeMapName;\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\nvar _common = require(\"@react-native-firebase/app/lib/common\");\nvar MAP = {\n  nan: 0,\n  '-infinity': 1,\n  infinity: 2,\n  null: 3,\n  documentid: 4,\n  booleanTrue: 5,\n  booleanFalse: 6,\n  number: 7,\n  string: 8,\n  stringEmpty: 9,\n  array: 10,\n  reference: 11,\n  geopoint: 12,\n  timestamp: 13,\n  blob: 14,\n  fieldvalue: 15,\n  object: 16,\n  unknown: -999\n};\nvar MAP_ENTRIES = Object.entries(MAP);\nfunction getTypeMapInt(type) {\n  var value = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : undefined;\n  if ((0, _common.hasOwnProperty)(MAP, type)) {\n    var array = [MAP[type]];\n    if (value !== undefined) {\n      array.push(value);\n    }\n    return array;\n  }\n  return null;\n}\nfunction getTypeMapName(value) {\n  for (var i = 0; i < MAP_ENTRIES.length; i++) {\n    var _MAP_ENTRIES$i = (0, _slicedToArray2.default)(MAP_ENTRIES[i], 2),\n      name = _MAP_ENTRIES$i[0],\n      int = _MAP_ENTRIES$i[1];\n    if (value === int) {\n      return name;\n    }\n  }\n  return null;\n}","map":{"version":3,"names":["MAP","nan","infinity","null","documentid","booleanTrue","booleanFalse","number","string","stringEmpty","array","reference","geopoint","timestamp","blob","fieldvalue","object","unknown","MAP_ENTRIES","Object","entries","getTypeMapInt","type","value","undefined","hasOwnProperty","push","getTypeMapName","i","length","name","int"],"sources":["C:/Users/HUSLIANA/react-native-ecommerce/node_modules/@react-native-firebase/firestore/lib/utils/typemap.js"],"sourcesContent":["/*\n * Copyright (c) 2016-present Invertase Limited & Contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this library except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\n\nimport { hasOwnProperty } from '@react-native-firebase/app/lib/common';\n\nconst MAP = {\n  nan: 0,\n  '-infinity': 1,\n  infinity: 2,\n  null: 3,\n  documentid: 4, // to native only\n  booleanTrue: 5,\n  booleanFalse: 6,\n  number: 7,\n  string: 8,\n  stringEmpty: 9,\n  array: 10,\n  reference: 11,\n  geopoint: 12,\n  timestamp: 13,\n  blob: 14,\n  fieldvalue: 15,\n  object: 16,\n  unknown: -999,\n};\n\nconst MAP_ENTRIES = Object.entries(MAP);\n\n/**\n * Returns the array map with value for a given type\n * @param type\n * @param value\n * @returns {null|*[]}\n */\nexport function getTypeMapInt(type, value = undefined) {\n  if (hasOwnProperty(MAP, type)) {\n    const array = [MAP[type]];\n    if (value !== undefined) {\n      array.push(value);\n    }\n    return array;\n  }\n\n  return null;\n}\n\n/**\n * Returns the type of a given int value\n * @param value\n * @returns {null}\n */\nexport function getTypeMapName(value) {\n  for (let i = 0; i < MAP_ENTRIES.length; i++) {\n    const [name, int] = MAP_ENTRIES[i];\n    if (value === int) {\n      return name;\n    }\n  }\n\n  return null;\n}\n"],"mappings":";;;;;;;AAiBA;AAEA,IAAMA,GAAG,GAAG;EACVC,GAAG,EAAE,CAAC;EACN,WAAW,EAAE,CAAC;EACdC,QAAQ,EAAE,CAAC;EACXC,IAAI,EAAE,CAAC;EACPC,UAAU,EAAE,CAAC;EACbC,WAAW,EAAE,CAAC;EACdC,YAAY,EAAE,CAAC;EACfC,MAAM,EAAE,CAAC;EACTC,MAAM,EAAE,CAAC;EACTC,WAAW,EAAE,CAAC;EACdC,KAAK,EAAE,EAAE;EACTC,SAAS,EAAE,EAAE;EACbC,QAAQ,EAAE,EAAE;EACZC,SAAS,EAAE,EAAE;EACbC,IAAI,EAAE,EAAE;EACRC,UAAU,EAAE,EAAE;EACdC,MAAM,EAAE,EAAE;EACVC,OAAO,EAAE,CAAC;AACZ,CAAC;AAED,IAAMC,WAAW,GAAGC,MAAM,CAACC,OAAO,CAACpB,GAAG,CAAC;AAQhC,SAASqB,aAAa,CAACC,IAAI,EAAqB;EAAA,IAAnBC,KAAK,uEAAGC,SAAS;EACnD,IAAI,IAAAC,sBAAc,EAACzB,GAAG,EAAEsB,IAAI,CAAC,EAAE;IAC7B,IAAMZ,KAAK,GAAG,CAACV,GAAG,CAACsB,IAAI,CAAC,CAAC;IACzB,IAAIC,KAAK,KAAKC,SAAS,EAAE;MACvBd,KAAK,CAACgB,IAAI,CAACH,KAAK,CAAC;IACnB;IACA,OAAOb,KAAK;EACd;EAEA,OAAO,IAAI;AACb;AAOO,SAASiB,cAAc,CAACJ,KAAK,EAAE;EACpC,KAAK,IAAIK,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGV,WAAW,CAACW,MAAM,EAAED,CAAC,EAAE,EAAE;IAAA,kDACvBV,WAAW,CAACU,CAAC,CAAC;MAA3BE,IAAI;MAAEC,GAAG;IAChB,IAAIR,KAAK,KAAKQ,GAAG,EAAE;MACjB,OAAOD,IAAI;IACb;EACF;EAEA,OAAO,IAAI;AACb"},"metadata":{},"sourceType":"script"}