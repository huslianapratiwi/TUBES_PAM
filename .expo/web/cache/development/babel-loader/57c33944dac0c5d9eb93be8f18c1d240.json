{"ast":null,"code":"var _jsxFileName = \"/Users/janic/Developer/react-native-safe-area-context/src/NativeSafeAreaView.web.tsx\";\nimport * as React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nvar CSSTransitions = {\n  WebkitTransition: 'webkitTransitionEnd',\n  Transition: 'transitionEnd',\n  MozTransition: 'transitionend',\n  MSTransition: 'msTransitionEnd',\n  OTransition: 'oTransitionEnd'\n};\nexport default function NativeSafeAreaView(_ref) {\n  var children = _ref.children,\n    style = _ref.style,\n    onInsetsChange = _ref.onInsetsChange;\n  React.useEffect(function () {\n    if (typeof document === 'undefined') {\n      return;\n    }\n    var element = createContextElement();\n    document.body.appendChild(element);\n    var onEnd = function onEnd() {\n      var _window$getComputedSt = window.getComputedStyle(element),\n        paddingTop = _window$getComputedSt.paddingTop,\n        paddingBottom = _window$getComputedSt.paddingBottom,\n        paddingLeft = _window$getComputedSt.paddingLeft,\n        paddingRight = _window$getComputedSt.paddingRight;\n      var insets = {\n        top: paddingTop ? parseInt(paddingTop, 10) : 0,\n        bottom: paddingBottom ? parseInt(paddingBottom, 10) : 0,\n        left: paddingLeft ? parseInt(paddingLeft, 10) : 0,\n        right: paddingRight ? parseInt(paddingRight, 10) : 0\n      };\n      onInsetsChange({\n        nativeEvent: {\n          insets: insets\n        }\n      });\n    };\n    element.addEventListener(getSupportedTransitionEvent(), onEnd);\n    onEnd();\n    return function () {\n      document.body.removeChild(element);\n      element.removeEventListener(getSupportedTransitionEvent(), onEnd);\n    };\n  }, [onInsetsChange]);\n  return React.createElement(View, {\n    style: style,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    }\n  }, children);\n}\nvar _supportedTransitionEvent = null;\nfunction getSupportedTransitionEvent() {\n  if (_supportedTransitionEvent !== null) {\n    return _supportedTransitionEvent;\n  }\n  var element = document.createElement('invalidtype');\n  _supportedTransitionEvent = CSSTransitions.Transition;\n  for (var key in CSSTransitions) {\n    if (element.style[key] !== undefined) {\n      _supportedTransitionEvent = CSSTransitions[key];\n      break;\n    }\n  }\n  return _supportedTransitionEvent;\n}\nvar _supportedEnv = null;\nfunction getSupportedEnv() {\n  if (_supportedEnv !== null) {\n    return _supportedEnv;\n  }\n  var _window = window,\n    CSS = _window.CSS;\n  if (CSS && CSS.supports && CSS.supports('top: constant(safe-area-inset-top)')) {\n    _supportedEnv = 'constant';\n  } else {\n    _supportedEnv = 'env';\n  }\n  return _supportedEnv;\n}\nfunction getInset(side) {\n  return getSupportedEnv() + \"(safe-area-inset-\" + side + \")\";\n}\nfunction createContextElement() {\n  var element = document.createElement('div');\n  var style = element.style;\n  style.position = 'fixed';\n  style.left = '0';\n  style.top = '0';\n  style.width = '0';\n  style.height = '0';\n  style.zIndex = '-1';\n  style.overflow = 'hidden';\n  style.visibility = 'hidden';\n  style.transitionDuration = '0.05s';\n  style.transitionProperty = 'padding';\n  style.transitionDelay = '0s';\n  style.paddingTop = getInset('top');\n  style.paddingBottom = getInset('bottom');\n  style.paddingLeft = getInset('left');\n  style.paddingRight = getInset('right');\n  return element;\n}","map":{"version":3,"mappings":"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","names":["React","CSSTransitions","WebkitTransition","Transition","MozTransition","MSTransition","OTransition","NativeSafeAreaView","children","style","onInsetsChange","useEffect","document","element","createContextElement","body","appendChild","onEnd","window","getComputedStyle","paddingTop","paddingBottom","paddingLeft","paddingRight","insets","top","parseInt","bottom","left","right","nativeEvent","addEventListener","getSupportedTransitionEvent","removeChild","removeEventListener","View","__source","fileName","lineNumber","_supportedTransitionEvent","createElement","key","undefined","_supportedEnv","getSupportedEnv","CSS","supports","getInset","side","position","width","height","zIndex","overflow","visibility","transitionDuration","transitionProperty","transitionDelay"],"sources":["NativeSafeAreaView.web.tsx"],"sourcesContent":["import * as React from 'react';\nimport { ViewStyle, View } from 'react-native';\n\nimport { InsetChangeNativeCallback } from './SafeArea.types';\n\ninterface NativeSafeAreaViewProps {\n  children?: React.ReactNode;\n  style: ViewStyle;\n  onInsetsChange: InsetChangeNativeCallback;\n}\n\nconst CSSTransitions: Record<string, string> = {\n  WebkitTransition: 'webkitTransitionEnd',\n  Transition: 'transitionEnd',\n  MozTransition: 'transitionend',\n  MSTransition: 'msTransitionEnd',\n  OTransition: 'oTransitionEnd',\n};\n\nexport default function NativeSafeAreaView({\n  children,\n  style,\n  onInsetsChange,\n}: NativeSafeAreaViewProps) {\n  React.useEffect(() => {\n    // Skip for SSR.\n    if (typeof document === 'undefined') {\n      return;\n    }\n\n    const element = createContextElement();\n    document.body.appendChild(element);\n    const onEnd = () => {\n      const {\n        paddingTop,\n        paddingBottom,\n        paddingLeft,\n        paddingRight,\n      } = window.getComputedStyle(element);\n\n      const insets = {\n        top: paddingTop ? parseInt(paddingTop, 10) : 0,\n        bottom: paddingBottom ? parseInt(paddingBottom, 10) : 0,\n        left: paddingLeft ? parseInt(paddingLeft, 10) : 0,\n        right: paddingRight ? parseInt(paddingRight, 10) : 0,\n      };\n      // @ts-ignore: missing properties\n      onInsetsChange({ nativeEvent: { insets } });\n    };\n    element.addEventListener(getSupportedTransitionEvent(), onEnd);\n    onEnd();\n    return () => {\n      document.body.removeChild(element);\n      element.removeEventListener(getSupportedTransitionEvent(), onEnd);\n    };\n  }, [onInsetsChange]);\n\n  return <View style={style}>{children}</View>;\n}\n\nlet _supportedTransitionEvent: string | null = null;\nfunction getSupportedTransitionEvent(): string {\n  if (_supportedTransitionEvent !== null) {\n    return _supportedTransitionEvent;\n  }\n  const element = document.createElement('invalidtype');\n\n  _supportedTransitionEvent = CSSTransitions.Transition;\n  for (const key in CSSTransitions) {\n    if (element.style[key as keyof CSSStyleDeclaration] !== undefined) {\n      _supportedTransitionEvent = CSSTransitions[key];\n      break;\n    }\n  }\n  return _supportedTransitionEvent;\n}\n\ntype CssEnv = 'constant' | 'env';\n\nlet _supportedEnv: CssEnv | null = null;\nfunction getSupportedEnv(): CssEnv {\n  if (_supportedEnv !== null) {\n    return _supportedEnv;\n  }\n  const { CSS } = window;\n  if (\n    CSS &&\n    CSS.supports &&\n    CSS.supports('top: constant(safe-area-inset-top)')\n  ) {\n    _supportedEnv = 'constant';\n  } else {\n    _supportedEnv = 'env';\n  }\n  return _supportedEnv;\n}\n\nfunction getInset(side: string): string {\n  return `${getSupportedEnv()}(safe-area-inset-${side})`;\n}\n\nfunction createContextElement(): HTMLElement {\n  const element = document.createElement('div');\n  const { style } = element;\n  style.position = 'fixed';\n  style.left = '0';\n  style.top = '0';\n  style.width = '0';\n  style.height = '0';\n  style.zIndex = '-1';\n  style.overflow = 'hidden';\n  style.visibility = 'hidden';\n  // Bacon: Anything faster than this and the callback will be invoked too early with the wrong insets\n  style.transitionDuration = '0.05s';\n  style.transitionProperty = 'padding';\n  style.transitionDelay = '0s';\n  style.paddingTop = getInset('top');\n  style.paddingBottom = getInset('bottom');\n  style.paddingLeft = getInset('left');\n  style.paddingRight = getInset('right');\n  return element;\n}\n"]},"metadata":{},"sourceType":"module"}