{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = BottomTabBar;\nexports.getTabBarHeight = void 0;\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\nvar _react = _interopRequireDefault(require(\"react\"));\nvar _reactNative = require(\"react-native\");\nvar _native = require(\"@react-navigation/native\");\nvar _reactNativeSafeAreaContext = require(\"react-native-safe-area-context\");\nvar _BottomTabItem = _interopRequireDefault(require(\"./BottomTabItem\"));\nvar _BottomTabBarHeightCallbackContext = _interopRequireDefault(require(\"../utils/BottomTabBarHeightCallbackContext\"));\nvar _useWindowDimensions = _interopRequireDefault(require(\"../utils/useWindowDimensions\"));\nvar _useIsKeyboardShown = _interopRequireDefault(require(\"../utils/useIsKeyboardShown\"));\nvar DEFAULT_TABBAR_HEIGHT = 49;\nvar COMPACT_TABBAR_HEIGHT = 32;\nvar DEFAULT_MAX_TAB_ITEM_WIDTH = 125;\nvar useNativeDriver = _reactNative.Platform.OS !== 'web';\nvar shouldUseHorizontalLabels = function shouldUseHorizontalLabels(_ref) {\n  var state = _ref.state,\n    layout = _ref.layout,\n    dimensions = _ref.dimensions,\n    _ref$adaptive = _ref.adaptive,\n    adaptive = _ref$adaptive === void 0 ? true : _ref$adaptive,\n    labelPosition = _ref.labelPosition,\n    tabStyle = _ref.tabStyle;\n  if (labelPosition) {\n    return labelPosition === 'beside-icon';\n  }\n  if (!adaptive) {\n    return false;\n  }\n  if (layout.width >= 768) {\n    var maxTabItemWidth = DEFAULT_MAX_TAB_ITEM_WIDTH;\n    var flattenedStyle = _reactNative.StyleSheet.flatten(tabStyle);\n    if (flattenedStyle) {\n      if (typeof flattenedStyle.width === 'number') {\n        maxTabItemWidth = flattenedStyle.width;\n      } else if (typeof flattenedStyle.maxWidth === 'number') {\n        maxTabItemWidth = flattenedStyle.maxWidth;\n      }\n    }\n    return state.routes.length * maxTabItemWidth <= layout.width;\n  } else {\n    return dimensions.width > dimensions.height;\n  }\n};\nvar getPaddingBottom = function getPaddingBottom(insets) {\n  return Math.max(insets.bottom - _reactNative.Platform.select({\n    ios: 4,\n    default: 0\n  }), 0);\n};\nvar getTabBarHeight = function getTabBarHeight(_ref2) {\n  var dimensions = _ref2.dimensions,\n    insets = _ref2.insets,\n    style = _ref2.style,\n    rest = (0, _objectWithoutProperties2.default)(_ref2, [\"dimensions\", \"insets\", \"style\"]);\n  var _StyleSheet$flatten;\n  var customHeight = (_StyleSheet$flatten = _reactNative.StyleSheet.flatten(style)) === null || _StyleSheet$flatten === void 0 ? void 0 : _StyleSheet$flatten.height;\n  if (typeof customHeight === 'number') {\n    return customHeight;\n  }\n  var isLandscape = dimensions.width > dimensions.height;\n  var horizontalLabels = shouldUseHorizontalLabels((0, _extends2.default)({\n    dimensions: dimensions\n  }, rest));\n  var paddingBottom = getPaddingBottom(insets);\n  if (_reactNative.Platform.OS === 'ios' && !_reactNative.Platform.isPad && isLandscape && horizontalLabels) {\n    return COMPACT_TABBAR_HEIGHT + paddingBottom;\n  }\n  return DEFAULT_TABBAR_HEIGHT + paddingBottom;\n};\nexports.getTabBarHeight = getTabBarHeight;\nfunction BottomTabBar(_ref3) {\n  var state = _ref3.state,\n    navigation = _ref3.navigation,\n    descriptors = _ref3.descriptors,\n    activeBackgroundColor = _ref3.activeBackgroundColor,\n    activeTintColor = _ref3.activeTintColor,\n    adaptive = _ref3.adaptive,\n    allowFontScaling = _ref3.allowFontScaling,\n    inactiveBackgroundColor = _ref3.inactiveBackgroundColor,\n    inactiveTintColor = _ref3.inactiveTintColor,\n    _ref3$keyboardHidesTa = _ref3.keyboardHidesTabBar,\n    keyboardHidesTabBar = _ref3$keyboardHidesTa === void 0 ? false : _ref3$keyboardHidesTa,\n    labelPosition = _ref3.labelPosition,\n    labelStyle = _ref3.labelStyle,\n    iconStyle = _ref3.iconStyle,\n    safeAreaInsets = _ref3.safeAreaInsets,\n    showLabel = _ref3.showLabel,\n    style = _ref3.style,\n    tabStyle = _ref3.tabStyle;\n  var _safeAreaInsets$top, _safeAreaInsets$right, _safeAreaInsets$botto, _safeAreaInsets$left;\n  var _useTheme = (0, _native.useTheme)(),\n    colors = _useTheme.colors;\n  var buildLink = (0, _native.useLinkBuilder)();\n  var focusedRoute = state.routes[state.index];\n  var focusedDescriptor = descriptors[focusedRoute.key];\n  var focusedOptions = focusedDescriptor.options;\n  var dimensions = (0, _useWindowDimensions.default)();\n  var isKeyboardShown = (0, _useIsKeyboardShown.default)();\n  var onHeightChange = _react.default.useContext(_BottomTabBarHeightCallbackContext.default);\n  var shouldShowTabBar = focusedOptions.tabBarVisible !== false && !(keyboardHidesTabBar && isKeyboardShown);\n  var visibilityAnimationConfigRef = _react.default.useRef(focusedOptions.tabBarVisibilityAnimationConfig);\n  _react.default.useEffect(function () {\n    visibilityAnimationConfigRef.current = focusedOptions.tabBarVisibilityAnimationConfig;\n  });\n  var _React$useState = _react.default.useState(!shouldShowTabBar),\n    _React$useState2 = (0, _slicedToArray2.default)(_React$useState, 2),\n    isTabBarHidden = _React$useState2[0],\n    setIsTabBarHidden = _React$useState2[1];\n  var _React$useState3 = _react.default.useState(function () {\n      return new _reactNative.Animated.Value(shouldShowTabBar ? 1 : 0);\n    }),\n    _React$useState4 = (0, _slicedToArray2.default)(_React$useState3, 1),\n    visible = _React$useState4[0];\n  _react.default.useEffect(function () {\n    var visibilityAnimationConfig = visibilityAnimationConfigRef.current;\n    if (shouldShowTabBar) {\n      var _visibilityAnimationC, _visibilityAnimationC2;\n      var animation = (visibilityAnimationConfig === null || visibilityAnimationConfig === void 0 ? void 0 : (_visibilityAnimationC = visibilityAnimationConfig.show) === null || _visibilityAnimationC === void 0 ? void 0 : _visibilityAnimationC.animation) === 'spring' ? _reactNative.Animated.spring : _reactNative.Animated.timing;\n      animation(visible, (0, _extends2.default)({\n        toValue: 1,\n        useNativeDriver: useNativeDriver,\n        duration: 250\n      }, visibilityAnimationConfig === null || visibilityAnimationConfig === void 0 ? void 0 : (_visibilityAnimationC2 = visibilityAnimationConfig.show) === null || _visibilityAnimationC2 === void 0 ? void 0 : _visibilityAnimationC2.config)).start(function (_ref4) {\n        var finished = _ref4.finished;\n        if (finished) {\n          setIsTabBarHidden(false);\n        }\n      });\n    } else {\n      var _visibilityAnimationC3, _visibilityAnimationC4;\n      setIsTabBarHidden(true);\n      var _animation = (visibilityAnimationConfig === null || visibilityAnimationConfig === void 0 ? void 0 : (_visibilityAnimationC3 = visibilityAnimationConfig.hide) === null || _visibilityAnimationC3 === void 0 ? void 0 : _visibilityAnimationC3.animation) === 'spring' ? _reactNative.Animated.spring : _reactNative.Animated.timing;\n      _animation(visible, (0, _extends2.default)({\n        toValue: 0,\n        useNativeDriver: useNativeDriver,\n        duration: 200\n      }, visibilityAnimationConfig === null || visibilityAnimationConfig === void 0 ? void 0 : (_visibilityAnimationC4 = visibilityAnimationConfig.hide) === null || _visibilityAnimationC4 === void 0 ? void 0 : _visibilityAnimationC4.config)).start();\n    }\n  }, [visible, shouldShowTabBar]);\n  var _React$useState5 = _react.default.useState({\n      height: 0,\n      width: dimensions.width\n    }),\n    _React$useState6 = (0, _slicedToArray2.default)(_React$useState5, 2),\n    layout = _React$useState6[0],\n    setLayout = _React$useState6[1];\n  var handleLayout = function handleLayout(e) {\n    var _e$nativeEvent$layout = e.nativeEvent.layout,\n      height = _e$nativeEvent$layout.height,\n      width = _e$nativeEvent$layout.width;\n    onHeightChange === null || onHeightChange === void 0 ? void 0 : onHeightChange(height);\n    setLayout(function (layout) {\n      if (height === layout.height && width === layout.width) {\n        return layout;\n      } else {\n        return {\n          height: height,\n          width: width\n        };\n      }\n    });\n  };\n  var routes = state.routes;\n  var defaultInsets = (0, _reactNativeSafeAreaContext.useSafeArea)();\n  var insets = {\n    top: (_safeAreaInsets$top = safeAreaInsets === null || safeAreaInsets === void 0 ? void 0 : safeAreaInsets.top) !== null && _safeAreaInsets$top !== void 0 ? _safeAreaInsets$top : defaultInsets.top,\n    right: (_safeAreaInsets$right = safeAreaInsets === null || safeAreaInsets === void 0 ? void 0 : safeAreaInsets.right) !== null && _safeAreaInsets$right !== void 0 ? _safeAreaInsets$right : defaultInsets.right,\n    bottom: (_safeAreaInsets$botto = safeAreaInsets === null || safeAreaInsets === void 0 ? void 0 : safeAreaInsets.bottom) !== null && _safeAreaInsets$botto !== void 0 ? _safeAreaInsets$botto : defaultInsets.bottom,\n    left: (_safeAreaInsets$left = safeAreaInsets === null || safeAreaInsets === void 0 ? void 0 : safeAreaInsets.left) !== null && _safeAreaInsets$left !== void 0 ? _safeAreaInsets$left : defaultInsets.left\n  };\n  var paddingBottom = getPaddingBottom(insets);\n  var tabBarHeight = getTabBarHeight({\n    state: state,\n    insets: insets,\n    dimensions: dimensions,\n    layout: layout,\n    adaptive: adaptive,\n    labelPosition: labelPosition,\n    tabStyle: tabStyle,\n    style: style\n  });\n  var hasHorizontalLabels = shouldUseHorizontalLabels({\n    state: state,\n    dimensions: dimensions,\n    layout: layout,\n    adaptive: adaptive,\n    labelPosition: labelPosition,\n    tabStyle: tabStyle\n  });\n  return _react.default.createElement(_reactNative.Animated.View, {\n    style: [styles.tabBar, {\n      backgroundColor: colors.card,\n      borderTopColor: colors.border\n    }, {\n      transform: [{\n        translateY: visible.interpolate({\n          inputRange: [0, 1],\n          outputRange: [layout.height + paddingBottom + _reactNative.StyleSheet.hairlineWidth, 0]\n        })\n      }],\n      position: isTabBarHidden ? 'absolute' : null\n    }, {\n      height: tabBarHeight,\n      paddingBottom: paddingBottom,\n      paddingHorizontal: Math.max(insets.left, insets.right)\n    }, style],\n    pointerEvents: isTabBarHidden ? 'none' : 'auto',\n    onLayout: handleLayout\n  }, _react.default.createElement(_reactNative.View, {\n    style: styles.content\n  }, routes.map(function (route, index) {\n    var focused = index === state.index;\n    var options = descriptors[route.key].options;\n    var onPress = function onPress() {\n      var event = navigation.emit({\n        type: 'tabPress',\n        target: route.key,\n        canPreventDefault: true\n      });\n      if (!focused && !event.defaultPrevented) {\n        navigation.dispatch((0, _extends2.default)({}, _native.CommonActions.navigate(route.name), {\n          target: state.key\n        }));\n      }\n    };\n    var onLongPress = function onLongPress() {\n      navigation.emit({\n        type: 'tabLongPress',\n        target: route.key\n      });\n    };\n    var label = options.tabBarLabel !== undefined ? options.tabBarLabel : options.title !== undefined ? options.title : route.name;\n    var accessibilityLabel = options.tabBarAccessibilityLabel !== undefined ? options.tabBarAccessibilityLabel : typeof label === 'string' ? \"\".concat(label, \", tab, \").concat(index + 1, \" of \").concat(routes.length) : undefined;\n    return _react.default.createElement(_native.NavigationContext.Provider, {\n      key: route.key,\n      value: descriptors[route.key].navigation\n    }, _react.default.createElement(_native.NavigationRouteContext.Provider, {\n      value: route\n    }, _react.default.createElement(_BottomTabItem.default, {\n      route: route,\n      focused: focused,\n      horizontal: hasHorizontalLabels,\n      onPress: onPress,\n      onLongPress: onLongPress,\n      accessibilityLabel: accessibilityLabel,\n      to: buildLink(route.name, route.params),\n      testID: options.tabBarTestID,\n      allowFontScaling: allowFontScaling,\n      activeTintColor: activeTintColor,\n      inactiveTintColor: inactiveTintColor,\n      activeBackgroundColor: activeBackgroundColor,\n      inactiveBackgroundColor: inactiveBackgroundColor,\n      button: options.tabBarButton,\n      icon: options.tabBarIcon,\n      badge: options.tabBarBadge,\n      badgeStyle: options.tabBarBadgeStyle,\n      label: label,\n      showLabel: showLabel,\n      labelStyle: labelStyle,\n      iconStyle: iconStyle,\n      style: tabStyle\n    })));\n  })));\n}\nvar styles = _reactNative.StyleSheet.create({\n  tabBar: {\n    left: 0,\n    right: 0,\n    bottom: 0,\n    borderTopWidth: _reactNative.StyleSheet.hairlineWidth,\n    elevation: 8\n  },\n  content: {\n    flex: 1,\n    flexDirection: 'row'\n  }\n});","map":{"version":3,"sources":["BottomTabBar.tsx"],"names":["DEFAULT_TABBAR_HEIGHT","COMPACT_TABBAR_HEIGHT","DEFAULT_MAX_TAB_ITEM_WIDTH","useNativeDriver","Platform","OS","shouldUseHorizontalLabels","state","layout","dimensions","adaptive","labelPosition","tabStyle","width","maxTabItemWidth","flattenedStyle","StyleSheet","flatten","maxWidth","routes","length","height","getPaddingBottom","insets","max","bottom","select","ios","default","getTabBarHeight","style","rest","customHeight","isLandscape","horizontalLabels","paddingBottom","isPad","BottomTabBar","navigation","descriptors","activeBackgroundColor","activeTintColor","allowFontScaling","inactiveBackgroundColor","inactiveTintColor","keyboardHidesTabBar","labelStyle","iconStyle","safeAreaInsets","showLabel","colors","useTheme","buildLink","useLinkBuilder","focusedRoute","index","focusedDescriptor","key","focusedOptions","options","useWindowDimensions","isKeyboardShown","useIsKeyboardShown","onHeightChange","React","useContext","BottomTabBarHeightCallbackContext","shouldShowTabBar","tabBarVisible","visibilityAnimationConfigRef","useRef","tabBarVisibilityAnimationConfig","useEffect","current","isTabBarHidden","setIsTabBarHidden","useState","visible","Animated","Value","visibilityAnimationConfig","animation","show","spring","timing","toValue","duration","config","start","finished","hide","setLayout","handleLayout","e","nativeEvent","defaultInsets","useSafeArea","top","right","left","tabBarHeight","hasHorizontalLabels","styles","tabBar","backgroundColor","card","borderTopColor","border","transform","translateY","interpolate","inputRange","outputRange","hairlineWidth","position","paddingHorizontal","Math","content","map","route","focused","onPress","event","emit","type","target","canPreventDefault","defaultPrevented","dispatch","CommonActions","navigate","name","onLongPress","label","tabBarLabel","undefined","title","accessibilityLabel","tabBarAccessibilityLabel","params","tabBarTestID","tabBarButton","tabBarIcon","tabBarBadge","tabBarBadgeStyle","create","borderTopWidth","elevation","flex","flexDirection"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {\n  View,\n  Animated,\n  StyleSheet,\n  Platform,\n  LayoutChangeEvent,\n  StyleProp,\n  ViewStyle,\n} from 'react-native';\nimport {\n  NavigationContext,\n  NavigationRouteContext,\n  TabNavigationState,\n  ParamListBase,\n  CommonActions,\n  useTheme,\n  useLinkBuilder,\n} from '@react-navigation/native';\nimport { useSafeArea, EdgeInsets } from 'react-native-safe-area-context';\n\nimport BottomTabItem from './BottomTabItem';\nimport BottomTabBarHeightCallbackContext from '../utils/BottomTabBarHeightCallbackContext';\nimport useWindowDimensions from '../utils/useWindowDimensions';\nimport useIsKeyboardShown from '../utils/useIsKeyboardShown';\nimport type { BottomTabBarProps, LabelPosition } from '../types';\n\ntype Props = BottomTabBarProps & {\n  activeTintColor?: string;\n  inactiveTintColor?: string;\n};\n\nconst DEFAULT_TABBAR_HEIGHT = 49;\nconst COMPACT_TABBAR_HEIGHT = 32;\nconst DEFAULT_MAX_TAB_ITEM_WIDTH = 125;\n\nconst useNativeDriver = Platform.OS !== 'web';\n\ntype Options = {\n  state: TabNavigationState<ParamListBase>;\n  layout: { height: number; width: number };\n  dimensions: { height: number; width: number };\n  tabStyle: StyleProp<ViewStyle>;\n  labelPosition: LabelPosition | undefined;\n  adaptive: boolean | undefined;\n};\n\nconst shouldUseHorizontalLabels = ({\n  state,\n  layout,\n  dimensions,\n  adaptive = true,\n  labelPosition,\n  tabStyle,\n}: Options) => {\n  if (labelPosition) {\n    return labelPosition === 'beside-icon';\n  }\n\n  if (!adaptive) {\n    return false;\n  }\n\n  if (layout.width >= 768) {\n    // Screen size matches a tablet\n    let maxTabItemWidth = DEFAULT_MAX_TAB_ITEM_WIDTH;\n\n    const flattenedStyle = StyleSheet.flatten(tabStyle);\n\n    if (flattenedStyle) {\n      if (typeof flattenedStyle.width === 'number') {\n        maxTabItemWidth = flattenedStyle.width;\n      } else if (typeof flattenedStyle.maxWidth === 'number') {\n        maxTabItemWidth = flattenedStyle.maxWidth;\n      }\n    }\n\n    return state.routes.length * maxTabItemWidth <= layout.width;\n  } else {\n    return dimensions.width > dimensions.height;\n  }\n};\n\nconst getPaddingBottom = (insets: EdgeInsets) =>\n  Math.max(insets.bottom - Platform.select({ ios: 4, default: 0 }), 0);\n\nexport const getTabBarHeight = ({\n  dimensions,\n  insets,\n  style,\n  ...rest\n}: Options & {\n  insets: EdgeInsets;\n  style: Animated.WithAnimatedValue<StyleProp<ViewStyle>>;\n}) => {\n  // @ts-ignore\n  const customHeight = StyleSheet.flatten(style)?.height;\n\n  if (typeof customHeight === 'number') {\n    return customHeight;\n  }\n\n  const isLandscape = dimensions.width > dimensions.height;\n  const horizontalLabels = shouldUseHorizontalLabels({ dimensions, ...rest });\n  const paddingBottom = getPaddingBottom(insets);\n\n  if (\n    Platform.OS === 'ios' &&\n    !Platform.isPad &&\n    isLandscape &&\n    horizontalLabels\n  ) {\n    return COMPACT_TABBAR_HEIGHT + paddingBottom;\n  }\n\n  return DEFAULT_TABBAR_HEIGHT + paddingBottom;\n};\n\nexport default function BottomTabBar({\n  state,\n  navigation,\n  descriptors,\n  activeBackgroundColor,\n  activeTintColor,\n  adaptive,\n  allowFontScaling,\n  inactiveBackgroundColor,\n  inactiveTintColor,\n  keyboardHidesTabBar = false,\n  labelPosition,\n  labelStyle,\n  iconStyle,\n  safeAreaInsets,\n  showLabel,\n  style,\n  tabStyle,\n}: Props) {\n  const { colors } = useTheme();\n  const buildLink = useLinkBuilder();\n\n  const focusedRoute = state.routes[state.index];\n  const focusedDescriptor = descriptors[focusedRoute.key];\n  const focusedOptions = focusedDescriptor.options;\n\n  const dimensions = useWindowDimensions();\n  const isKeyboardShown = useIsKeyboardShown();\n\n  const onHeightChange = React.useContext(BottomTabBarHeightCallbackContext);\n\n  const shouldShowTabBar =\n    focusedOptions.tabBarVisible !== false &&\n    !(keyboardHidesTabBar && isKeyboardShown);\n\n  const visibilityAnimationConfigRef = React.useRef(\n    focusedOptions.tabBarVisibilityAnimationConfig\n  );\n\n  React.useEffect(() => {\n    visibilityAnimationConfigRef.current =\n      focusedOptions.tabBarVisibilityAnimationConfig;\n  });\n\n  const [isTabBarHidden, setIsTabBarHidden] = React.useState(!shouldShowTabBar);\n\n  const [visible] = React.useState(\n    () => new Animated.Value(shouldShowTabBar ? 1 : 0)\n  );\n\n  React.useEffect(() => {\n    const visibilityAnimationConfig = visibilityAnimationConfigRef.current;\n\n    if (shouldShowTabBar) {\n      const animation =\n        visibilityAnimationConfig?.show?.animation === 'spring'\n          ? Animated.spring\n          : Animated.timing;\n\n      animation(visible, {\n        toValue: 1,\n        useNativeDriver,\n        duration: 250,\n        ...visibilityAnimationConfig?.show?.config,\n      }).start(({ finished }) => {\n        if (finished) {\n          setIsTabBarHidden(false);\n        }\n      });\n    } else {\n      setIsTabBarHidden(true);\n\n      const animation =\n        visibilityAnimationConfig?.hide?.animation === 'spring'\n          ? Animated.spring\n          : Animated.timing;\n\n      animation(visible, {\n        toValue: 0,\n        useNativeDriver,\n        duration: 200,\n        ...visibilityAnimationConfig?.hide?.config,\n      }).start();\n    }\n  }, [visible, shouldShowTabBar]);\n\n  const [layout, setLayout] = React.useState({\n    height: 0,\n    width: dimensions.width,\n  });\n\n  const handleLayout = (e: LayoutChangeEvent) => {\n    const { height, width } = e.nativeEvent.layout;\n\n    onHeightChange?.(height);\n\n    setLayout((layout) => {\n      if (height === layout.height && width === layout.width) {\n        return layout;\n      } else {\n        return {\n          height,\n          width,\n        };\n      }\n    });\n  };\n\n  const { routes } = state;\n\n  const defaultInsets = useSafeArea();\n\n  const insets = {\n    top: safeAreaInsets?.top ?? defaultInsets.top,\n    right: safeAreaInsets?.right ?? defaultInsets.right,\n    bottom: safeAreaInsets?.bottom ?? defaultInsets.bottom,\n    left: safeAreaInsets?.left ?? defaultInsets.left,\n  };\n\n  const paddingBottom = getPaddingBottom(insets);\n  const tabBarHeight = getTabBarHeight({\n    state,\n    insets,\n    dimensions,\n    layout,\n    adaptive,\n    labelPosition,\n    tabStyle,\n    style,\n  });\n\n  const hasHorizontalLabels = shouldUseHorizontalLabels({\n    state,\n    dimensions,\n    layout,\n    adaptive,\n    labelPosition,\n    tabStyle,\n  });\n\n  return (\n    <Animated.View\n      style={[\n        styles.tabBar,\n        {\n          backgroundColor: colors.card,\n          borderTopColor: colors.border,\n        },\n        {\n          transform: [\n            {\n              translateY: visible.interpolate({\n                inputRange: [0, 1],\n                outputRange: [\n                  layout.height + paddingBottom + StyleSheet.hairlineWidth,\n                  0,\n                ],\n              }),\n            },\n          ],\n          // Absolutely position the tab bar so that the content is below it\n          // This is needed to avoid gap at bottom when the tab bar is hidden\n          position: isTabBarHidden ? 'absolute' : (null as any),\n        },\n        {\n          height: tabBarHeight,\n          paddingBottom,\n          paddingHorizontal: Math.max(insets.left, insets.right),\n        },\n        style,\n      ]}\n      pointerEvents={isTabBarHidden ? 'none' : 'auto'}\n      onLayout={handleLayout}\n    >\n      <View style={styles.content}>\n        {routes.map((route, index) => {\n          const focused = index === state.index;\n          const { options } = descriptors[route.key];\n\n          const onPress = () => {\n            const event = navigation.emit({\n              type: 'tabPress',\n              target: route.key,\n              canPreventDefault: true,\n            });\n\n            if (!focused && !event.defaultPrevented) {\n              navigation.dispatch({\n                ...CommonActions.navigate(route.name),\n                target: state.key,\n              });\n            }\n          };\n\n          const onLongPress = () => {\n            navigation.emit({\n              type: 'tabLongPress',\n              target: route.key,\n            });\n          };\n\n          const label =\n            options.tabBarLabel !== undefined\n              ? options.tabBarLabel\n              : options.title !== undefined\n              ? options.title\n              : route.name;\n\n          const accessibilityLabel =\n            options.tabBarAccessibilityLabel !== undefined\n              ? options.tabBarAccessibilityLabel\n              : typeof label === 'string'\n              ? `${label}, tab, ${index + 1} of ${routes.length}`\n              : undefined;\n\n          return (\n            <NavigationContext.Provider\n              key={route.key}\n              value={descriptors[route.key].navigation}\n            >\n              <NavigationRouteContext.Provider value={route}>\n                <BottomTabItem\n                  route={route}\n                  focused={focused}\n                  horizontal={hasHorizontalLabels}\n                  onPress={onPress}\n                  onLongPress={onLongPress}\n                  accessibilityLabel={accessibilityLabel}\n                  to={buildLink(route.name, route.params)}\n                  testID={options.tabBarTestID}\n                  allowFontScaling={allowFontScaling}\n                  activeTintColor={activeTintColor}\n                  inactiveTintColor={inactiveTintColor}\n                  activeBackgroundColor={activeBackgroundColor}\n                  inactiveBackgroundColor={inactiveBackgroundColor}\n                  button={options.tabBarButton}\n                  icon={options.tabBarIcon}\n                  badge={options.tabBarBadge}\n                  badgeStyle={options.tabBarBadgeStyle}\n                  label={label}\n                  showLabel={showLabel}\n                  labelStyle={labelStyle}\n                  iconStyle={iconStyle}\n                  style={tabStyle}\n                />\n              </NavigationRouteContext.Provider>\n            </NavigationContext.Provider>\n          );\n        })}\n      </View>\n    </Animated.View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  tabBar: {\n    left: 0,\n    right: 0,\n    bottom: 0,\n    borderTopWidth: StyleSheet.hairlineWidth,\n    elevation: 8,\n  },\n  content: {\n    flex: 1,\n    flexDirection: 'row',\n  },\n});\n"]},"metadata":{},"sourceType":"script"}