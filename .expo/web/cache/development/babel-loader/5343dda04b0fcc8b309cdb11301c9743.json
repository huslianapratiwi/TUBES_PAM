{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\nimport AnimatedNode from \"./AnimatedNode\";\nimport deepEqual from 'fbjs/lib/areEqual';\nfunction sanitizeTransform(inputTransform) {\n  var outputTransform = [];\n  inputTransform.forEach(function (transform) {\n    for (var key in transform) {\n      var value = transform[key];\n      if (value instanceof AnimatedNode) {\n        outputTransform.push({\n          property: key,\n          nodeID: value.__nodeID\n        });\n      } else {\n        outputTransform.push({\n          property: key,\n          value: value\n        });\n      }\n    }\n  });\n  return outputTransform;\n}\nfunction extractAnimatedParentNodes(transform) {\n  var parents = [];\n  transform.forEach(function (transform) {\n    for (var key in transform) {\n      var value = transform[key];\n      if (value instanceof AnimatedNode) {\n        parents.push(value);\n      }\n    }\n  });\n  return parents;\n}\nexport function createOrReuseTransformNode(transform, oldNode) {\n  var config = sanitizeTransform(transform);\n  if (oldNode && deepEqual(config, oldNode._config)) {\n    return oldNode;\n  }\n  return new AnimatedTransform(transform, config);\n}\nvar AnimatedTransform = function (_AnimatedNode) {\n  _inherits(AnimatedTransform, _AnimatedNode);\n  var _super = _createSuper(AnimatedTransform);\n  function AnimatedTransform(transform, config) {\n    var _this;\n    _classCallCheck(this, AnimatedTransform);\n    _this = _super.call(this, {\n      type: 'transform',\n      transform: config\n    }, extractAnimatedParentNodes(transform));\n    _this._config = config;\n    _this._transform = transform;\n    return _this;\n  }\n  _createClass(AnimatedTransform, [{\n    key: \"__onEvaluate\",\n    value: function __onEvaluate() {\n      return this._transform.map(function (transform) {\n        var result = {};\n        for (var key in transform) {\n          var value = transform[key];\n          if (value instanceof AnimatedNode) {\n            result[key] = value.__getValue();\n          }\n        }\n        return result;\n      });\n    }\n  }]);\n  return AnimatedTransform;\n}(AnimatedNode);","map":{"version":3,"names":["AnimatedNode","deepEqual","sanitizeTransform","inputTransform","outputTransform","forEach","transform","key","value","push","property","nodeID","__nodeID","extractAnimatedParentNodes","parents","createOrReuseTransformNode","oldNode","config","_config","AnimatedTransform","type","_transform","map","result","__getValue"],"sources":["C:/Users/HUSLIANA/react_native_storeapp-master/node_modules/react-native-reanimated/src/core/AnimatedTransform.js"],"sourcesContent":["import AnimatedNode from './AnimatedNode';\n\nimport deepEqual from 'fbjs/lib/areEqual';\n\nfunction sanitizeTransform(inputTransform) {\n  const outputTransform = [];\n  inputTransform.forEach(transform => {\n    for (const key in transform) {\n      const value = transform[key];\n      if (value instanceof AnimatedNode) {\n        outputTransform.push({\n          property: key,\n          nodeID: value.__nodeID,\n        });\n      } else {\n        outputTransform.push({\n          property: key,\n          value,\n        });\n      }\n    }\n  });\n  return outputTransform;\n}\n\nfunction extractAnimatedParentNodes(transform) {\n  const parents = [];\n  transform.forEach(transform => {\n    for (const key in transform) {\n      const value = transform[key];\n      if (value instanceof AnimatedNode) {\n        parents.push(value);\n      }\n    }\n  });\n  return parents;\n}\n\nexport function createOrReuseTransformNode(transform, oldNode) {\n  const config = sanitizeTransform(transform);\n  if (oldNode && deepEqual(config, oldNode._config)) {\n    return oldNode;\n  }\n  return new AnimatedTransform(transform, config);\n}\n\nclass AnimatedTransform extends AnimatedNode {\n  constructor(transform, config) {\n    super(\n      { type: 'transform', transform: config },\n      extractAnimatedParentNodes(transform)\n    );\n    this._config = config;\n    this._transform = transform;\n  }\n\n  __onEvaluate() {\n    return this._transform.map(transform => {\n      const result = {};\n      for (const key in transform) {\n        const value = transform[key];\n        if (value instanceof AnimatedNode) {\n          result[key] = value.__getValue();\n        }\n      }\n      return result;\n    });\n  }\n}\n"],"mappings":";;;;;;;AAAA,OAAOA,YAAY;AAEnB,OAAOC,SAAS,MAAM,mBAAmB;AAEzC,SAASC,iBAAiB,CAACC,cAAc,EAAE;EACzC,IAAMC,eAAe,GAAG,EAAE;EAC1BD,cAAc,CAACE,OAAO,CAAC,UAAAC,SAAS,EAAI;IAClC,KAAK,IAAMC,GAAG,IAAID,SAAS,EAAE;MAC3B,IAAME,KAAK,GAAGF,SAAS,CAACC,GAAG,CAAC;MAC5B,IAAIC,KAAK,YAAYR,YAAY,EAAE;QACjCI,eAAe,CAACK,IAAI,CAAC;UACnBC,QAAQ,EAAEH,GAAG;UACbI,MAAM,EAAEH,KAAK,CAACI;QAChB,CAAC,CAAC;MACJ,CAAC,MAAM;QACLR,eAAe,CAACK,IAAI,CAAC;UACnBC,QAAQ,EAAEH,GAAG;UACbC,KAAK,EAALA;QACF,CAAC,CAAC;MACJ;IACF;EACF,CAAC,CAAC;EACF,OAAOJ,eAAe;AACxB;AAEA,SAASS,0BAA0B,CAACP,SAAS,EAAE;EAC7C,IAAMQ,OAAO,GAAG,EAAE;EAClBR,SAAS,CAACD,OAAO,CAAC,UAAAC,SAAS,EAAI;IAC7B,KAAK,IAAMC,GAAG,IAAID,SAAS,EAAE;MAC3B,IAAME,KAAK,GAAGF,SAAS,CAACC,GAAG,CAAC;MAC5B,IAAIC,KAAK,YAAYR,YAAY,EAAE;QACjCc,OAAO,CAACL,IAAI,CAACD,KAAK,CAAC;MACrB;IACF;EACF,CAAC,CAAC;EACF,OAAOM,OAAO;AAChB;AAEA,OAAO,SAASC,0BAA0B,CAACT,SAAS,EAAEU,OAAO,EAAE;EAC7D,IAAMC,MAAM,GAAGf,iBAAiB,CAACI,SAAS,CAAC;EAC3C,IAAIU,OAAO,IAAIf,SAAS,CAACgB,MAAM,EAAED,OAAO,CAACE,OAAO,CAAC,EAAE;IACjD,OAAOF,OAAO;EAChB;EACA,OAAO,IAAIG,iBAAiB,CAACb,SAAS,EAAEW,MAAM,CAAC;AACjD;AAAC,IAEKE,iBAAiB;EAAA;EAAA;EACrB,2BAAYb,SAAS,EAAEW,MAAM,EAAE;IAAA;IAAA;IAC7B,0BACE;MAAEG,IAAI,EAAE,WAAW;MAAEd,SAAS,EAAEW;IAAO,CAAC,EACxCJ,0BAA0B,CAACP,SAAS,CAAC;IAEvC,MAAKY,OAAO,GAAGD,MAAM;IACrB,MAAKI,UAAU,GAAGf,SAAS;IAAC;EAC9B;EAAC;IAAA;IAAA,+BAEc;MACb,OAAO,IAAI,CAACe,UAAU,CAACC,GAAG,CAAC,UAAAhB,SAAS,EAAI;QACtC,IAAMiB,MAAM,GAAG,CAAC,CAAC;QACjB,KAAK,IAAMhB,GAAG,IAAID,SAAS,EAAE;UAC3B,IAAME,KAAK,GAAGF,SAAS,CAACC,GAAG,CAAC;UAC5B,IAAIC,KAAK,YAAYR,YAAY,EAAE;YACjCuB,MAAM,CAAChB,GAAG,CAAC,GAAGC,KAAK,CAACgB,UAAU,EAAE;UAClC;QACF;QACA,OAAOD,MAAM;MACf,CAAC,CAAC;IACJ;EAAC;EAAA;AAAA,EArB6BvB,YAAY"},"metadata":{},"sourceType":"module"}