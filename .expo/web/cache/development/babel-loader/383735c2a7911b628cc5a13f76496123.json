{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ManualGesture = void 0;\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\nvar _get2 = _interopRequireDefault(require(\"@babel/runtime/helpers/get\"));\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\nvar _gesture = require(\"./gesture\");\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\nfunction changeEventCalculator(current, _previous) {\n  'worklet';\n\n  return current;\n}\nvar ManualGesture = function (_ContinousBaseGesture) {\n  (0, _inherits2.default)(ManualGesture, _ContinousBaseGesture);\n  var _super = _createSuper(ManualGesture);\n  function ManualGesture() {\n    var _this;\n    (0, _classCallCheck2.default)(this, ManualGesture);\n    _this = _super.call(this);\n    _this.handlerName = 'ManualGestureHandler';\n    return _this;\n  }\n  (0, _createClass2.default)(ManualGesture, [{\n    key: \"onChange\",\n    value: function onChange(callback) {\n      this.handlers.changeEventCalculator = changeEventCalculator;\n      return (0, _get2.default)((0, _getPrototypeOf2.default)(ManualGesture.prototype), \"onChange\", this).call(this, callback);\n    }\n  }]);\n  return ManualGesture;\n}(_gesture.ContinousBaseGesture);\nexports.ManualGesture = ManualGesture;","map":{"version":3,"sources":["manualGesture.ts"],"names":["changeEventCalculator","current","_previous","ManualGesture","ContinousBaseGesture","constructor","handlerName","callback","handlers"],"mappings":";;;;;;;;;;;AACA;AAAA;AAAA;AAEA,SAASA,qBAAT,CACEC,OADF,EAEEC,SAFF,EAGE;EACA,SAAA;;EACA,OAAOD,OAAP;AACD;AAAA,IAEYE,aAAN;EAAA;EAAA;EAILE,yBAAc;IAAA;IAAA;IACZ;IAEA,MAAKC,WAAL,GAAmB,sBAAnB;IAAA;EACD;EAAA;IAAA;IAAA,yBAGCC,QADM,EAEN;MAEA,IAAA,CAAKC,QAAL,CAAcR,qBAAd,GAAsCA,qBAAtC;MACA,+GAAsBO,QAAtB;IACD;EAAA;EAAA;AAAA,EAhBgCH,6BAA5B;AAAA","sourcesContent":["import { GestureUpdateEvent } from '../gestureHandlerCommon';\nimport { ContinousBaseGesture } from './gesture';\n\nfunction changeEventCalculator(\n  current: GestureUpdateEvent<Record<string, never>>,\n  _previous?: GestureUpdateEvent<Record<string, never>>\n) {\n  'worklet';\n  return current;\n}\n\nexport class ManualGesture extends ContinousBaseGesture<\n  Record<string, never>,\n  Record<string, never>\n> {\n  constructor() {\n    super();\n\n    this.handlerName = 'ManualGestureHandler';\n  }\n\n  onChange(\n    callback: (event: GestureUpdateEvent<Record<string, never>>) => void\n  ) {\n    // @ts-ignore TS being overprotective, Record<string, never> is Record\n    this.handlers.changeEventCalculator = changeEventCalculator;\n    return super.onChange(callback);\n  }\n}\n\nexport type ManualGestureType = InstanceType<typeof ManualGesture>;\n"]},"metadata":{},"sourceType":"script"}