{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\HUSLIANA\\\\react_native_storeapp-master\\\\node_modules\\\\react-native-screens\\\\src\\\\screens.web.js\";\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\nimport debounce from 'debounce';\nimport React from 'react';\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport View from \"react-native-web/dist/exports/View\";\nvar _shouldEnableScreens = true;\nexport function enableScreens() {\n  var shouldEnableScreens = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n  if (shouldEnableScreens) {\n    console.warn('react-native-screens is not fully supported on this platform yet.');\n  }\n  _shouldEnableScreens = shouldEnableScreens;\n}\nexport function screensEnabled() {\n  return _shouldEnableScreens;\n}\nfunction isAnimatedValue(value) {\n  return value && value.__getValue && value.addListener;\n}\nfunction isPropTruthy(prop) {\n  var activeValue = prop;\n  if (isAnimatedValue(prop)) {\n    activeValue = prop.__getValue();\n  }\n  return !!activeValue;\n}\nexport var Screen = function (_React$Component) {\n  _inherits(Screen, _React$Component);\n  var _super = _createSuper(Screen);\n  function Screen(props) {\n    var _this;\n    _classCallCheck(this, Screen);\n    _this = _super.call(this, props);\n    _this.listenerId = null;\n    _this._addListener = function (possibleListener) {\n      if (_this.listenerId) throw new Error('Screen: Attempting to observe an animated value while another value is already observed.');\n      if (isAnimatedValue(possibleListener)) {\n        _this.listenerId = possibleListener.addListener(_this._onAnimatedValueUpdated);\n      }\n    };\n    _this._removeListener = function (possibleListener) {\n      if (isAnimatedValue(possibleListener)) {\n        possibleListener.removeListener(_this.listenerId);\n        _this.listenerId = null;\n      }\n    };\n    _this._onAnimatedValueUpdated = function (_ref) {\n      var value = _ref.value;\n      _this._updateDisplay(!!value);\n    };\n    _this._updateDisplay = function (isActive) {\n      if (isActive === undefined) {\n        isActive = isPropTruthy(_this.props.active);\n      }\n      var display = isActive ? 'flex' : 'none';\n      _this.setNativeProps({\n        style: {\n          display: display\n        }\n      });\n    };\n    _this.setNativeProps = function (nativeProps) {\n      if (_this._view) {\n        _this._view.setNativeProps(nativeProps);\n      }\n    };\n    _this._setRef = function (view) {\n      _this._view = view;\n      _this._updateDisplay();\n    };\n    _this._onAnimatedValueUpdated = debounce(_this._onAnimatedValueUpdated, 10);\n    _this._addListener(props.active);\n    return _this;\n  }\n  _createClass(Screen, [{\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this._removeListener(this.props.active);\n    }\n  }, {\n    key: \"shouldComponentUpdate\",\n    value: function shouldComponentUpdate(_ref2) {\n      var nextActive = _ref2.active;\n      var active = this.props.active;\n      if (nextActive !== active) {\n        this._removeListener(active);\n        this._addListener(nextActive);\n        this._updateDisplay(isPropTruthy(nextActive));\n        return false;\n      }\n      return true;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(Animated.View, _extends({}, this.props, {\n        ref: this._setRef,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 12\n        }\n      }));\n    }\n  }]);\n  return Screen;\n}(React.Component);\nScreen.defaultProps = {\n  active: true\n};\nexport var ScreenContainer = View;\nexport var NativeScreen = View;\nexport var NativeScreenContainer = View;","map":{"version":3,"names":["debounce","React","_shouldEnableScreens","enableScreens","shouldEnableScreens","console","warn","screensEnabled","isAnimatedValue","value","__getValue","addListener","isPropTruthy","prop","activeValue","Screen","props","listenerId","_addListener","possibleListener","Error","_onAnimatedValueUpdated","_removeListener","removeListener","_updateDisplay","isActive","undefined","active","display","setNativeProps","style","nativeProps","_view","_setRef","view","nextActive","Component","defaultProps","ScreenContainer","View","NativeScreen","NativeScreenContainer"],"sources":["C:/Users/HUSLIANA/react_native_storeapp-master/node_modules/react-native-screens/src/screens.web.js"],"sourcesContent":["import debounce from 'debounce';\nimport React from 'react';\nimport { Animated, View } from 'react-native';\n\nlet _shouldEnableScreens = true;\n\nexport function enableScreens(shouldEnableScreens = true) {\n  if (shouldEnableScreens) {\n    console.warn(\n      'react-native-screens is not fully supported on this platform yet.'\n    );\n  }\n  _shouldEnableScreens = shouldEnableScreens;\n}\n\nexport function screensEnabled() {\n  return _shouldEnableScreens;\n}\n\nfunction isAnimatedValue(value) {\n  return value && value.__getValue && value.addListener;\n}\n\nfunction isPropTruthy(prop) {\n  let activeValue = prop;\n  if (isAnimatedValue(prop)) {\n    activeValue = prop.__getValue();\n  }\n\n  return !!activeValue;\n}\n\nexport class Screen extends React.Component {\n  static defaultProps = {\n    active: true,\n  };\n\n  listenerId = null;\n\n  constructor(props) {\n    super(props);\n\n    this._onAnimatedValueUpdated = debounce(this._onAnimatedValueUpdated, 10);\n    this._addListener(props.active);\n  }\n\n  componentWillUnmount() {\n    this._removeListener(this.props.active);\n  }\n\n  _addListener = possibleListener => {\n    if (this.listenerId)\n      throw new Error(\n        'Screen: Attempting to observe an animated value while another value is already observed.'\n      );\n    if (isAnimatedValue(possibleListener)) {\n      this.listenerId = possibleListener.addListener(\n        this._onAnimatedValueUpdated\n      );\n    }\n  };\n\n  _removeListener = possibleListener => {\n    if (isAnimatedValue(possibleListener)) {\n      possibleListener.removeListener(this.listenerId);\n      this.listenerId = null;\n    }\n  };\n\n  shouldComponentUpdate({ active: nextActive }) {\n    const { active } = this.props;\n    if (nextActive !== active) {\n      this._removeListener(active);\n      this._addListener(nextActive);\n      this._updateDisplay(isPropTruthy(nextActive));\n      return false;\n    }\n    return true;\n  }\n\n  _onAnimatedValueUpdated = ({ value }) => {\n    this._updateDisplay(!!value);\n  };\n\n  _updateDisplay = isActive => {\n    if (isActive === undefined) {\n      isActive = isPropTruthy(this.props.active);\n    }\n    const display = isActive ? 'flex' : 'none';\n    this.setNativeProps({ style: { display } });\n  };\n\n  setNativeProps = nativeProps => {\n    if (this._view) {\n      this._view.setNativeProps(nativeProps);\n    }\n  };\n\n  _setRef = view => {\n    this._view = view;\n    this._updateDisplay();\n  };\n\n  render() {\n    return <Animated.View {...this.props} ref={this._setRef} />;\n  }\n}\n\nexport const ScreenContainer = View;\n\nexport const NativeScreen = View;\n\nexport const NativeScreenContainer = View;\n"],"mappings":";;;;;;;;;AAAA,OAAOA,QAAQ,MAAM,UAAU;AAC/B,OAAOC,KAAK,MAAM,OAAO;AAAC;AAAA;AAG1B,IAAIC,oBAAoB,GAAG,IAAI;AAE/B,OAAO,SAASC,aAAa,GAA6B;EAAA,IAA5BC,mBAAmB,uEAAG,IAAI;EACtD,IAAIA,mBAAmB,EAAE;IACvBC,OAAO,CAACC,IAAI,CACV,mEAAmE,CACpE;EACH;EACAJ,oBAAoB,GAAGE,mBAAmB;AAC5C;AAEA,OAAO,SAASG,cAAc,GAAG;EAC/B,OAAOL,oBAAoB;AAC7B;AAEA,SAASM,eAAe,CAACC,KAAK,EAAE;EAC9B,OAAOA,KAAK,IAAIA,KAAK,CAACC,UAAU,IAAID,KAAK,CAACE,WAAW;AACvD;AAEA,SAASC,YAAY,CAACC,IAAI,EAAE;EAC1B,IAAIC,WAAW,GAAGD,IAAI;EACtB,IAAIL,eAAe,CAACK,IAAI,CAAC,EAAE;IACzBC,WAAW,GAAGD,IAAI,CAACH,UAAU,EAAE;EACjC;EAEA,OAAO,CAAC,CAACI,WAAW;AACtB;AAEA,WAAaC,MAAM;EAAA;EAAA;EAOjB,gBAAYC,KAAK,EAAE;IAAA;IAAA;IACjB,0BAAMA,KAAK;IAAE,MAHfC,UAAU,GAAG,IAAI;IAAA,MAajBC,YAAY,GAAG,UAAAC,gBAAgB,EAAI;MACjC,IAAI,MAAKF,UAAU,EACjB,MAAM,IAAIG,KAAK,CACb,0FAA0F,CAC3F;MACH,IAAIZ,eAAe,CAACW,gBAAgB,CAAC,EAAE;QACrC,MAAKF,UAAU,GAAGE,gBAAgB,CAACR,WAAW,CAC5C,MAAKU,uBAAuB,CAC7B;MACH;IACF,CAAC;IAAA,MAEDC,eAAe,GAAG,UAAAH,gBAAgB,EAAI;MACpC,IAAIX,eAAe,CAACW,gBAAgB,CAAC,EAAE;QACrCA,gBAAgB,CAACI,cAAc,CAAC,MAAKN,UAAU,CAAC;QAChD,MAAKA,UAAU,GAAG,IAAI;MACxB;IACF,CAAC;IAAA,MAaDI,uBAAuB,GAAG,gBAAe;MAAA,IAAZZ,KAAK,QAALA,KAAK;MAChC,MAAKe,cAAc,CAAC,CAAC,CAACf,KAAK,CAAC;IAC9B,CAAC;IAAA,MAEDe,cAAc,GAAG,UAAAC,QAAQ,EAAI;MAC3B,IAAIA,QAAQ,KAAKC,SAAS,EAAE;QAC1BD,QAAQ,GAAGb,YAAY,CAAC,MAAKI,KAAK,CAACW,MAAM,CAAC;MAC5C;MACA,IAAMC,OAAO,GAAGH,QAAQ,GAAG,MAAM,GAAG,MAAM;MAC1C,MAAKI,cAAc,CAAC;QAAEC,KAAK,EAAE;UAAEF,OAAO,EAAPA;QAAQ;MAAE,CAAC,CAAC;IAC7C,CAAC;IAAA,MAEDC,cAAc,GAAG,UAAAE,WAAW,EAAI;MAC9B,IAAI,MAAKC,KAAK,EAAE;QACd,MAAKA,KAAK,CAACH,cAAc,CAACE,WAAW,CAAC;MACxC;IACF,CAAC;IAAA,MAEDE,OAAO,GAAG,UAAAC,IAAI,EAAI;MAChB,MAAKF,KAAK,GAAGE,IAAI;MACjB,MAAKV,cAAc,EAAE;IACvB,CAAC;IA3DC,MAAKH,uBAAuB,GAAGrB,QAAQ,CAAC,MAAKqB,uBAAuB,EAAE,EAAE,CAAC;IACzE,MAAKH,YAAY,CAACF,KAAK,CAACW,MAAM,CAAC;IAAC;EAClC;EAAC;IAAA;IAAA,uCAEsB;MACrB,IAAI,CAACL,eAAe,CAAC,IAAI,CAACN,KAAK,CAACW,MAAM,CAAC;IACzC;EAAC;IAAA;IAAA,6CAqB6C;MAAA,IAAdQ,UAAU,SAAlBR,MAAM;MAAA,IACpBA,MAAM,GAAK,IAAI,CAACX,KAAK,CAArBW,MAAM;MACd,IAAIQ,UAAU,KAAKR,MAAM,EAAE;QACzB,IAAI,CAACL,eAAe,CAACK,MAAM,CAAC;QAC5B,IAAI,CAACT,YAAY,CAACiB,UAAU,CAAC;QAC7B,IAAI,CAACX,cAAc,CAACZ,YAAY,CAACuB,UAAU,CAAC,CAAC;QAC7C,OAAO,KAAK;MACd;MACA,OAAO,IAAI;IACb;EAAC;IAAA;IAAA,yBAyBQ;MACP,OAAO,oBAAC,QAAQ,CAAC,IAAI,eAAK,IAAI,CAACnB,KAAK;QAAE,GAAG,EAAE,IAAI,CAACiB,OAAQ;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,GAAG;IAC7D;EAAC;EAAA;AAAA,EAzEyBhC,KAAK,CAACmC,SAAS;AAA9BrB,MAAM,CACVsB,YAAY,GAAG;EACpBV,MAAM,EAAE;AACV,CAAC;AAyEH,OAAO,IAAMW,eAAe,GAAGC,IAAI;AAEnC,OAAO,IAAMC,YAAY,GAAGD,IAAI;AAEhC,OAAO,IAAME,qBAAqB,GAAGF,IAAI"},"metadata":{},"sourceType":"module"}