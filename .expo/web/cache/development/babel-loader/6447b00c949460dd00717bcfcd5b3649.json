{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}\nvar NodeManager = function () {\n  function NodeManager() {\n    (0, _classCallCheck2.default)(this, NodeManager);\n  }\n  (0, _createClass2.default)(NodeManager, null, [{\n    key: \"getHandler\",\n    value: function getHandler(tag) {\n      if (tag in this.gestures) {\n        return this.gestures[tag];\n      }\n      throw new Error(\"No handler for tag \" + tag);\n    }\n  }, {\n    key: \"createGestureHandler\",\n    value: function createGestureHandler(handlerTag, handler) {\n      if (handlerTag in this.gestures) {\n        throw new Error(\"Handler with tag \" + handlerTag + \" already exists\");\n      }\n      this.gestures[handlerTag] = handler;\n      this.gestures[handlerTag].setTag(handlerTag);\n    }\n  }, {\n    key: \"dropGestureHandler\",\n    value: function dropGestureHandler(handlerTag) {\n      if (!(handlerTag in this.gestures)) {\n        return;\n      }\n      delete this.gestures[handlerTag];\n    }\n  }, {\n    key: \"getNodes\",\n    value: function getNodes() {\n      return (0, _extends2.default)({}, this.gestures);\n    }\n  }]);\n  return NodeManager;\n}();\nexports.default = NodeManager;\n_defineProperty(NodeManager, \"gestures\", {});","map":{"version":3,"sources":["NodeManager.ts"],"names":["NodeManager","tag","gestures","Error","handlerTag","handler","setTag"],"mappings":";;;;;;;;;;;;;;;;;;;;;IAI8BA,WAAf;EAAA;IAAA;EAAA;EAAA;IAAA;IAAA,2BAMYC,GAAD,EAAc;MACpC,IAAIA,GAAG,IAAI,IAAA,CAAKC,QAAhB,EAA0B;QACxB,OAAO,IAAA,CAAKA,QAAL,CAAcD,GAAd,CAAP;MACD;MAED,MAAM,IAAIE,KAAJ,yBAAgCF,GAAhC,CAAN;IACD;EAAA;IAAA;IAAA,qCAGCG,UADgC,EAEhCC,OAFgC,EAG1B;MACN,IAAID,UAAU,IAAI,IAAA,CAAKF,QAAvB,EAAiC;QAC/B,MAAM,IAAIC,KAAJ,uBAA8BC,UAA9B,qBAAN;MACD;MAED,IAAA,CAAKF,QAAL,CAAcE,UAAd,CAAA,GAA4BC,OAA5B;MACA,IAAA,CAAKH,QAAL,CAAcE,UAAd,CAAA,CAA0BE,MAA1B,CAAiCF,UAAjC,CAAA;IACD;EAAA;IAAA;IAAA,mCAEgCA,UAAD,EAA2B;MACzD,IAAI,EAAEA,UAAU,IAAI,IAAA,CAAKF,QAArB,CAAJ,EAAoC;QAClC;MAFuD;MAMzD,OAAO,IAAA,CAAKA,QAAL,CAAcE,UAAd,CAAP;IACD;EAAA;IAAA;IAAA,2BAEwB;MACvB,kCAAY,IAAA,CAAKF,QAAAA;IAClB;EAAA;EAAA;AAAA;AAAA;gBArC2BF,W,cAIxB,CAAA,C","sourcesContent":["import { ValueOf } from '../../typeUtils';\nimport { Gestures } from '../../RNGestureHandlerModule.web';\n\n// eslint-disable-next-line @typescript-eslint/no-extraneous-class\nexport default abstract class NodeManager {\n  private static gestures: Record<\n    number,\n    InstanceType<ValueOf<typeof Gestures>>\n  > = {};\n\n  public static getHandler(tag: number) {\n    if (tag in this.gestures) {\n      return this.gestures[tag];\n    }\n\n    throw new Error(`No handler for tag ${tag}`);\n  }\n\n  public static createGestureHandler(\n    handlerTag: number,\n    handler: InstanceType<ValueOf<typeof Gestures>>\n  ): void {\n    if (handlerTag in this.gestures) {\n      throw new Error(`Handler with tag ${handlerTag} already exists`);\n    }\n\n    this.gestures[handlerTag] = handler;\n    this.gestures[handlerTag].setTag(handlerTag);\n  }\n\n  public static dropGestureHandler(handlerTag: number): void {\n    if (!(handlerTag in this.gestures)) {\n      return;\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-dynamic-delete\n    delete this.gestures[handlerTag];\n  }\n\n  public static getNodes() {\n    return { ...this.gestures };\n  }\n}\n"]},"metadata":{},"sourceType":"script"}