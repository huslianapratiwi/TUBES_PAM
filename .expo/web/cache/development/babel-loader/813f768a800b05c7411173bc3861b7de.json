{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\HUSLIANA\\\\react_native_storeapp-master\\\\screens\\\\shop\\\\CartScreen.js\";\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport { useSelector, useDispatch } from 'react-redux';\nimport Colors from \"../../constants/Colors\";\nimport CartItem from \"../../components/shop/CartItem\";\nimport Card from \"../../components/UI/Card\";\nimport * as cartActions from \"../../store/actions/cart\";\nimport * as ordersActions from \"../../store/actions/orders\";\nvar CartScreen = function CartScreen(props) {\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    isLoading = _useState2[0],\n    setIsLoading = _useState2[1];\n  var cartTotalAmount = useSelector(function (state) {\n    return state.cart.totalAmount;\n  });\n  var cartItems = useSelector(function (state) {\n    var transformedCartItems = [];\n    for (var key in state.cart.items) {\n      transformedCartItems.push({\n        productId: key,\n        productTitle: state.cart.items[key].productTitle,\n        productPrice: state.cart.items[key].productPrice,\n        quantity: state.cart.items[key].quantity,\n        sum: state.cart.items[key].sum\n      });\n    }\n    return transformedCartItems.sort(function (a, b) {\n      return a.productId > b.productId ? 1 : -1;\n    });\n  });\n  var dispatch = useDispatch();\n  var sendOrderHandler = function sendOrderHandler() {\n    return _regeneratorRuntime.async(function sendOrderHandler$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            setIsLoading(true);\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(dispatch(ordersActions.addOrder(cartItems, cartTotalAmount)));\n          case 3:\n            setIsLoading(false);\n          case 4:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n  return React.createElement(View, {\n    style: styles.screen,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 5\n    }\n  }, React.createElement(Card, {\n    style: styles.summary,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    style: styles.summaryText,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }\n  }, \"Total:\", ' ', React.createElement(Text, {\n    style: styles.amount,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 11\n    }\n  }, \"$\", Math.round(cartTotalAmount.toFixed(2) * 100) / 100)), isLoading ? React.createElement(ActivityIndicator, {\n    size: \"small\",\n    color: Colors.primary,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 11\n    }\n  }) : React.createElement(Button, {\n    color: Colors.accent,\n    title: \"Order Now\",\n    disabled: cartItems.length === 0,\n    onPress: sendOrderHandler,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 11\n    }\n  })), React.createElement(FlatList, {\n    data: cartItems,\n    keyExtractor: function keyExtractor(item) {\n      return item.productId;\n    },\n    renderItem: function renderItem(itemData) {\n      return React.createElement(CartItem, {\n        quantity: itemData.item.quantity,\n        title: itemData.item.productTitle,\n        amount: itemData.item.sum,\n        deletable: true,\n        onRemove: function onRemove() {\n          dispatch(cartActions.removeFromCart(itemData.item.productId));\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }\n      });\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }\n  }));\n};\nexport var screenOptions = {\n  headerTitle: 'Your Cart'\n};\nvar styles = StyleSheet.create({\n  screen: {\n    margin: 20\n  },\n  summary: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'space-between',\n    marginBottom: 20,\n    padding: 10\n  },\n  summaryText: {\n    fontFamily: 'open-sans-bold',\n    fontSize: 18\n  },\n  amount: {\n    color: Colors.primary\n  }\n});\nexport default CartScreen;","map":{"version":3,"names":["React","useState","useSelector","useDispatch","Colors","CartItem","Card","cartActions","ordersActions","CartScreen","props","isLoading","setIsLoading","cartTotalAmount","state","cart","totalAmount","cartItems","transformedCartItems","key","items","push","productId","productTitle","productPrice","quantity","sum","sort","a","b","dispatch","sendOrderHandler","addOrder","styles","screen","summary","summaryText","amount","Math","round","toFixed","primary","accent","length","item","itemData","removeFromCart","screenOptions","headerTitle","StyleSheet","create","margin","flexDirection","alignItems","justifyContent","marginBottom","padding","fontFamily","fontSize","color"],"sources":["C:/Users/HUSLIANA/react_native_storeapp-master/screens/shop/CartScreen.js"],"sourcesContent":["import React, { useState } from 'react';\nimport {\n  View,\n  Text,\n  FlatList,\n  Button,\n  StyleSheet,\n  ActivityIndicator\n} from 'react-native';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport Colors from '../../constants/Colors';\nimport CartItem from '../../components/shop/CartItem';\nimport Card from '../../components/UI/Card';\nimport * as cartActions from '../../store/actions/cart';\nimport * as ordersActions from '../../store/actions/orders';\n\nconst CartScreen = props => {\n  const [isLoading, setIsLoading] = useState(false);\n\n  const cartTotalAmount = useSelector(state => state.cart.totalAmount);\n  const cartItems = useSelector(state => {\n    const transformedCartItems = [];\n    for (const key in state.cart.items) {\n      transformedCartItems.push({\n        productId: key,\n        productTitle: state.cart.items[key].productTitle,\n        productPrice: state.cart.items[key].productPrice,\n        quantity: state.cart.items[key].quantity,\n        sum: state.cart.items[key].sum\n      });\n    }\n    return transformedCartItems.sort((a, b) =>\n      a.productId > b.productId ? 1 : -1\n    );\n  });\n  const dispatch = useDispatch();\n\n  const sendOrderHandler = async () => {\n    setIsLoading(true);\n    await dispatch(ordersActions.addOrder(cartItems, cartTotalAmount));\n    setIsLoading(false);\n  };\n\n  return (\n    <View style={styles.screen}>\n      <Card style={styles.summary}>\n        <Text style={styles.summaryText}>\n          Total:{' '}\n          <Text style={styles.amount}>\n            ${Math.round(cartTotalAmount.toFixed(2) * 100) / 100}\n          </Text>\n        </Text>\n        {isLoading ? (\n          <ActivityIndicator size=\"small\" color={Colors.primary} />\n        ) : (\n          <Button\n            color={Colors.accent}\n            title=\"Order Now\"\n            disabled={cartItems.length === 0}\n            onPress={sendOrderHandler}\n          />\n        )}\n      </Card>\n      <FlatList\n        data={cartItems}\n        keyExtractor={item => item.productId}\n        renderItem={itemData => (\n          <CartItem\n            quantity={itemData.item.quantity}\n            title={itemData.item.productTitle}\n            amount={itemData.item.sum}\n            deletable\n            onRemove={() => {\n              dispatch(cartActions.removeFromCart(itemData.item.productId));\n            }}\n          />\n        )}\n      />\n    </View>\n  );\n};\n\nexport const screenOptions = {\n  headerTitle: 'Your Cart'\n};\n\nconst styles = StyleSheet.create({\n  screen: {\n    margin: 20\n  },\n  summary: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'space-between',\n    marginBottom: 20,\n    padding: 10\n  },\n  summaryText: {\n    fontFamily: 'open-sans-bold',\n    fontSize: 18\n  },\n  amount: {\n    color: Colors.primary\n  }\n});\n\nexport default CartScreen;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}