{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.MaybeScreen = exports.MaybeScreenContainer = exports.shouldUseActivityState = void 0;\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\nvar React = _interopRequireWildcard(require(\"react\"));\nvar _reactNative = require(\"react-native\");\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\nvar _Screens;\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nvar Screens;\ntry {\n  Screens = require('react-native-screens');\n} catch (e) {}\nvar WebScreen = function (_React$Component) {\n  (0, _inherits2.default)(WebScreen, _React$Component);\n  var _super = _createSuper(WebScreen);\n  function WebScreen() {\n    (0, _classCallCheck2.default)(this, WebScreen);\n    return _super.apply(this, arguments);\n  }\n  (0, _createClass2.default)(WebScreen, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n        active = _this$props.active,\n        style = _this$props.style,\n        rest = (0, _objectWithoutProperties2.default)(_this$props, [\"active\", \"style\"]);\n      return React.createElement(_reactNative.View, _extends({\n        hidden: !active,\n        style: [style, {\n          display: active ? 'flex' : 'none'\n        }]\n      }, rest));\n    }\n  }]);\n  return WebScreen;\n}(React.Component);\nvar AnimatedWebScreen = _reactNative.Animated.createAnimatedComponent(WebScreen);\nvar shouldUseActivityState = (_Screens = Screens) === null || _Screens === void 0 ? void 0 : _Screens.shouldUseActivityState;\nexports.shouldUseActivityState = shouldUseActivityState;\nvar MaybeScreenContainer = function MaybeScreenContainer(_ref) {\n  var enabled = _ref.enabled,\n    rest = (0, _objectWithoutProperties2.default)(_ref, [\"enabled\"]);\n  var _Screens2;\n  if (enabled && _reactNative.Platform.OS !== 'web' && (_Screens2 = Screens) !== null && _Screens2 !== void 0 && _Screens2.screensEnabled()) {\n    return React.createElement(Screens.ScreenContainer, _extends({\n      enabled: enabled\n    }, rest));\n  }\n  return React.createElement(_reactNative.View, rest);\n};\nexports.MaybeScreenContainer = MaybeScreenContainer;\nvar MaybeScreen = function MaybeScreen(_ref2) {\n  var enabled = _ref2.enabled,\n    active = _ref2.active,\n    rest = (0, _objectWithoutProperties2.default)(_ref2, [\"enabled\", \"active\"]);\n  var _Screens3;\n  if (enabled && _reactNative.Platform.OS === 'web') {\n    return React.createElement(AnimatedWebScreen, _extends({\n      active: active\n    }, rest));\n  }\n  if (enabled && (_Screens3 = Screens) !== null && _Screens3 !== void 0 && _Screens3.screensEnabled()) {\n    if (shouldUseActivityState) {\n      return React.createElement(Screens.Screen, _extends({\n        enabled: enabled,\n        activityState: active\n      }, rest));\n    } else {\n      return React.createElement(Screens.Screen, _extends({\n        enabled: enabled,\n        active: active\n      }, rest));\n    }\n  }\n  return React.createElement(_reactNative.View, rest);\n};\nexports.MaybeScreen = MaybeScreen;","map":{"version":3,"sources":["Screens.tsx"],"names":["Screens","require","e","WebScreen","React","Component","active","style","rest","props","display","AnimatedWebScreen","Animated","createAnimatedComponent","shouldUseActivityState","MaybeScreenContainer","enabled","Platform","OS","screensEnabled","MaybeScreen"],"mappings":";;;;;;;;;;;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;;;;;;;AAEA,IAAIA,OAAJ;AAEA,IAAI;EACFA,OAAO,GAAGC,OAAO,CAAC,sBAAD,CAAjBD;AACD,CAFD,CAEE,OAAOE,CAAP,EAAU,CAEX;AAED,IAGMC,SAAN;EAAA;EAAA;EAAA;IAAA;IAAA;EAAA;EAAA;IAAA;IAAA,yBAMW;MAAA,kBAC4B,IAAA,CAAKM,KAAxC;QAAQH,MAAF,eAAEA,MAAF;QAAUC,KAAV,eAAUA,KAAV;QAAoBC,IAAAA;MAE1B,OACE,KAAA,CAAA,aAAA,CAAC,iBAAD,EAAA,QAAA,CAAA;QAEE,MAAM,EAAE,CAACF,MAFX;QAGE,KAAK,EAAE,CAACC,KAAD,EAAQ;UAAEG,OAAO,EAAEJ,MAAM,GAAG,MAAH,GAAY;QAA7B,CAAR;MAHT,CAAA,EAIME,IAJN,CAAA,CADF;IAQD;EAAA;EAAA;AAAA,EAjBqBJ,KAAK,CAACC,SAA9B;AAoBA,IAAMM,iBAAiB,GAAGC,qBAAQ,CAACC,uBAATD,CAAiCT,SAAjCS,CAA1B;AAGO,IAAME,sBAAsB,GAAA,CAAA,QAAA,GAAGd,OAAH,MAAA,IAAA,IAAA,QAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAGA,QAAAA,CAASc,sBAAxC;AAAA;AAEA,IAAMC,oBAAoB,GAAG,SAAvBA,oBAAoB,OAM3B;EAAA,IALJC,OADmC,QACnCA,OADmC;IAEhCR,IAAAA;EAIC,IAAA,SAAA;EACJ,IAAIQ,OAAO,IAAIC,qBAAQ,CAACC,EAATD,KAAgB,KAA3BD,IAAAA,CAAAA,SAAAA,GAAoChB,OAApCgB,MAAAA,IAAAA,IAAAA,SAAAA,KAAAA,KAAAA,CAAAA,IAAoChB,SAAAA,CAASmB,cAATnB,EAAxC,EAAmE;IACjE,OAEE,KAAA,CAAA,aAAA,CAAC,OAAD,CAAS,eAAT,EAAA,QAAA,CAAA;MAAyB,OAAO,EAAEgB;IAAlC,CAAA,EAA+CR,IAA/C,CAAA,CAAA;EAEH;EAED,OAAO,KAAA,CAAA,aAAA,CAAC,iBAAD,EAAUA,IAAV,CAAP;AACD,CAfM;AAAA;AAiBA,IAAMY,WAAW,GAAG,SAAdA,WAAW,QAQlB;EAAA,IAPJJ,OAD0B,SAC1BA,OAD0B;IAE1BV,MAF0B,SAE1BA,MAF0B;IAGvBE,IAAAA;EAKC,IAAA,SAAA;EACJ,IAAIQ,OAAO,IAAIC,qBAAQ,CAACC,EAATD,KAAgB,KAA/B,EAAsC;IACpC,OAAO,KAAA,CAAA,aAAA,CAAC,iBAAD,EAAA,QAAA,CAAA;MAAmB,MAAM,EAAEX;IAA3B,CAAA,EAAuCE,IAAvC,CAAA,CAAP;EACD;EAED,IAAIQ,OAAO,IAAA,CAAA,SAAA,GAAIhB,OAAJ,MAAA,IAAA,IAAA,SAAA,KAAA,KAAA,CAAA,IAAIA,SAAAA,CAASmB,cAATnB,EAAf,EAA0C;IACxC,IAAIc,sBAAJ,EAA4B;MAC1B,OAEE,KAAA,CAAA,aAAA,CAAC,OAAD,CAAS,MAAT,EAAA,QAAA,CAAA;QAAgB,OAAO,EAAEE,OAAzB;QAAkC,aAAa,EAAEV;MAAjD,CAAA,EAA6DE,IAA7D,CAAA,CAAA;IAEH,CALD,MAKO;MACL,OAEE,KAAA,CAAA,aAAA,CAAC,OAAD,CAAS,MAAT,EAAA,QAAA,CAAA;QAAgB,OAAO,EAAEQ,OAAzB;QAAkC,MAAM,EAAEV;MAA1C,CAAA,EAAsDE,IAAtD,CAAA,CAAA;IAEH;EACF;EAED,OAAO,KAAA,CAAA,aAAA,CAAC,iBAAD,EAAUA,IAAV,CAAP;AACD,CA5BM;AAAA","sourcesContent":["import * as React from 'react';\nimport { Animated, View, Platform, ViewProps } from 'react-native';\n\nlet Screens: typeof import('react-native-screens') | undefined;\n\ntry {\n  Screens = require('react-native-screens');\n} catch (e) {\n  // Ignore\n}\n\n// The web implementation in react-native-screens seems buggy.\n// The view doesn't become visible after coming back in some cases.\n// So we use our custom implementation.\nclass WebScreen extends React.Component<\n  ViewProps & {\n    active: number;\n    children: React.ReactNode;\n  }\n> {\n  render() {\n    const { active, style, ...rest } = this.props;\n\n    return (\n      <View\n        // @ts-expect-error: hidden exists on web, but not in React Native\n        hidden={!active}\n        style={[style, { display: active ? 'flex' : 'none' }]}\n        {...rest}\n      />\n    );\n  }\n}\n\nconst AnimatedWebScreen = Animated.createAnimatedComponent(WebScreen);\n\n// @ts-ignore\nexport const shouldUseActivityState = Screens?.shouldUseActivityState;\n\nexport const MaybeScreenContainer = ({\n  enabled,\n  ...rest\n}: ViewProps & {\n  enabled: boolean;\n  children: React.ReactNode;\n}) => {\n  if (enabled && Platform.OS !== 'web' && Screens?.screensEnabled()) {\n    return (\n      // @ts-ignore\n      <Screens.ScreenContainer enabled={enabled} {...rest} />\n    );\n  }\n\n  return <View {...rest} />;\n};\n\nexport const MaybeScreen = ({\n  enabled,\n  active,\n  ...rest\n}: ViewProps & {\n  enabled: boolean;\n  active: 0 | 1 | 2 | Animated.AnimatedInterpolation;\n  children: React.ReactNode;\n}) => {\n  if (enabled && Platform.OS === 'web') {\n    return <AnimatedWebScreen active={active} {...rest} />;\n  }\n\n  if (enabled && Screens?.screensEnabled()) {\n    if (shouldUseActivityState) {\n      return (\n        // @ts-expect-error: there was an `active` prop and no `activityState` in older version and stackPresentation was required\n        <Screens.Screen enabled={enabled} activityState={active} {...rest} />\n      );\n    } else {\n      return (\n        // @ts-expect-error: there was an `active` prop and no `activityState` in older version and stackPresentation was required\n        <Screens.Screen enabled={enabled} active={active} {...rest} />\n      );\n    }\n  }\n\n  return <View {...rest} />;\n};\n"]},"metadata":{},"sourceType":"script"}