{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.provideCollectionReferenceClass = provideCollectionReferenceClass;\nexports.provideDocumentSnapshotClass = provideDocumentSnapshotClass;\nexports.default = void 0;\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\nvar _common = require(\"@react-native-firebase/app/lib/common\");\nvar _NativeFirebaseError = _interopRequireDefault(require(\"@react-native-firebase/app/lib/internal/NativeFirebaseError\"));\nvar _utils = require(\"./utils\");\nvar _serialize = require(\"./utils/serialize\");\nvar FirestoreCollectionReference = null;\nfunction provideCollectionReferenceClass(collectionReference) {\n  FirestoreCollectionReference = collectionReference;\n}\nvar FirestoreDocumentSnapshot = null;\nfunction provideDocumentSnapshotClass(documentSnapshot) {\n  FirestoreDocumentSnapshot = documentSnapshot;\n}\nvar _id = 0;\nvar FirestoreDocumentReference = function () {\n  function FirestoreDocumentReference(firestore, documentPath) {\n    (0, _classCallCheck2.default)(this, FirestoreDocumentReference);\n    this._firestore = firestore;\n    this._documentPath = documentPath;\n  }\n  (0, _createClass2.default)(FirestoreDocumentReference, [{\n    key: \"collection\",\n    value: function collection(collectionPath) {\n      if (!(0, _common.isString)(collectionPath)) {\n        throw new Error(\"firebase.firestore().doc().collection(*) 'collectionPath' must be a string value.\");\n      }\n      if (collectionPath === '') {\n        throw new Error(\"firebase.firestore().doc().collection(*) 'collectionPath' must be a non-empty string.\");\n      }\n      var path = this._documentPath.child(collectionPath);\n      if (!path.isCollection) {\n        throw new Error(\"firebase.firestore().doc().collection(*) 'collectionPath' must point to a collection.\");\n      }\n      return new FirestoreCollectionReference(this._firestore, path);\n    }\n  }, {\n    key: \"delete\",\n    value: function _delete() {\n      return this._firestore.native.documentDelete(this.path);\n    }\n  }, {\n    key: \"get\",\n    value: function get(options) {\n      var _this = this;\n      if (!(0, _common.isUndefined)(options) && !(0, _common.isObject)(options)) {\n        throw new Error(\"firebase.firestore().doc().get(*) 'options' must be an object is provided.\");\n      }\n      if (options && options.source && options.source !== 'default' && options.source !== 'server' && options.source !== 'cache') {\n        throw new Error(\"firebase.firestore().doc().get(*) 'options' GetOptions.source must be one of 'default', 'server' or 'cache'.\");\n      }\n      return this._firestore.native.documentGet(this.path, options).then(function (data) {\n        return new FirestoreDocumentSnapshot(_this._firestore, data);\n      });\n    }\n  }, {\n    key: \"isEqual\",\n    value: function isEqual(other) {\n      if (!(other instanceof FirestoreDocumentReference)) {\n        throw new Error(\"firebase.firestore().doc().isEqual(*) 'other' expected a DocumentReference instance.\");\n      }\n      return !(this.path !== other.path || this.firestore.app.name !== other.firestore.app.name || this.firestore.app.options.projectId !== other.firestore.app.options.projectId);\n    }\n  }, {\n    key: \"onSnapshot\",\n    value: function onSnapshot() {\n      var _this2 = this;\n      var snapshotListenOptions;\n      var callback;\n      var onNext;\n      var onError;\n      try {\n        for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n          args[_key] = arguments[_key];\n        }\n        var options = (0, _utils.parseSnapshotArgs)(args);\n        snapshotListenOptions = options.snapshotListenOptions;\n        callback = options.callback;\n        onNext = options.onNext;\n        onError = options.onError;\n      } catch (e) {\n        throw new Error(\"firebase.firestore().doc().onSnapshot(*) \" + e.message);\n      }\n      function handleSuccess(documentSnapshot) {\n        callback(documentSnapshot, null);\n        onNext(documentSnapshot);\n      }\n      function handleError(error) {\n        callback(null, error);\n        onError(error);\n      }\n      var listenerId = _id++;\n      var onSnapshotSubscription = this._firestore.emitter.addListener(this._firestore.eventNameForApp(\"firestore_document_sync_event:\" + listenerId), function (event) {\n        if (event.body.error) {\n          handleError(_NativeFirebaseError.default.fromEvent(event.body.error, 'firestore'));\n        } else {\n          var documentSnapshot = new FirestoreDocumentSnapshot(_this2._firestore, event.body.snapshot);\n          handleSuccess(documentSnapshot);\n        }\n      });\n      var unsubscribe = function unsubscribe() {\n        onSnapshotSubscription.remove();\n        _this2._firestore.native.documentOffSnapshot(listenerId);\n      };\n      this._firestore.native.documentOnSnapshot(this.path, listenerId, snapshotListenOptions);\n      return unsubscribe;\n    }\n  }, {\n    key: \"set\",\n    value: function set(data, options) {\n      if (!(0, _common.isObject)(data)) {\n        throw new Error(\"firebase.firestore().doc().set(*) 'data' must be an object.\");\n      }\n      var setOptions;\n      try {\n        setOptions = (0, _utils.parseSetOptions)(options);\n      } catch (e) {\n        throw new Error(\"firebase.firestore().doc().set(_, *) \" + e.message + \".\");\n      }\n      return this._firestore.native.documentSet(this.path, (0, _serialize.buildNativeMap)(data, this._firestore._settings.ignoreUndefinedProperties), setOptions);\n    }\n  }, {\n    key: \"update\",\n    value: function update() {\n      for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n        args[_key2] = arguments[_key2];\n      }\n      if (args.length === 0) {\n        throw new Error('firebase.firestore().doc().update(*) expected at least 1 argument but was called with 0 arguments.');\n      }\n      var data;\n      try {\n        data = (0, _utils.parseUpdateArgs)(args);\n      } catch (e) {\n        throw new Error(\"firebase.firestore().doc().update(*) \" + e.message);\n      }\n      return this._firestore.native.documentUpdate(this.path, (0, _serialize.buildNativeMap)(data, this._firestore._settings.ignoreUndefinedProperties));\n    }\n  }, {\n    key: \"firestore\",\n    get: function get() {\n      return this._firestore;\n    }\n  }, {\n    key: \"id\",\n    get: function get() {\n      return this._documentPath.id;\n    }\n  }, {\n    key: \"parent\",\n    get: function get() {\n      var parentPath = this._documentPath.parent();\n      return new FirestoreCollectionReference(this._firestore, parentPath);\n    }\n  }, {\n    key: \"path\",\n    get: function get() {\n      return this._documentPath.relativeName;\n    }\n  }]);\n  return FirestoreDocumentReference;\n}();\nexports.default = FirestoreDocumentReference;\n(0, _serialize.provideDocumentReferenceClass)(FirestoreDocumentReference);","map":{"version":3,"names":["FirestoreCollectionReference","provideCollectionReferenceClass","collectionReference","FirestoreDocumentSnapshot","provideDocumentSnapshotClass","documentSnapshot","_id","FirestoreDocumentReference","firestore","documentPath","_firestore","_documentPath","collectionPath","isString","Error","path","child","isCollection","native","documentDelete","options","isUndefined","isObject","source","documentGet","then","data","other","app","name","projectId","snapshotListenOptions","callback","onNext","onError","args","parseSnapshotArgs","e","message","handleSuccess","handleError","error","listenerId","onSnapshotSubscription","emitter","addListener","eventNameForApp","event","body","NativeError","fromEvent","snapshot","unsubscribe","remove","documentOffSnapshot","documentOnSnapshot","setOptions","parseSetOptions","documentSet","buildNativeMap","_settings","ignoreUndefinedProperties","length","parseUpdateArgs","documentUpdate","id","parentPath","parent","relativeName","provideDocumentReferenceClass"],"sources":["C:/Users/HUSLIANA/react-native-ecommerce/node_modules/@react-native-firebase/firestore/lib/FirestoreDocumentReference.js"],"sourcesContent":["/*\n * Copyright (c) 2016-present Invertase Limited & Contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this library except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\n\nimport { isObject, isString, isUndefined } from '@react-native-firebase/app/lib/common';\nimport NativeError from '@react-native-firebase/app/lib/internal/NativeFirebaseError';\nimport { parseSetOptions, parseSnapshotArgs, parseUpdateArgs } from './utils';\nimport { buildNativeMap, provideDocumentReferenceClass } from './utils/serialize';\n\n// To avoid React Native require cycle warnings\nlet FirestoreCollectionReference = null;\nexport function provideCollectionReferenceClass(collectionReference) {\n  FirestoreCollectionReference = collectionReference;\n}\n\nlet FirestoreDocumentSnapshot = null;\nexport function provideDocumentSnapshotClass(documentSnapshot) {\n  FirestoreDocumentSnapshot = documentSnapshot;\n}\n\nlet _id = 0;\n\nexport default class FirestoreDocumentReference {\n  constructor(firestore, documentPath) {\n    this._firestore = firestore;\n    this._documentPath = documentPath;\n  }\n\n  get firestore() {\n    return this._firestore;\n  }\n\n  get id() {\n    return this._documentPath.id;\n  }\n\n  get parent() {\n    const parentPath = this._documentPath.parent();\n    return new FirestoreCollectionReference(this._firestore, parentPath);\n  }\n\n  get path() {\n    return this._documentPath.relativeName;\n  }\n\n  collection(collectionPath) {\n    if (!isString(collectionPath)) {\n      throw new Error(\n        \"firebase.firestore().doc().collection(*) 'collectionPath' must be a string value.\",\n      );\n    }\n\n    if (collectionPath === '') {\n      throw new Error(\n        \"firebase.firestore().doc().collection(*) 'collectionPath' must be a non-empty string.\",\n      );\n    }\n\n    const path = this._documentPath.child(collectionPath);\n\n    if (!path.isCollection) {\n      throw new Error(\n        \"firebase.firestore().doc().collection(*) 'collectionPath' must point to a collection.\",\n      );\n    }\n\n    return new FirestoreCollectionReference(this._firestore, path);\n  }\n\n  delete() {\n    return this._firestore.native.documentDelete(this.path);\n  }\n\n  get(options) {\n    if (!isUndefined(options) && !isObject(options)) {\n      throw new Error(\"firebase.firestore().doc().get(*) 'options' must be an object is provided.\");\n    }\n\n    if (\n      options &&\n      options.source &&\n      options.source !== 'default' &&\n      options.source !== 'server' &&\n      options.source !== 'cache'\n    ) {\n      throw new Error(\n        \"firebase.firestore().doc().get(*) 'options' GetOptions.source must be one of 'default', 'server' or 'cache'.\",\n      );\n    }\n\n    return this._firestore.native\n      .documentGet(this.path, options)\n      .then(data => new FirestoreDocumentSnapshot(this._firestore, data));\n  }\n\n  isEqual(other) {\n    if (!(other instanceof FirestoreDocumentReference)) {\n      throw new Error(\n        \"firebase.firestore().doc().isEqual(*) 'other' expected a DocumentReference instance.\",\n      );\n    }\n\n    return !(\n      this.path !== other.path ||\n      this.firestore.app.name !== other.firestore.app.name ||\n      this.firestore.app.options.projectId !== other.firestore.app.options.projectId\n    );\n  }\n\n  onSnapshot(...args) {\n    let snapshotListenOptions;\n    let callback;\n    let onNext;\n    let onError;\n\n    try {\n      const options = parseSnapshotArgs(args);\n      snapshotListenOptions = options.snapshotListenOptions;\n      callback = options.callback;\n      onNext = options.onNext;\n      onError = options.onError;\n    } catch (e) {\n      throw new Error(`firebase.firestore().doc().onSnapshot(*) ${e.message}`);\n    }\n\n    function handleSuccess(documentSnapshot) {\n      callback(documentSnapshot, null);\n      onNext(documentSnapshot);\n    }\n\n    function handleError(error) {\n      callback(null, error);\n      onError(error);\n    }\n\n    const listenerId = _id++;\n\n    const onSnapshotSubscription = this._firestore.emitter.addListener(\n      this._firestore.eventNameForApp(`firestore_document_sync_event:${listenerId}`),\n      event => {\n        if (event.body.error) {\n          handleError(NativeError.fromEvent(event.body.error, 'firestore'));\n        } else {\n          const documentSnapshot = new FirestoreDocumentSnapshot(\n            this._firestore,\n            event.body.snapshot,\n          );\n          handleSuccess(documentSnapshot);\n        }\n      },\n    );\n\n    const unsubscribe = () => {\n      onSnapshotSubscription.remove();\n      this._firestore.native.documentOffSnapshot(listenerId);\n    };\n\n    this._firestore.native.documentOnSnapshot(this.path, listenerId, snapshotListenOptions);\n\n    return unsubscribe;\n  }\n\n  set(data, options) {\n    if (!isObject(data)) {\n      throw new Error(\"firebase.firestore().doc().set(*) 'data' must be an object.\");\n    }\n\n    let setOptions;\n    try {\n      setOptions = parseSetOptions(options);\n    } catch (e) {\n      throw new Error(`firebase.firestore().doc().set(_, *) ${e.message}.`);\n    }\n\n    return this._firestore.native.documentSet(\n      this.path,\n      buildNativeMap(data, this._firestore._settings.ignoreUndefinedProperties),\n      setOptions,\n    );\n  }\n\n  update(...args) {\n    if (args.length === 0) {\n      throw new Error(\n        'firebase.firestore().doc().update(*) expected at least 1 argument but was called with 0 arguments.',\n      );\n    }\n\n    let data;\n    try {\n      data = parseUpdateArgs(args);\n    } catch (e) {\n      throw new Error(`firebase.firestore().doc().update(*) ${e.message}`);\n    }\n\n    return this._firestore.native.documentUpdate(\n      this.path,\n      buildNativeMap(data, this._firestore._settings.ignoreUndefinedProperties),\n    );\n  }\n}\n\nprovideDocumentReferenceClass(FirestoreDocumentReference); // serialize\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}