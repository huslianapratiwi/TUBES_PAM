{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = useNavigationHelpers;\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\nvar React = _interopRequireWildcard(require(\"react\"));\nvar _routers = require(\"@react-navigation/routers\");\nvar _NavigationContext = _interopRequireDefault(require(\"./NavigationContext\"));\nvar _UnhandledActionContext = _interopRequireDefault(require(\"./UnhandledActionContext\"));\nvar _types = require(\"./types\");\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n_types.PrivateValueStore;\nfunction useNavigationHelpers(_ref) {\n  var onAction = _ref.onAction,\n    getState = _ref.getState,\n    emitter = _ref.emitter,\n    router = _ref.router;\n  var onUnhandledAction = React.useContext(_UnhandledActionContext.default);\n  var parentNavigationHelpers = React.useContext(_NavigationContext.default);\n  return React.useMemo(function () {\n    var dispatch = function dispatch(op) {\n      var action = typeof op === 'function' ? op(getState()) : op;\n      var handled = onAction(action);\n      if (!handled) {\n        onUnhandledAction === null || onUnhandledAction === void 0 ? void 0 : onUnhandledAction(action);\n      }\n    };\n    var actions = (0, _extends2.default)({}, router.actionCreators, _routers.CommonActions);\n    var helpers = Object.keys(actions).reduce(function (acc, name) {\n      acc[name] = function () {\n        return dispatch(actions[name].apply(actions, arguments));\n      };\n      return acc;\n    }, {});\n    return (0, _extends2.default)({}, parentNavigationHelpers, helpers, {\n      dispatch: dispatch,\n      emit: emitter.emit,\n      isFocused: parentNavigationHelpers ? parentNavigationHelpers.isFocused : function () {\n        return true;\n      },\n      canGoBack: function canGoBack() {\n        var state = getState();\n        return router.getStateForAction(state, _routers.CommonActions.goBack(), {\n          routeNames: state.routeNames,\n          routeParamList: {},\n          routeGetIdList: {}\n        }) !== null || (parentNavigationHelpers === null || parentNavigationHelpers === void 0 ? void 0 : parentNavigationHelpers.canGoBack()) || false;\n      },\n      dangerouslyGetParent: function dangerouslyGetParent() {\n        return parentNavigationHelpers;\n      },\n      dangerouslyGetState: getState\n    });\n  }, [emitter.emit, getState, onAction, onUnhandledAction, parentNavigationHelpers, router]);\n}","map":{"version":3,"sources":["useNavigationHelpers.tsx"],"names":["PrivateValueStore","useNavigationHelpers","onAction","getState","emitter","router","onUnhandledAction","React","useContext","UnhandledActionContext","parentNavigationHelpers","NavigationContext","useMemo","dispatch","op","action","handled","actions","actionCreators","CommonActions","helpers","keys","reduce","acc","name","emit","isFocused","canGoBack","state","getStateForAction","goBack","routeNames","routeParamList","routeGetIdList","dangerouslyGetParent","dangerouslyGetState"],"mappings":";;;;;;AAAA;AACA;AAOA;AACA;AAEA;AAEA;AAAA;AAEAA,wBAAiB;AAgBF,SAASC,oBAAT,OAKoD;EAAA,IAA/DC,QAAF,QAAEA,QAAF;IAAYC,QAAZ,QAAYA,QAAZ;IAAsBC,OAAtB,QAAsBA,OAAtB;IAA+BC,MAAAA,QAAAA,MAAAA;EAC/B,IAAMC,iBAAiB,GAAGC,KAAK,CAACC,UAAND,CAAiBE,+BAAjBF,CAA1B;EACA,IAAMG,uBAAuB,GAAGH,KAAK,CAACC,UAAND,CAAiBI,0BAAjBJ,CAAhC;EAEA,OAAO,KAAK,CAACK,OAAN,CAAc,YAAM;IACzB,IAAMC,QAAQ,GAAIC,SAAZD,QAAQ,CAAIC,EAAD,EAA6C;MAC5D,IAAMC,MAAM,GAAG,OAAOD,EAAP,KAAc,UAAd,GAA2BA,EAAE,CAACX,QAAQ,EAAT,CAA7B,GAA4CW,EAA3D;MAEA,IAAME,OAAO,GAAGd,QAAQ,CAACa,MAAD,CAAxB;MAEA,IAAI,CAACC,OAAL,EAAc;QACZV,iBAAiB,KAAA,IAAjBA,IAAAA,iBAAiB,KAAA,KAAA,CAAjBA,GAAAA,KAAAA,CAAAA,GAAAA,iBAAiB,CAAGS,MAAH,CAAjBT;MACD;IACF,CARD;IAUA,IAAMW,OAAO,8BACRZ,MAAM,CAACa,cADI,EAEXC,sBAAAA,CAFL;IAKA,IAAMC,OAAO,GAAG,MAAM,CAACC,IAAP,CAAYJ,OAAZ,CAAA,CAAqBK,MAArB,CACd,UAACC,GAAD,EAAMC,IAAN,EAAe;MAEbD,GAAG,CAACC,IAAD,CAAHD,GAAY;QAAA,OAAkBV,QAAQ,CAACI,OAAO,CAACO,IAAD,CAAPP,OAAAA,OAAO,YAAR,CAAtCM;MAAAA;MACA,OAAOA,GAAP;IACD,CALa,EAMd,CAAA,CANc,CAAhB;IASA,kCACKb,uBADE,EAEFU,OAFE;MAGLP,QAHK,EAGLA,QAHK;MAILY,IAAI,EAAErB,OAAO,CAACqB,IAJT;MAKLC,SAAS,EAAEhB,uBAAuB,GAC9BA,uBAAuB,CAACgB,SADM,GAE9B;QAAA,OAAM,IAPL;MAAA;MAQLC,SAAS,EAAE,qBAAM;QACf,IAAMC,KAAK,GAAGzB,QAAQ,EAAtB;QAEA,OACE,MAAM,CAAC0B,iBAAP,CAAyBD,KAAzB,EAAgCT,sBAAa,CAACW,MAAdX,EAAhC,EAAkE;UAChEY,UAAU,EAAEH,KAAK,CAACG,UAD8C;UAEhEC,cAAc,EAAE,CAAA,CAFgD;UAGhEC,cAAc,EAAE,CAAA;QAHgD,CAAlE,CAAA,KAIO,IAJP,KAKAvB,uBALA,KAAA,IAAA,IAKAA,uBALA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAKAA,uBAAuB,CAAEiB,SAAzBjB,EALA,CAAA,IAMA,KAPF;MASD,CApBI;MAqBLwB,oBAAoB,EAAE;QAAA,OAAMxB,uBArBvB;MAAA;MAsBLyB,mBAAmB,EAAEhC;IAAAA;EAIxB,CAnDM,EAmDJ,CACDC,OAAO,CAACqB,IADP,EAEDtB,QAFC,EAGDD,QAHC,EAIDI,iBAJC,EAKDI,uBALC,EAMDL,MANC,CAnDI,CAAP;AA2DD","sourcesContent":["import * as React from 'react';\nimport {\n  CommonActions,\n  NavigationAction,\n  NavigationState,\n  ParamListBase,\n  Router,\n} from '@react-navigation/routers';\nimport NavigationContext from './NavigationContext';\nimport UnhandledActionContext from './UnhandledActionContext';\nimport type { NavigationEventEmitter } from './useEventEmitter';\nimport { NavigationHelpers, NavigationProp, PrivateValueStore } from './types';\n\n// This is to make TypeScript compiler happy\n// eslint-disable-next-line babel/no-unused-expressions\nPrivateValueStore;\n\ntype Options<State extends NavigationState, Action extends NavigationAction> = {\n  onAction: (\n    action: NavigationAction,\n    visitedNavigators?: Set<string>\n  ) => boolean;\n  getState: () => State;\n  emitter: NavigationEventEmitter<any>;\n  router: Router<State, Action>;\n};\n\n/**\n * Navigation object with helper methods to be used by a navigator.\n * This object includes methods for common actions as well as methods the parent screen's navigation object.\n */\nexport default function useNavigationHelpers<\n  State extends NavigationState,\n  ActionHelpers extends Record<string, () => void>,\n  Action extends NavigationAction,\n  EventMap extends Record<string, any>\n>({ onAction, getState, emitter, router }: Options<State, Action>) {\n  const onUnhandledAction = React.useContext(UnhandledActionContext);\n  const parentNavigationHelpers = React.useContext(NavigationContext);\n\n  return React.useMemo(() => {\n    const dispatch = (op: Action | ((state: State) => Action)) => {\n      const action = typeof op === 'function' ? op(getState()) : op;\n\n      const handled = onAction(action);\n\n      if (!handled) {\n        onUnhandledAction?.(action);\n      }\n    };\n\n    const actions = {\n      ...router.actionCreators,\n      ...CommonActions,\n    };\n\n    const helpers = Object.keys(actions).reduce<Record<string, () => void>>(\n      (acc, name) => {\n        // @ts-expect-error: name is a valid key, but TypeScript is dumb\n        acc[name] = (...args: any) => dispatch(actions[name](...args));\n        return acc;\n      },\n      {}\n    );\n\n    return {\n      ...parentNavigationHelpers,\n      ...helpers,\n      dispatch,\n      emit: emitter.emit,\n      isFocused: parentNavigationHelpers\n        ? parentNavigationHelpers.isFocused\n        : () => true,\n      canGoBack: () => {\n        const state = getState();\n\n        return (\n          router.getStateForAction(state, CommonActions.goBack() as Action, {\n            routeNames: state.routeNames,\n            routeParamList: {},\n            routeGetIdList: {},\n          }) !== null ||\n          parentNavigationHelpers?.canGoBack() ||\n          false\n        );\n      },\n      dangerouslyGetParent: () => parentNavigationHelpers as any,\n      dangerouslyGetState: getState,\n    } as NavigationHelpers<ParamListBase, EventMap> &\n      (NavigationProp<ParamListBase, string, any, any, any> | undefined) &\n      ActionHelpers;\n  }, [\n    emitter.emit,\n    getState,\n    onAction,\n    onUnhandledAction,\n    parentNavigationHelpers,\n    router,\n  ]);\n}\n"]},"metadata":{},"sourceType":"script"}