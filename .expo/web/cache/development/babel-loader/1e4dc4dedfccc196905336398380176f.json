{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = exports.TypeFieldValueTimestamp = exports.TypeFieldValueUnion = exports.TypeFieldValueRemove = exports.TypeFieldValueIncrement = exports.TypeFieldValueDelete = void 0;\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\nvar _common = require(\"@react-native-firebase/app/lib/common\");\nvar _serialize = require(\"./utils/serialize\");\nvar TypeFieldValueDelete = 'delete';\nexports.TypeFieldValueDelete = TypeFieldValueDelete;\nvar TypeFieldValueIncrement = 'increment';\nexports.TypeFieldValueIncrement = TypeFieldValueIncrement;\nvar TypeFieldValueRemove = 'array_remove';\nexports.TypeFieldValueRemove = TypeFieldValueRemove;\nvar TypeFieldValueUnion = 'array_union';\nexports.TypeFieldValueUnion = TypeFieldValueUnion;\nvar TypeFieldValueTimestamp = 'timestamp';\nexports.TypeFieldValueTimestamp = TypeFieldValueTimestamp;\nfunction validateArrayElements(elements) {\n  for (var i = 0; i < elements.length; i++) {\n    var element = elements[i];\n    if (element instanceof FirestoreFieldValue) {\n      throw new Error('FieldValue instance cannot be used with other FieldValue methods.');\n    }\n    if ((0, _common.isArray)(element)) {\n      throw new Error('Nested arrays are not supported');\n    }\n  }\n}\nvar FirestoreFieldValue = function () {\n  function FirestoreFieldValue() {\n    var internal = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n    var type = arguments.length > 1 ? arguments[1] : undefined;\n    var elements = arguments.length > 2 ? arguments[2] : undefined;\n    (0, _classCallCheck2.default)(this, FirestoreFieldValue);\n    if (internal === false) {\n      throw new Error('firebase.firestore.FieldValue constructor is private, use FieldValue.<field>() instead.');\n    }\n    this._type = type;\n    this._elements = elements;\n  }\n  (0, _createClass2.default)(FirestoreFieldValue, [{\n    key: \"isEqual\",\n    value: function isEqual(other) {\n      if (!(other instanceof FirestoreFieldValue)) {\n        throw new Error(\"firebase.firestore.FieldValue.isEqual(*) 'other' expected a FieldValue instance.\");\n      }\n      return this._type === other._type && JSON.stringify(this._elements) === JSON.stringify(other._elements);\n    }\n  }], [{\n    key: \"delete\",\n    value: function _delete() {\n      return new FirestoreFieldValue(true, TypeFieldValueDelete);\n    }\n  }, {\n    key: \"increment\",\n    value: function increment(n) {\n      if (!(0, _common.isNumber)(n)) {\n        throw new Error(\"firebase.firestore.FieldValue.increment(*) 'n' expected a number value.\");\n      }\n      return new FirestoreFieldValue(true, TypeFieldValueIncrement, n);\n    }\n  }, {\n    key: \"serverTimestamp\",\n    value: function serverTimestamp() {\n      return new FirestoreFieldValue(true, TypeFieldValueTimestamp);\n    }\n  }, {\n    key: \"arrayUnion\",\n    value: function arrayUnion() {\n      for (var _len = arguments.length, elements = new Array(_len), _key = 0; _key < _len; _key++) {\n        elements[_key] = arguments[_key];\n      }\n      try {\n        validateArrayElements(elements);\n      } catch (e) {\n        throw new Error(\"firebase.firestore.FieldValue.arrayUnion(*) 'elements' called with invalid data. \" + e.message);\n      }\n      return new FirestoreFieldValue(true, TypeFieldValueUnion, (0, _serialize.buildNativeArray)(elements));\n    }\n  }, {\n    key: \"arrayRemove\",\n    value: function arrayRemove() {\n      for (var _len2 = arguments.length, elements = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n        elements[_key2] = arguments[_key2];\n      }\n      try {\n        validateArrayElements(elements);\n      } catch (e) {\n        throw new Error(\"firebase.firestore.FieldValue.arrayRemove(*) 'elements' called with invalid data. \" + e.message);\n      }\n      return new FirestoreFieldValue(true, TypeFieldValueRemove, (0, _serialize.buildNativeArray)(elements));\n    }\n  }]);\n  return FirestoreFieldValue;\n}();\nexports.default = FirestoreFieldValue;\n(0, _serialize.provideFieldValueClass)(FirestoreFieldValue);","map":{"version":3,"names":["TypeFieldValueDelete","TypeFieldValueIncrement","TypeFieldValueRemove","TypeFieldValueUnion","TypeFieldValueTimestamp","validateArrayElements","elements","i","length","element","FirestoreFieldValue","Error","isArray","internal","type","_type","_elements","other","JSON","stringify","n","isNumber","e","message","buildNativeArray","provideFieldValueClass"],"sources":["C:/Users/HUSLIANA/react-native-ecommerce/node_modules/@react-native-firebase/firestore/lib/FirestoreFieldValue.js"],"sourcesContent":["/*\n * Copyright (c) 2016-present Invertase Limited & Contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this library except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\n\nimport { isArray, isNumber } from '@react-native-firebase/app/lib/common';\nimport { buildNativeArray, provideFieldValueClass } from './utils/serialize';\n\nexport const TypeFieldValueDelete = 'delete';\nexport const TypeFieldValueIncrement = 'increment';\nexport const TypeFieldValueRemove = 'array_remove';\nexport const TypeFieldValueUnion = 'array_union';\nexport const TypeFieldValueTimestamp = 'timestamp';\n\nfunction validateArrayElements(elements) {\n  for (let i = 0; i < elements.length; i++) {\n    const element = elements[i];\n\n    if (element instanceof FirestoreFieldValue) {\n      throw new Error('FieldValue instance cannot be used with other FieldValue methods.');\n    }\n\n    if (isArray(element)) {\n      throw new Error('Nested arrays are not supported');\n    }\n  }\n}\n\nexport default class FirestoreFieldValue {\n  constructor(internal = false, type, elements) {\n    if (internal === false) {\n      throw new Error(\n        'firebase.firestore.FieldValue constructor is private, use FieldValue.<field>() instead.',\n      );\n    }\n\n    this._type = type;\n    this._elements = elements;\n  }\n\n  static delete() {\n    return new FirestoreFieldValue(true, TypeFieldValueDelete);\n  }\n\n  static increment(n) {\n    if (!isNumber(n)) {\n      throw new Error(\"firebase.firestore.FieldValue.increment(*) 'n' expected a number value.\");\n    }\n\n    return new FirestoreFieldValue(true, TypeFieldValueIncrement, n);\n  }\n\n  static serverTimestamp() {\n    return new FirestoreFieldValue(true, TypeFieldValueTimestamp);\n  }\n\n  static arrayUnion(...elements) {\n    try {\n      validateArrayElements(elements);\n    } catch (e) {\n      throw new Error(\n        `firebase.firestore.FieldValue.arrayUnion(*) 'elements' called with invalid data. ${e.message}`,\n      );\n    }\n\n    return new FirestoreFieldValue(true, TypeFieldValueUnion, buildNativeArray(elements));\n  }\n\n  static arrayRemove(...elements) {\n    try {\n      validateArrayElements(elements);\n    } catch (e) {\n      throw new Error(\n        `firebase.firestore.FieldValue.arrayRemove(*) 'elements' called with invalid data. ${e.message}`,\n      );\n    }\n\n    return new FirestoreFieldValue(true, TypeFieldValueRemove, buildNativeArray(elements));\n  }\n\n  isEqual(other) {\n    if (!(other instanceof FirestoreFieldValue)) {\n      throw new Error(\n        \"firebase.firestore.FieldValue.isEqual(*) 'other' expected a FieldValue instance.\",\n      );\n    }\n\n    return (\n      this._type === other._type &&\n      JSON.stringify(this._elements) === JSON.stringify(other._elements)\n    );\n  }\n}\n\nprovideFieldValueClass(FirestoreFieldValue); // serialize\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}