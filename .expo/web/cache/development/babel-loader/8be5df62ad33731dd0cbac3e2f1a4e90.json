{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\nvar _assertThisInitialized2 = _interopRequireDefault(require(\"@babel/runtime/helpers/assertThisInitialized\"));\nvar _get2 = _interopRequireDefault(require(\"@babel/runtime/helpers/get\"));\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\nvar _State = require(\"../../State\");\nvar _constants = require(\"../constants\");\nvar _GestureHandler2 = _interopRequireDefault(require(\"./GestureHandler\"));\nvar _ScaleGestureDetector = _interopRequireDefault(require(\"../detectors/ScaleGestureDetector\"));\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}\nvar PinchGestureHandler = function (_GestureHandler) {\n  (0, _inherits2.default)(PinchGestureHandler, _GestureHandler);\n  var _super = _createSuper(PinchGestureHandler);\n  function PinchGestureHandler() {\n    var _this;\n    (0, _classCallCheck2.default)(this, PinchGestureHandler);\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    _this = _super.call.apply(_super, [this].concat(args));\n    _defineProperty((0, _assertThisInitialized2.default)(_this), \"scale\", 1);\n    _defineProperty((0, _assertThisInitialized2.default)(_this), \"velocity\", 0);\n    _defineProperty((0, _assertThisInitialized2.default)(_this), \"startingSpan\", 0);\n    _defineProperty((0, _assertThisInitialized2.default)(_this), \"spanSlop\", _constants.DEFAULT_TOUCH_SLOP);\n    _defineProperty((0, _assertThisInitialized2.default)(_this), \"scaleDetectorListener\", {\n      onScaleBegin: function onScaleBegin(detector) {\n        _this.startingSpan = detector.getCurrentSpan();\n        return true;\n      },\n      onScale: function onScale(detector) {\n        var prevScaleFactor = _this.scale;\n        _this.scale *= detector.getScaleFactor(_this.tracker.getTrackedPointersCount());\n        var delta = detector.getTimeDelta();\n        if (delta > 0) {\n          _this.velocity = (_this.scale - prevScaleFactor) / delta;\n        }\n        if (Math.abs(_this.startingSpan - detector.getCurrentSpan()) >= _this.spanSlop && _this.currentState === _State.State.BEGAN) {\n          _this.activate();\n        }\n        return true;\n      },\n      onScaleEnd: function onScaleEnd(_detector) {}\n    });\n    _defineProperty((0, _assertThisInitialized2.default)(_this), \"scaleGestureDetector\", new _ScaleGestureDetector.default(_this.scaleDetectorListener));\n    return _this;\n  }\n  (0, _createClass2.default)(PinchGestureHandler, [{\n    key: \"init\",\n    value: function init(ref, propsRef) {\n      (0, _get2.default)((0, _getPrototypeOf2.default)(PinchGestureHandler.prototype), \"init\", this).call(this, ref, propsRef);\n      this.setShouldCancelWhenOutside(false);\n    }\n  }, {\n    key: \"updateGestureConfig\",\n    value: function updateGestureConfig(_ref) {\n      var _ref$enabled = _ref.enabled,\n        enabled = _ref$enabled === void 0 ? true : _ref$enabled,\n        props = (0, _objectWithoutProperties2.default)(_ref, [\"enabled\"]);\n      (0, _get2.default)((0, _getPrototypeOf2.default)(PinchGestureHandler.prototype), \"updateGestureConfig\", this).call(this, (0, _extends2.default)({\n        enabled: enabled\n      }, props));\n    }\n  }, {\n    key: \"transformNativeEvent\",\n    value: function transformNativeEvent() {\n      return {\n        focalX: this.scaleGestureDetector.getFocusX(),\n        focalY: this.scaleGestureDetector.getFocusY(),\n        velocity: this.velocity,\n        scale: this.scale\n      };\n    }\n  }, {\n    key: \"onPointerDown\",\n    value: function onPointerDown(event) {\n      this.tracker.addToTracker(event);\n      (0, _get2.default)((0, _getPrototypeOf2.default)(PinchGestureHandler.prototype), \"onPointerDown\", this).call(this, event);\n    }\n  }, {\n    key: \"onPointerAdd\",\n    value: function onPointerAdd(event) {\n      this.tracker.addToTracker(event);\n      (0, _get2.default)((0, _getPrototypeOf2.default)(PinchGestureHandler.prototype), \"onPointerAdd\", this).call(this, event);\n      this.tryBegin();\n      this.scaleGestureDetector.onTouchEvent(event, this.tracker);\n    }\n  }, {\n    key: \"onPointerUp\",\n    value: function onPointerUp(event) {\n      (0, _get2.default)((0, _getPrototypeOf2.default)(PinchGestureHandler.prototype), \"onPointerUp\", this).call(this, event);\n      this.tracker.removeFromTracker(event.pointerId);\n      if (this.currentState !== _State.State.ACTIVE) {\n        return;\n      }\n      this.scaleGestureDetector.onTouchEvent(event, this.tracker);\n      if (this.currentState === _State.State.ACTIVE) {\n        this.end();\n      } else {\n        this.fail();\n      }\n    }\n  }, {\n    key: \"onPointerRemove\",\n    value: function onPointerRemove(event) {\n      (0, _get2.default)((0, _getPrototypeOf2.default)(PinchGestureHandler.prototype), \"onPointerRemove\", this).call(this, event);\n      this.scaleGestureDetector.onTouchEvent(event, this.tracker);\n      this.tracker.removeFromTracker(event.pointerId);\n      if (this.currentState === _State.State.ACTIVE && this.tracker.getTrackedPointersCount() < 2) {\n        this.end();\n      }\n    }\n  }, {\n    key: \"onPointerMove\",\n    value: function onPointerMove(event) {\n      if (this.tracker.getTrackedPointersCount() < 2) {\n        return;\n      }\n      this.tracker.track(event);\n      this.scaleGestureDetector.onTouchEvent(event, this.tracker);\n      (0, _get2.default)((0, _getPrototypeOf2.default)(PinchGestureHandler.prototype), \"onPointerMove\", this).call(this, event);\n    }\n  }, {\n    key: \"onPointerOutOfBounds\",\n    value: function onPointerOutOfBounds(event) {\n      if (this.tracker.getTrackedPointersCount() < 2) {\n        return;\n      }\n      this.tracker.track(event);\n      this.scaleGestureDetector.onTouchEvent(event, this.tracker);\n      (0, _get2.default)((0, _getPrototypeOf2.default)(PinchGestureHandler.prototype), \"onPointerOutOfBounds\", this).call(this, event);\n    }\n  }, {\n    key: \"onPointerCancel\",\n    value: function onPointerCancel(event) {\n      (0, _get2.default)((0, _getPrototypeOf2.default)(PinchGestureHandler.prototype), \"onPointerCancel\", this).call(this, event);\n      this.reset();\n    }\n  }, {\n    key: \"tryBegin\",\n    value: function tryBegin() {\n      if (this.currentState !== _State.State.UNDETERMINED) {\n        return;\n      }\n      this.resetProgress();\n      this.begin();\n    }\n  }, {\n    key: \"activate\",\n    value: function activate(force) {\n      if (this.currentState !== _State.State.ACTIVE) {\n        this.resetProgress();\n      }\n      (0, _get2.default)((0, _getPrototypeOf2.default)(PinchGestureHandler.prototype), \"activate\", this).call(this, force);\n    }\n  }, {\n    key: \"onReset\",\n    value: function onReset() {\n      this.resetProgress();\n    }\n  }, {\n    key: \"resetProgress\",\n    value: function resetProgress() {\n      if (this.currentState === _State.State.ACTIVE) {\n        return;\n      }\n      this.velocity = 0;\n      this.scale = 1;\n    }\n  }]);\n  return PinchGestureHandler;\n}(_GestureHandler2.default);\nexports.default = PinchGestureHandler;","map":{"version":3,"sources":["PinchGestureHandler.ts"],"names":["PinchGestureHandler","GestureHandler","DEFAULT_TOUCH_SLOP","onScaleBegin","detector","startingSpan","getCurrentSpan","onScale","prevScaleFactor","scale","getScaleFactor","tracker","getTrackedPointersCount","delta","getTimeDelta","velocity","Math","abs","spanSlop","currentState","State","BEGAN","activate","onScaleEnd","_detector","ScaleGestureDetector","scaleDetectorListener","ref","propsRef","setShouldCancelWhenOutside","enabled","props","focalX","scaleGestureDetector","getFocusX","focalY","getFocusY","event","addToTracker","tryBegin","onTouchEvent","removeFromTracker","pointerId","ACTIVE","end","fail","track","reset","UNDETERMINED","resetProgress","begin","force"],"mappings":"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","sourcesContent":["import { State } from '../../State';\nimport { DEFAULT_TOUCH_SLOP } from '../constants';\nimport { AdaptedEvent, Config } from '../interfaces';\n\nimport GestureHandler from './GestureHandler';\nimport ScaleGestureDetector, {\n  ScaleGestureListener,\n} from '../detectors/ScaleGestureDetector';\n\nexport default class PinchGestureHandler extends GestureHandler {\n  private scale = 1;\n  private velocity = 0;\n\n  private startingSpan = 0;\n  private spanSlop = DEFAULT_TOUCH_SLOP;\n\n  private scaleDetectorListener: ScaleGestureListener = {\n    onScaleBegin: (detector: ScaleGestureDetector): boolean => {\n      this.startingSpan = detector.getCurrentSpan();\n      return true;\n    },\n    onScale: (detector: ScaleGestureDetector): boolean => {\n      const prevScaleFactor: number = this.scale;\n      this.scale *= detector.getScaleFactor(\n        this.tracker.getTrackedPointersCount()\n      );\n\n      const delta = detector.getTimeDelta();\n      if (delta > 0) {\n        this.velocity = (this.scale - prevScaleFactor) / delta;\n      }\n\n      if (\n        Math.abs(this.startingSpan - detector.getCurrentSpan()) >=\n          this.spanSlop &&\n        this.currentState === State.BEGAN\n      ) {\n        this.activate();\n      }\n      return true;\n    },\n    onScaleEnd: (\n      _detector: ScaleGestureDetector\n      // eslint-disable-next-line @typescript-eslint/no-empty-function\n    ): void => {},\n  };\n\n  private scaleGestureDetector: ScaleGestureDetector = new ScaleGestureDetector(\n    this.scaleDetectorListener\n  );\n\n  public init(ref: number, propsRef: React.RefObject<unknown>) {\n    super.init(ref, propsRef);\n\n    this.setShouldCancelWhenOutside(false);\n  }\n\n  public updateGestureConfig({ enabled = true, ...props }: Config): void {\n    super.updateGestureConfig({ enabled: enabled, ...props });\n  }\n\n  protected transformNativeEvent() {\n    return {\n      focalX: this.scaleGestureDetector.getFocusX(),\n      focalY: this.scaleGestureDetector.getFocusY(),\n      velocity: this.velocity,\n      scale: this.scale,\n    };\n  }\n\n  protected onPointerDown(event: AdaptedEvent): void {\n    this.tracker.addToTracker(event);\n    super.onPointerDown(event);\n  }\n\n  protected onPointerAdd(event: AdaptedEvent): void {\n    this.tracker.addToTracker(event);\n    super.onPointerAdd(event);\n    this.tryBegin();\n    this.scaleGestureDetector.onTouchEvent(event, this.tracker);\n  }\n\n  protected onPointerUp(event: AdaptedEvent): void {\n    super.onPointerUp(event);\n    this.tracker.removeFromTracker(event.pointerId);\n    if (this.currentState !== State.ACTIVE) {\n      return;\n    }\n    this.scaleGestureDetector.onTouchEvent(event, this.tracker);\n\n    if (this.currentState === State.ACTIVE) {\n      this.end();\n    } else {\n      this.fail();\n    }\n  }\n\n  protected onPointerRemove(event: AdaptedEvent): void {\n    super.onPointerRemove(event);\n    this.scaleGestureDetector.onTouchEvent(event, this.tracker);\n    this.tracker.removeFromTracker(event.pointerId);\n\n    if (\n      this.currentState === State.ACTIVE &&\n      this.tracker.getTrackedPointersCount() < 2\n    ) {\n      this.end();\n    }\n  }\n\n  protected onPointerMove(event: AdaptedEvent): void {\n    if (this.tracker.getTrackedPointersCount() < 2) {\n      return;\n    }\n    this.tracker.track(event);\n\n    this.scaleGestureDetector.onTouchEvent(event, this.tracker);\n    super.onPointerMove(event);\n  }\n  protected onPointerOutOfBounds(event: AdaptedEvent): void {\n    if (this.tracker.getTrackedPointersCount() < 2) {\n      return;\n    }\n    this.tracker.track(event);\n\n    this.scaleGestureDetector.onTouchEvent(event, this.tracker);\n    super.onPointerOutOfBounds(event);\n  }\n\n  protected onPointerCancel(event: AdaptedEvent): void {\n    super.onPointerCancel(event);\n    this.reset();\n  }\n\n  private tryBegin(): void {\n    if (this.currentState !== State.UNDETERMINED) {\n      return;\n    }\n\n    this.resetProgress();\n    this.begin();\n  }\n\n  public activate(force?: boolean): void {\n    if (this.currentState !== State.ACTIVE) {\n      this.resetProgress();\n    }\n\n    super.activate(force);\n  }\n\n  protected onReset(): void {\n    this.resetProgress();\n  }\n\n  protected resetProgress(): void {\n    if (this.currentState === State.ACTIVE) {\n      return;\n    }\n    this.velocity = 0;\n    this.scale = 1;\n  }\n}\n"]},"metadata":{},"sourceType":"script"}