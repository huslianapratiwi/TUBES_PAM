{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.workerGetError = workerGetError;\nexports.watcherGetError = watcherGetError;\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\nvar _effects = require(\"redux-saga/effects\");\nvar _actionTypes = require(\"../actionTypes\");\nvar _marked = _regenerator.default.mark(workerGetError),\n  _marked2 = _regenerator.default.mark(watcherGetError);\nfunction workerGetError(action) {\n  var error;\n  return _regenerator.default.wrap(function workerGetError$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          if (!action) {\n            _context.next = 4;\n            break;\n          }\n          error = action.payload.error;\n          _context.next = 4;\n          return (0, _effects.put)({\n            type: \"SET_ERROR_SUCCESS\",\n            payload: error\n          });\n        case 4:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked);\n}\nfunction watcherGetError() {\n  return _regenerator.default.wrap(function watcherGetError$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.next = 2;\n          return (0, _effects.takeLatest)(_actionTypes.SET_ERROR, workerGetError);\n        case 2:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, _marked2);\n}","map":{"version":3,"names":["workerGetError","watcherGetError","action","error","payload","put","type","takeLatest","SET_ERROR"],"sources":["C:/Users/HUSLIANA/react-native-ecommerce/app/redux/saga/errorSaga.js"],"sourcesContent":["import { put, takeLatest } from 'redux-saga/effects'\r\nimport {  SET_ERROR } from '../actionTypes';\r\nexport function* workerGetError(action) {\r\n  if (action) {\r\n      const {error}=action.payload\r\n  \r\n    yield put({ type: \"SET_ERROR_SUCCESS\", payload: error })\r\n  }\r\n}\r\nexport function* watcherGetError() {\r\n  yield takeLatest(SET_ERROR,workerGetError)\r\n}"],"mappings":";;;;;;;AAAA;AACA;AAA4C,wCAC3BA,cAAc;EAAA,qCAOdC,eAAe;AAPzB,SAAUD,cAAc,CAACE,MAAM;EAAA;EAAA;IAAA;MAAA;QAAA;UAAA,KAChCA,MAAM;YAAA;YAAA;UAAA;UACCC,KAAK,GAAED,MAAM,CAACE,OAAO,CAArBD,KAAK;UAAA;UAEd,OAAM,IAAAE,YAAG,EAAC;YAAEC,IAAI,EAAE,mBAAmB;YAAEF,OAAO,EAAED;UAAM,CAAC,CAAC;QAAA;QAAA;UAAA;MAAA;IAAA;EAAA;AAAA;AAGrD,SAAUF,eAAe;EAAA;IAAA;MAAA;QAAA;UAAA;UAC9B,OAAM,IAAAM,mBAAU,EAACC,sBAAS,EAACR,cAAc,CAAC;QAAA;QAAA;UAAA;MAAA;IAAA;EAAA;AAAA"},"metadata":{},"sourceType":"script"}